ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stream_buffer.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.prvBytesInBuffer,"ax",%progbits
  16              		.align	1
  17              		.arch armv7-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	prvBytesInBuffer:
  24              	.LVL0:
  25              	.LFB23:
  26              		.file 1 "Src/stream_buffer.c"
   1:Src/stream_buffer.c **** /*
   2:Src/stream_buffer.c ****  * FreeRTOS Kernel V10.4.6
   3:Src/stream_buffer.c ****  * Copyright (C) 2021 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Src/stream_buffer.c ****  *
   5:Src/stream_buffer.c ****  * SPDX-License-Identifier: MIT
   6:Src/stream_buffer.c ****  *
   7:Src/stream_buffer.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   8:Src/stream_buffer.c ****  * this software and associated documentation files (the "Software"), to deal in
   9:Src/stream_buffer.c ****  * the Software without restriction, including without limitation the rights to
  10:Src/stream_buffer.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
  11:Src/stream_buffer.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  12:Src/stream_buffer.c ****  * subject to the following conditions:
  13:Src/stream_buffer.c ****  *
  14:Src/stream_buffer.c ****  * The above copyright notice and this permission notice shall be included in all
  15:Src/stream_buffer.c ****  * copies or substantial portions of the Software.
  16:Src/stream_buffer.c ****  *
  17:Src/stream_buffer.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  18:Src/stream_buffer.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  19:Src/stream_buffer.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  20:Src/stream_buffer.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  21:Src/stream_buffer.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  22:Src/stream_buffer.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  23:Src/stream_buffer.c ****  *
  24:Src/stream_buffer.c ****  * https://www.FreeRTOS.org
  25:Src/stream_buffer.c ****  * https://github.com/FreeRTOS
  26:Src/stream_buffer.c ****  *
  27:Src/stream_buffer.c ****  */
  28:Src/stream_buffer.c **** 
  29:Src/stream_buffer.c **** /* Standard includes. */
  30:Src/stream_buffer.c **** #include <stdint.h>
  31:Src/stream_buffer.c **** #include <string.h>
  32:Src/stream_buffer.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 2


  33:Src/stream_buffer.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  34:Src/stream_buffer.c ****  * all the API functions to use the MPU wrappers.  That should only be done when
  35:Src/stream_buffer.c ****  * task.h is included from an application file. */
  36:Src/stream_buffer.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  37:Src/stream_buffer.c **** 
  38:Src/stream_buffer.c **** /* FreeRTOS includes. */
  39:Src/stream_buffer.c **** #include "FreeRTOS.h"
  40:Src/stream_buffer.c **** #include "task.h"
  41:Src/stream_buffer.c **** #include "stream_buffer.h"
  42:Src/stream_buffer.c **** 
  43:Src/stream_buffer.c **** #if ( configUSE_TASK_NOTIFICATIONS != 1 )
  44:Src/stream_buffer.c ****     #error configUSE_TASK_NOTIFICATIONS must be set to 1 to build stream_buffer.c
  45:Src/stream_buffer.c **** #endif
  46:Src/stream_buffer.c **** 
  47:Src/stream_buffer.c **** /* Lint e961, e9021 and e750 are suppressed as a MISRA exception justified
  48:Src/stream_buffer.c ****  * because the MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined
  49:Src/stream_buffer.c ****  * for the header files above, but not in this file, in order to generate the
  50:Src/stream_buffer.c ****  * correct privileged Vs unprivileged linkage and placement. */
  51:Src/stream_buffer.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750 !e9021. */
  52:Src/stream_buffer.c **** 
  53:Src/stream_buffer.c **** /* If the user has not provided application specific Rx notification macros,
  54:Src/stream_buffer.c ****  * or #defined the notification macros away, then provide default implementations
  55:Src/stream_buffer.c ****  * that uses task notifications. */
  56:Src/stream_buffer.c **** /*lint -save -e9026 Function like macros allowed and needed here so they can be overridden. */
  57:Src/stream_buffer.c **** #ifndef sbRECEIVE_COMPLETED
  58:Src/stream_buffer.c ****     #define sbRECEIVE_COMPLETED( pxStreamBuffer )                         \
  59:Src/stream_buffer.c ****     vTaskSuspendAll();                                                    \
  60:Src/stream_buffer.c ****     {                                                                     \
  61:Src/stream_buffer.c ****         if( ( pxStreamBuffer )->xTaskWaitingToSend != NULL )              \
  62:Src/stream_buffer.c ****         {                                                                 \
  63:Src/stream_buffer.c ****             ( void ) xTaskNotify( ( pxStreamBuffer )->xTaskWaitingToSend, \
  64:Src/stream_buffer.c ****                                   ( uint32_t ) 0,                         \
  65:Src/stream_buffer.c ****                                   eNoAction );                            \
  66:Src/stream_buffer.c ****             ( pxStreamBuffer )->xTaskWaitingToSend = NULL;                \
  67:Src/stream_buffer.c ****         }                                                                 \
  68:Src/stream_buffer.c ****     }                                                                     \
  69:Src/stream_buffer.c ****     ( void ) xTaskResumeAll();
  70:Src/stream_buffer.c **** #endif /* sbRECEIVE_COMPLETED */
  71:Src/stream_buffer.c **** 
  72:Src/stream_buffer.c **** #ifndef sbRECEIVE_COMPLETED_FROM_ISR
  73:Src/stream_buffer.c ****     #define sbRECEIVE_COMPLETED_FROM_ISR( pxStreamBuffer,                            \
  74:Src/stream_buffer.c ****                                           pxHigherPriorityTaskWoken )                \
  75:Src/stream_buffer.c ****     {                                                                                \
  76:Src/stream_buffer.c ****         UBaseType_t uxSavedInterruptStatus;                                          \
  77:Src/stream_buffer.c ****                                                                                      \
  78:Src/stream_buffer.c ****         uxSavedInterruptStatus = ( UBaseType_t ) portSET_INTERRUPT_MASK_FROM_ISR();  \
  79:Src/stream_buffer.c ****         {                                                                            \
  80:Src/stream_buffer.c ****             if( ( pxStreamBuffer )->xTaskWaitingToSend != NULL )                     \
  81:Src/stream_buffer.c ****             {                                                                        \
  82:Src/stream_buffer.c ****                 ( void ) xTaskNotifyFromISR( ( pxStreamBuffer )->xTaskWaitingToSend, \
  83:Src/stream_buffer.c ****                                              ( uint32_t ) 0,                         \
  84:Src/stream_buffer.c ****                                              eNoAction,                              \
  85:Src/stream_buffer.c ****                                              pxHigherPriorityTaskWoken );            \
  86:Src/stream_buffer.c ****                 ( pxStreamBuffer )->xTaskWaitingToSend = NULL;                       \
  87:Src/stream_buffer.c ****             }                                                                        \
  88:Src/stream_buffer.c ****         }                                                                            \
  89:Src/stream_buffer.c ****         portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );                 \
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 3


  90:Src/stream_buffer.c ****     }
  91:Src/stream_buffer.c **** #endif /* sbRECEIVE_COMPLETED_FROM_ISR */
  92:Src/stream_buffer.c **** 
  93:Src/stream_buffer.c **** /* If the user has not provided an application specific Tx notification macro,
  94:Src/stream_buffer.c ****  * or #defined the notification macro away, them provide a default implementation
  95:Src/stream_buffer.c ****  * that uses task notifications. */
  96:Src/stream_buffer.c **** #ifndef sbSEND_COMPLETED
  97:Src/stream_buffer.c ****     #define sbSEND_COMPLETED( pxStreamBuffer )                               \
  98:Src/stream_buffer.c ****     vTaskSuspendAll();                                                       \
  99:Src/stream_buffer.c ****     {                                                                        \
 100:Src/stream_buffer.c ****         if( ( pxStreamBuffer )->xTaskWaitingToReceive != NULL )              \
 101:Src/stream_buffer.c ****         {                                                                    \
 102:Src/stream_buffer.c ****             ( void ) xTaskNotify( ( pxStreamBuffer )->xTaskWaitingToReceive, \
 103:Src/stream_buffer.c ****                                   ( uint32_t ) 0,                            \
 104:Src/stream_buffer.c ****                                   eNoAction );                               \
 105:Src/stream_buffer.c ****             ( pxStreamBuffer )->xTaskWaitingToReceive = NULL;                \
 106:Src/stream_buffer.c ****         }                                                                    \
 107:Src/stream_buffer.c ****     }                                                                        \
 108:Src/stream_buffer.c ****     ( void ) xTaskResumeAll();
 109:Src/stream_buffer.c **** #endif /* sbSEND_COMPLETED */
 110:Src/stream_buffer.c **** 
 111:Src/stream_buffer.c **** #ifndef sbSEND_COMPLETE_FROM_ISR
 112:Src/stream_buffer.c ****     #define sbSEND_COMPLETE_FROM_ISR( pxStreamBuffer, pxHigherPriorityTaskWoken )       \
 113:Src/stream_buffer.c ****     {                                                                                   \
 114:Src/stream_buffer.c ****         UBaseType_t uxSavedInterruptStatus;                                             \
 115:Src/stream_buffer.c ****                                                                                         \
 116:Src/stream_buffer.c ****         uxSavedInterruptStatus = ( UBaseType_t ) portSET_INTERRUPT_MASK_FROM_ISR();     \
 117:Src/stream_buffer.c ****         {                                                                               \
 118:Src/stream_buffer.c ****             if( ( pxStreamBuffer )->xTaskWaitingToReceive != NULL )                     \
 119:Src/stream_buffer.c ****             {                                                                           \
 120:Src/stream_buffer.c ****                 ( void ) xTaskNotifyFromISR( ( pxStreamBuffer )->xTaskWaitingToReceive, \
 121:Src/stream_buffer.c ****                                              ( uint32_t ) 0,                            \
 122:Src/stream_buffer.c ****                                              eNoAction,                                 \
 123:Src/stream_buffer.c ****                                              pxHigherPriorityTaskWoken );               \
 124:Src/stream_buffer.c ****                 ( pxStreamBuffer )->xTaskWaitingToReceive = NULL;                       \
 125:Src/stream_buffer.c ****             }                                                                           \
 126:Src/stream_buffer.c ****         }                                                                               \
 127:Src/stream_buffer.c ****         portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );                    \
 128:Src/stream_buffer.c ****     }
 129:Src/stream_buffer.c **** #endif /* sbSEND_COMPLETE_FROM_ISR */
 130:Src/stream_buffer.c **** /*lint -restore (9026) */
 131:Src/stream_buffer.c **** 
 132:Src/stream_buffer.c **** /* The number of bytes used to hold the length of a message in the buffer. */
 133:Src/stream_buffer.c **** #define sbBYTES_TO_STORE_MESSAGE_LENGTH    ( sizeof( configMESSAGE_BUFFER_LENGTH_TYPE ) )
 134:Src/stream_buffer.c **** 
 135:Src/stream_buffer.c **** /* Bits stored in the ucFlags field of the stream buffer. */
 136:Src/stream_buffer.c **** #define sbFLAGS_IS_MESSAGE_BUFFER          ( ( uint8_t ) 1 ) /* Set if the stream buffer was create
 137:Src/stream_buffer.c **** #define sbFLAGS_IS_STATICALLY_ALLOCATED    ( ( uint8_t ) 2 ) /* Set if the stream buffer was create
 138:Src/stream_buffer.c **** 
 139:Src/stream_buffer.c **** /*-----------------------------------------------------------*/
 140:Src/stream_buffer.c **** 
 141:Src/stream_buffer.c **** /* Structure that hold state information on the buffer. */
 142:Src/stream_buffer.c **** typedef struct StreamBufferDef_t                 /*lint !e9058 Style convention uses tag. */
 143:Src/stream_buffer.c **** {
 144:Src/stream_buffer.c ****     volatile size_t xTail;                       /* Index to the next item to read within the buffe
 145:Src/stream_buffer.c ****     volatile size_t xHead;                       /* Index to the next item to write within the buff
 146:Src/stream_buffer.c ****     size_t xLength;                              /* The length of the buffer pointed to by pucBuffe
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 4


 147:Src/stream_buffer.c ****     size_t xTriggerLevelBytes;                   /* The number of bytes that must be in the stream 
 148:Src/stream_buffer.c ****     volatile TaskHandle_t xTaskWaitingToReceive; /* Holds the handle of a task waiting for data, or
 149:Src/stream_buffer.c ****     volatile TaskHandle_t xTaskWaitingToSend;    /* Holds the handle of a task waiting to send data
 150:Src/stream_buffer.c ****     uint8_t * pucBuffer;                         /* Points to the buffer itself - that is - the RAM
 151:Src/stream_buffer.c ****     uint8_t ucFlags;
 152:Src/stream_buffer.c **** 
 153:Src/stream_buffer.c ****     #if ( configUSE_TRACE_FACILITY == 1 )
 154:Src/stream_buffer.c ****         UBaseType_t uxStreamBufferNumber; /* Used for tracing purposes. */
 155:Src/stream_buffer.c ****     #endif
 156:Src/stream_buffer.c **** } StreamBuffer_t;
 157:Src/stream_buffer.c **** 
 158:Src/stream_buffer.c **** /*
 159:Src/stream_buffer.c ****  * The number of bytes available to be read from the buffer.
 160:Src/stream_buffer.c ****  */
 161:Src/stream_buffer.c **** static size_t prvBytesInBuffer( const StreamBuffer_t * const pxStreamBuffer ) PRIVILEGED_FUNCTION;
 162:Src/stream_buffer.c **** 
 163:Src/stream_buffer.c **** /*
 164:Src/stream_buffer.c ****  * Add xCount bytes from pucData into the pxStreamBuffer's data storage area.
 165:Src/stream_buffer.c ****  * This function does not update the buffer's xHead pointer, so multiple writes
 166:Src/stream_buffer.c ****  * may be chained together "atomically". This is useful for Message Buffers where
 167:Src/stream_buffer.c ****  * the length and data bytes are written in two separate chunks, and we don't want
 168:Src/stream_buffer.c ****  * the reader to see the buffer as having grown until after all data is copied over.
 169:Src/stream_buffer.c ****  * This function takes a custom xHead value to indicate where to write to (necessary
 170:Src/stream_buffer.c ****  * for chaining) and returns the the resulting xHead position.
 171:Src/stream_buffer.c ****  * To mark the write as complete, manually set the buffer's xHead field with the
 172:Src/stream_buffer.c ****  * returned xHead from this function.
 173:Src/stream_buffer.c ****  */
 174:Src/stream_buffer.c **** static size_t prvWriteBytesToBuffer( StreamBuffer_t * const pxStreamBuffer,
 175:Src/stream_buffer.c ****                                      const uint8_t * pucData,
 176:Src/stream_buffer.c ****                                      size_t xCount,
 177:Src/stream_buffer.c ****                                      size_t xHead ) PRIVILEGED_FUNCTION;
 178:Src/stream_buffer.c **** 
 179:Src/stream_buffer.c **** /*
 180:Src/stream_buffer.c ****  * If the stream buffer is being used as a message buffer, then reads an entire
 181:Src/stream_buffer.c ****  * message out of the buffer.  If the stream buffer is being used as a stream
 182:Src/stream_buffer.c ****  * buffer then read as many bytes as possible from the buffer.
 183:Src/stream_buffer.c ****  * prvReadBytesFromBuffer() is called to actually extract the bytes from the
 184:Src/stream_buffer.c ****  * buffer's data storage area.
 185:Src/stream_buffer.c ****  */
 186:Src/stream_buffer.c **** static size_t prvReadMessageFromBuffer( StreamBuffer_t * pxStreamBuffer,
 187:Src/stream_buffer.c ****                                         void * pvRxData,
 188:Src/stream_buffer.c ****                                         size_t xBufferLengthBytes,
 189:Src/stream_buffer.c ****                                         size_t xBytesAvailable ) PRIVILEGED_FUNCTION;
 190:Src/stream_buffer.c **** 
 191:Src/stream_buffer.c **** /*
 192:Src/stream_buffer.c ****  * If the stream buffer is being used as a message buffer, then writes an entire
 193:Src/stream_buffer.c ****  * message to the buffer.  If the stream buffer is being used as a stream
 194:Src/stream_buffer.c ****  * buffer then write as many bytes as possible to the buffer.
 195:Src/stream_buffer.c ****  * prvWriteBytestoBuffer() is called to actually send the bytes to the buffer's
 196:Src/stream_buffer.c ****  * data storage area.
 197:Src/stream_buffer.c ****  */
 198:Src/stream_buffer.c **** static size_t prvWriteMessageToBuffer( StreamBuffer_t * const pxStreamBuffer,
 199:Src/stream_buffer.c ****                                        const void * pvTxData,
 200:Src/stream_buffer.c ****                                        size_t xDataLengthBytes,
 201:Src/stream_buffer.c ****                                        size_t xSpace,
 202:Src/stream_buffer.c ****                                        size_t xRequiredSpace ) PRIVILEGED_FUNCTION;
 203:Src/stream_buffer.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 5


 204:Src/stream_buffer.c **** /*
 205:Src/stream_buffer.c ****  * Copies xCount bytes from the pxStreamBuffer's data storage area to pucData.
 206:Src/stream_buffer.c ****  * This function does not update the buffer's xTail pointer, so multiple reads
 207:Src/stream_buffer.c ****  * may be chained together "atomically". This is useful for Message Buffers where
 208:Src/stream_buffer.c ****  * the length and data bytes are read in two separate chunks, and we don't want
 209:Src/stream_buffer.c ****  * the writer to see the buffer as having more free space until after all data is
 210:Src/stream_buffer.c ****  * copied over, especially if we have to abort the read due to insufficient receiving space.
 211:Src/stream_buffer.c ****  * This function takes a custom xTail value to indicate where to read from (necessary
 212:Src/stream_buffer.c ****  * for chaining) and returns the the resulting xTail position.
 213:Src/stream_buffer.c ****  * To mark the read as complete, manually set the buffer's xTail field with the
 214:Src/stream_buffer.c ****  * returned xTail from this function.
 215:Src/stream_buffer.c ****  */
 216:Src/stream_buffer.c **** static size_t prvReadBytesFromBuffer( StreamBuffer_t * pxStreamBuffer,
 217:Src/stream_buffer.c ****                                       uint8_t * pucData,
 218:Src/stream_buffer.c ****                                       size_t xCount,
 219:Src/stream_buffer.c ****                                       size_t xTail ) PRIVILEGED_FUNCTION;
 220:Src/stream_buffer.c **** 
 221:Src/stream_buffer.c **** /*
 222:Src/stream_buffer.c ****  * Called by both pxStreamBufferCreate() and pxStreamBufferCreateStatic() to
 223:Src/stream_buffer.c ****  * initialise the members of the newly created stream buffer structure.
 224:Src/stream_buffer.c ****  */
 225:Src/stream_buffer.c **** static void prvInitialiseNewStreamBuffer( StreamBuffer_t * const pxStreamBuffer,
 226:Src/stream_buffer.c ****                                           uint8_t * const pucBuffer,
 227:Src/stream_buffer.c ****                                           size_t xBufferSizeBytes,
 228:Src/stream_buffer.c ****                                           size_t xTriggerLevelBytes,
 229:Src/stream_buffer.c ****                                           uint8_t ucFlags ) PRIVILEGED_FUNCTION;
 230:Src/stream_buffer.c **** 
 231:Src/stream_buffer.c **** /*-----------------------------------------------------------*/
 232:Src/stream_buffer.c **** 
 233:Src/stream_buffer.c **** #if ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 234:Src/stream_buffer.c **** 
 235:Src/stream_buffer.c ****     StreamBufferHandle_t xStreamBufferGenericCreate( size_t xBufferSizeBytes,
 236:Src/stream_buffer.c ****                                                      size_t xTriggerLevelBytes,
 237:Src/stream_buffer.c ****                                                      BaseType_t xIsMessageBuffer )
 238:Src/stream_buffer.c ****     {
 239:Src/stream_buffer.c ****         uint8_t * pucAllocatedMemory;
 240:Src/stream_buffer.c ****         uint8_t ucFlags;
 241:Src/stream_buffer.c **** 
 242:Src/stream_buffer.c ****         /* In case the stream buffer is going to be used as a message buffer
 243:Src/stream_buffer.c ****          * (that is, it will hold discrete messages with a little meta data that
 244:Src/stream_buffer.c ****          * says how big the next message is) check the buffer will be large enough
 245:Src/stream_buffer.c ****          * to hold at least one message. */
 246:Src/stream_buffer.c ****         if( xIsMessageBuffer == pdTRUE )
 247:Src/stream_buffer.c ****         {
 248:Src/stream_buffer.c ****             /* Is a message buffer but not statically allocated. */
 249:Src/stream_buffer.c ****             ucFlags = sbFLAGS_IS_MESSAGE_BUFFER;
 250:Src/stream_buffer.c ****             configASSERT( xBufferSizeBytes > sbBYTES_TO_STORE_MESSAGE_LENGTH );
 251:Src/stream_buffer.c ****         }
 252:Src/stream_buffer.c ****         else
 253:Src/stream_buffer.c ****         {
 254:Src/stream_buffer.c ****             /* Not a message buffer and not statically allocated. */
 255:Src/stream_buffer.c ****             ucFlags = 0;
 256:Src/stream_buffer.c ****             configASSERT( xBufferSizeBytes > 0 );
 257:Src/stream_buffer.c ****         }
 258:Src/stream_buffer.c **** 
 259:Src/stream_buffer.c ****         configASSERT( xTriggerLevelBytes <= xBufferSizeBytes );
 260:Src/stream_buffer.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 6


 261:Src/stream_buffer.c ****         /* A trigger level of 0 would cause a waiting task to unblock even when
 262:Src/stream_buffer.c ****          * the buffer was empty. */
 263:Src/stream_buffer.c ****         if( xTriggerLevelBytes == ( size_t ) 0 )
 264:Src/stream_buffer.c ****         {
 265:Src/stream_buffer.c ****             xTriggerLevelBytes = ( size_t ) 1;
 266:Src/stream_buffer.c ****         }
 267:Src/stream_buffer.c **** 
 268:Src/stream_buffer.c ****         /* A stream buffer requires a StreamBuffer_t structure and a buffer.
 269:Src/stream_buffer.c ****          * Both are allocated in a single call to pvPortMalloc().  The
 270:Src/stream_buffer.c ****          * StreamBuffer_t structure is placed at the start of the allocated memory
 271:Src/stream_buffer.c ****          * and the buffer follows immediately after.  The requested size is
 272:Src/stream_buffer.c ****          * incremented so the free space is returned as the user would expect -
 273:Src/stream_buffer.c ****          * this is a quirk of the implementation that means otherwise the free
 274:Src/stream_buffer.c ****          * space would be reported as one byte smaller than would be logically
 275:Src/stream_buffer.c ****          * expected. */
 276:Src/stream_buffer.c ****         if( xBufferSizeBytes < ( xBufferSizeBytes + 1 + sizeof( StreamBuffer_t ) ) )
 277:Src/stream_buffer.c ****         {
 278:Src/stream_buffer.c ****             xBufferSizeBytes++;
 279:Src/stream_buffer.c ****             pucAllocatedMemory = ( uint8_t * ) pvPortMalloc( xBufferSizeBytes + sizeof( StreamBuffe
 280:Src/stream_buffer.c ****         }
 281:Src/stream_buffer.c ****         else
 282:Src/stream_buffer.c ****         {
 283:Src/stream_buffer.c ****             pucAllocatedMemory = NULL;
 284:Src/stream_buffer.c ****         }
 285:Src/stream_buffer.c **** 
 286:Src/stream_buffer.c ****         if( pucAllocatedMemory != NULL )
 287:Src/stream_buffer.c ****         {
 288:Src/stream_buffer.c ****             prvInitialiseNewStreamBuffer( ( StreamBuffer_t * ) pucAllocatedMemory,       /* Structu
 289:Src/stream_buffer.c ****                                           pucAllocatedMemory + sizeof( StreamBuffer_t ), /* Storage
 290:Src/stream_buffer.c ****                                           xBufferSizeBytes,
 291:Src/stream_buffer.c ****                                           xTriggerLevelBytes,
 292:Src/stream_buffer.c ****                                           ucFlags );
 293:Src/stream_buffer.c **** 
 294:Src/stream_buffer.c ****             traceSTREAM_BUFFER_CREATE( ( ( StreamBuffer_t * ) pucAllocatedMemory ), xIsMessageBuffe
 295:Src/stream_buffer.c ****         }
 296:Src/stream_buffer.c ****         else
 297:Src/stream_buffer.c ****         {
 298:Src/stream_buffer.c ****             traceSTREAM_BUFFER_CREATE_FAILED( xIsMessageBuffer );
 299:Src/stream_buffer.c ****         }
 300:Src/stream_buffer.c **** 
 301:Src/stream_buffer.c ****         return ( StreamBufferHandle_t ) pucAllocatedMemory; /*lint !e9087 !e826 Safe cast as alloca
 302:Src/stream_buffer.c ****     }
 303:Src/stream_buffer.c **** 
 304:Src/stream_buffer.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 305:Src/stream_buffer.c **** /*-----------------------------------------------------------*/
 306:Src/stream_buffer.c **** 
 307:Src/stream_buffer.c **** #if ( configSUPPORT_STATIC_ALLOCATION == 1 )
 308:Src/stream_buffer.c **** 
 309:Src/stream_buffer.c ****     StreamBufferHandle_t xStreamBufferGenericCreateStatic( size_t xBufferSizeBytes,
 310:Src/stream_buffer.c ****                                                            size_t xTriggerLevelBytes,
 311:Src/stream_buffer.c ****                                                            BaseType_t xIsMessageBuffer,
 312:Src/stream_buffer.c ****                                                            uint8_t * const pucStreamBufferStorageAr
 313:Src/stream_buffer.c ****                                                            StaticStreamBuffer_t * const pxStaticStr
 314:Src/stream_buffer.c ****     {
 315:Src/stream_buffer.c ****         StreamBuffer_t * const pxStreamBuffer = ( StreamBuffer_t * ) pxStaticStreamBuffer; /*lint !
 316:Src/stream_buffer.c ****         StreamBufferHandle_t xReturn;
 317:Src/stream_buffer.c ****         uint8_t ucFlags;
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 7


 318:Src/stream_buffer.c **** 
 319:Src/stream_buffer.c ****         configASSERT( pucStreamBufferStorageArea );
 320:Src/stream_buffer.c ****         configASSERT( pxStaticStreamBuffer );
 321:Src/stream_buffer.c ****         configASSERT( xTriggerLevelBytes <= xBufferSizeBytes );
 322:Src/stream_buffer.c **** 
 323:Src/stream_buffer.c ****         /* A trigger level of 0 would cause a waiting task to unblock even when
 324:Src/stream_buffer.c ****          * the buffer was empty. */
 325:Src/stream_buffer.c ****         if( xTriggerLevelBytes == ( size_t ) 0 )
 326:Src/stream_buffer.c ****         {
 327:Src/stream_buffer.c ****             xTriggerLevelBytes = ( size_t ) 1;
 328:Src/stream_buffer.c ****         }
 329:Src/stream_buffer.c **** 
 330:Src/stream_buffer.c ****         if( xIsMessageBuffer != pdFALSE )
 331:Src/stream_buffer.c ****         {
 332:Src/stream_buffer.c ****             /* Statically allocated message buffer. */
 333:Src/stream_buffer.c ****             ucFlags = sbFLAGS_IS_MESSAGE_BUFFER | sbFLAGS_IS_STATICALLY_ALLOCATED;
 334:Src/stream_buffer.c ****         }
 335:Src/stream_buffer.c ****         else
 336:Src/stream_buffer.c ****         {
 337:Src/stream_buffer.c ****             /* Statically allocated stream buffer. */
 338:Src/stream_buffer.c ****             ucFlags = sbFLAGS_IS_STATICALLY_ALLOCATED;
 339:Src/stream_buffer.c ****         }
 340:Src/stream_buffer.c **** 
 341:Src/stream_buffer.c ****         /* In case the stream buffer is going to be used as a message buffer
 342:Src/stream_buffer.c ****          * (that is, it will hold discrete messages with a little meta data that
 343:Src/stream_buffer.c ****          * says how big the next message is) check the buffer will be large enough
 344:Src/stream_buffer.c ****          * to hold at least one message. */
 345:Src/stream_buffer.c ****         configASSERT( xBufferSizeBytes > sbBYTES_TO_STORE_MESSAGE_LENGTH );
 346:Src/stream_buffer.c **** 
 347:Src/stream_buffer.c ****         #if ( configASSERT_DEFINED == 1 )
 348:Src/stream_buffer.c ****             {
 349:Src/stream_buffer.c ****                 /* Sanity check that the size of the structure used to declare a
 350:Src/stream_buffer.c ****                  * variable of type StaticStreamBuffer_t equals the size of the real
 351:Src/stream_buffer.c ****                  * message buffer structure. */
 352:Src/stream_buffer.c ****                 volatile size_t xSize = sizeof( StaticStreamBuffer_t );
 353:Src/stream_buffer.c ****                 configASSERT( xSize == sizeof( StreamBuffer_t ) );
 354:Src/stream_buffer.c ****             } /*lint !e529 xSize is referenced is configASSERT() is defined. */
 355:Src/stream_buffer.c ****         #endif /* configASSERT_DEFINED */
 356:Src/stream_buffer.c **** 
 357:Src/stream_buffer.c ****         if( ( pucStreamBufferStorageArea != NULL ) && ( pxStaticStreamBuffer != NULL ) )
 358:Src/stream_buffer.c ****         {
 359:Src/stream_buffer.c ****             prvInitialiseNewStreamBuffer( pxStreamBuffer,
 360:Src/stream_buffer.c ****                                           pucStreamBufferStorageArea,
 361:Src/stream_buffer.c ****                                           xBufferSizeBytes,
 362:Src/stream_buffer.c ****                                           xTriggerLevelBytes,
 363:Src/stream_buffer.c ****                                           ucFlags );
 364:Src/stream_buffer.c **** 
 365:Src/stream_buffer.c ****             /* Remember this was statically allocated in case it is ever deleted
 366:Src/stream_buffer.c ****              * again. */
 367:Src/stream_buffer.c ****             pxStreamBuffer->ucFlags |= sbFLAGS_IS_STATICALLY_ALLOCATED;
 368:Src/stream_buffer.c **** 
 369:Src/stream_buffer.c ****             traceSTREAM_BUFFER_CREATE( pxStreamBuffer, xIsMessageBuffer );
 370:Src/stream_buffer.c **** 
 371:Src/stream_buffer.c ****             xReturn = ( StreamBufferHandle_t ) pxStaticStreamBuffer; /*lint !e9087 Data hiding requ
 372:Src/stream_buffer.c ****         }
 373:Src/stream_buffer.c ****         else
 374:Src/stream_buffer.c ****         {
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 8


 375:Src/stream_buffer.c ****             xReturn = NULL;
 376:Src/stream_buffer.c ****             traceSTREAM_BUFFER_CREATE_STATIC_FAILED( xReturn, xIsMessageBuffer );
 377:Src/stream_buffer.c ****         }
 378:Src/stream_buffer.c **** 
 379:Src/stream_buffer.c ****         return xReturn;
 380:Src/stream_buffer.c ****     }
 381:Src/stream_buffer.c **** 
 382:Src/stream_buffer.c **** #endif /* ( configSUPPORT_STATIC_ALLOCATION == 1 ) */
 383:Src/stream_buffer.c **** /*-----------------------------------------------------------*/
 384:Src/stream_buffer.c **** 
 385:Src/stream_buffer.c **** void vStreamBufferDelete( StreamBufferHandle_t xStreamBuffer )
 386:Src/stream_buffer.c **** {
 387:Src/stream_buffer.c ****     StreamBuffer_t * pxStreamBuffer = xStreamBuffer;
 388:Src/stream_buffer.c **** 
 389:Src/stream_buffer.c ****     configASSERT( pxStreamBuffer );
 390:Src/stream_buffer.c **** 
 391:Src/stream_buffer.c ****     traceSTREAM_BUFFER_DELETE( xStreamBuffer );
 392:Src/stream_buffer.c **** 
 393:Src/stream_buffer.c ****     if( ( pxStreamBuffer->ucFlags & sbFLAGS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) pdFALSE )
 394:Src/stream_buffer.c ****     {
 395:Src/stream_buffer.c ****         #if ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 396:Src/stream_buffer.c ****             {
 397:Src/stream_buffer.c ****                 /* Both the structure and the buffer were allocated using a single call
 398:Src/stream_buffer.c ****                 * to pvPortMalloc(), hence only one call to vPortFree() is required. */
 399:Src/stream_buffer.c ****                 vPortFree( ( void * ) pxStreamBuffer ); /*lint !e9087 Standard free() semantics req
 400:Src/stream_buffer.c ****             }
 401:Src/stream_buffer.c ****         #else
 402:Src/stream_buffer.c ****             {
 403:Src/stream_buffer.c ****                 /* Should not be possible to get here, ucFlags must be corrupt.
 404:Src/stream_buffer.c ****                  * Force an assert. */
 405:Src/stream_buffer.c ****                 configASSERT( xStreamBuffer == ( StreamBufferHandle_t ) ~0 );
 406:Src/stream_buffer.c ****             }
 407:Src/stream_buffer.c ****         #endif
 408:Src/stream_buffer.c ****     }
 409:Src/stream_buffer.c ****     else
 410:Src/stream_buffer.c ****     {
 411:Src/stream_buffer.c ****         /* The structure and buffer were not allocated dynamically and cannot be
 412:Src/stream_buffer.c ****          * freed - just scrub the structure so future use will assert. */
 413:Src/stream_buffer.c ****         ( void ) memset( pxStreamBuffer, 0x00, sizeof( StreamBuffer_t ) );
 414:Src/stream_buffer.c ****     }
 415:Src/stream_buffer.c **** }
 416:Src/stream_buffer.c **** /*-----------------------------------------------------------*/
 417:Src/stream_buffer.c **** 
 418:Src/stream_buffer.c **** BaseType_t xStreamBufferReset( StreamBufferHandle_t xStreamBuffer )
 419:Src/stream_buffer.c **** {
 420:Src/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 421:Src/stream_buffer.c ****     BaseType_t xReturn = pdFAIL;
 422:Src/stream_buffer.c **** 
 423:Src/stream_buffer.c ****     #if ( configUSE_TRACE_FACILITY == 1 )
 424:Src/stream_buffer.c ****         UBaseType_t uxStreamBufferNumber;
 425:Src/stream_buffer.c ****     #endif
 426:Src/stream_buffer.c **** 
 427:Src/stream_buffer.c ****     configASSERT( pxStreamBuffer );
 428:Src/stream_buffer.c **** 
 429:Src/stream_buffer.c ****     #if ( configUSE_TRACE_FACILITY == 1 )
 430:Src/stream_buffer.c ****         {
 431:Src/stream_buffer.c ****             /* Store the stream buffer number so it can be restored after the
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 9


 432:Src/stream_buffer.c ****              * reset. */
 433:Src/stream_buffer.c ****             uxStreamBufferNumber = pxStreamBuffer->uxStreamBufferNumber;
 434:Src/stream_buffer.c ****         }
 435:Src/stream_buffer.c ****     #endif
 436:Src/stream_buffer.c **** 
 437:Src/stream_buffer.c ****     /* Can only reset a message buffer if there are no tasks blocked on it. */
 438:Src/stream_buffer.c ****     taskENTER_CRITICAL();
 439:Src/stream_buffer.c ****     {
 440:Src/stream_buffer.c ****         if( pxStreamBuffer->xTaskWaitingToReceive == NULL )
 441:Src/stream_buffer.c ****         {
 442:Src/stream_buffer.c ****             if( pxStreamBuffer->xTaskWaitingToSend == NULL )
 443:Src/stream_buffer.c ****             {
 444:Src/stream_buffer.c ****                 prvInitialiseNewStreamBuffer( pxStreamBuffer,
 445:Src/stream_buffer.c ****                                               pxStreamBuffer->pucBuffer,
 446:Src/stream_buffer.c ****                                               pxStreamBuffer->xLength,
 447:Src/stream_buffer.c ****                                               pxStreamBuffer->xTriggerLevelBytes,
 448:Src/stream_buffer.c ****                                               pxStreamBuffer->ucFlags );
 449:Src/stream_buffer.c ****                 xReturn = pdPASS;
 450:Src/stream_buffer.c **** 
 451:Src/stream_buffer.c ****                 #if ( configUSE_TRACE_FACILITY == 1 )
 452:Src/stream_buffer.c ****                     {
 453:Src/stream_buffer.c ****                         pxStreamBuffer->uxStreamBufferNumber = uxStreamBufferNumber;
 454:Src/stream_buffer.c ****                     }
 455:Src/stream_buffer.c ****                 #endif
 456:Src/stream_buffer.c **** 
 457:Src/stream_buffer.c ****                 traceSTREAM_BUFFER_RESET( xStreamBuffer );
 458:Src/stream_buffer.c ****             }
 459:Src/stream_buffer.c ****         }
 460:Src/stream_buffer.c ****     }
 461:Src/stream_buffer.c ****     taskEXIT_CRITICAL();
 462:Src/stream_buffer.c **** 
 463:Src/stream_buffer.c ****     return xReturn;
 464:Src/stream_buffer.c **** }
 465:Src/stream_buffer.c **** /*-----------------------------------------------------------*/
 466:Src/stream_buffer.c **** 
 467:Src/stream_buffer.c **** BaseType_t xStreamBufferSetTriggerLevel( StreamBufferHandle_t xStreamBuffer,
 468:Src/stream_buffer.c ****                                          size_t xTriggerLevel )
 469:Src/stream_buffer.c **** {
 470:Src/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 471:Src/stream_buffer.c ****     BaseType_t xReturn;
 472:Src/stream_buffer.c **** 
 473:Src/stream_buffer.c ****     configASSERT( pxStreamBuffer );
 474:Src/stream_buffer.c **** 
 475:Src/stream_buffer.c ****     /* It is not valid for the trigger level to be 0. */
 476:Src/stream_buffer.c ****     if( xTriggerLevel == ( size_t ) 0 )
 477:Src/stream_buffer.c ****     {
 478:Src/stream_buffer.c ****         xTriggerLevel = ( size_t ) 1;
 479:Src/stream_buffer.c ****     }
 480:Src/stream_buffer.c **** 
 481:Src/stream_buffer.c ****     /* The trigger level is the number of bytes that must be in the stream
 482:Src/stream_buffer.c ****      * buffer before a task that is waiting for data is unblocked. */
 483:Src/stream_buffer.c ****     if( xTriggerLevel < pxStreamBuffer->xLength )
 484:Src/stream_buffer.c ****     {
 485:Src/stream_buffer.c ****         pxStreamBuffer->xTriggerLevelBytes = xTriggerLevel;
 486:Src/stream_buffer.c ****         xReturn = pdPASS;
 487:Src/stream_buffer.c ****     }
 488:Src/stream_buffer.c ****     else
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 10


 489:Src/stream_buffer.c ****     {
 490:Src/stream_buffer.c ****         xReturn = pdFALSE;
 491:Src/stream_buffer.c ****     }
 492:Src/stream_buffer.c **** 
 493:Src/stream_buffer.c ****     return xReturn;
 494:Src/stream_buffer.c **** }
 495:Src/stream_buffer.c **** /*-----------------------------------------------------------*/
 496:Src/stream_buffer.c **** 
 497:Src/stream_buffer.c **** size_t xStreamBufferSpacesAvailable( StreamBufferHandle_t xStreamBuffer )
 498:Src/stream_buffer.c **** {
 499:Src/stream_buffer.c ****     const StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 500:Src/stream_buffer.c ****     size_t xSpace;
 501:Src/stream_buffer.c ****     size_t xOriginalTail;
 502:Src/stream_buffer.c **** 
 503:Src/stream_buffer.c ****     configASSERT( pxStreamBuffer );
 504:Src/stream_buffer.c **** 
 505:Src/stream_buffer.c ****     /* The code below reads xTail and then xHead.  This is safe if the stream
 506:Src/stream_buffer.c ****      * buffer is updated once between the two reads - but not if the stream buffer
 507:Src/stream_buffer.c ****      * is updated more than once between the two reads - hence the loop. */
 508:Src/stream_buffer.c ****     do
 509:Src/stream_buffer.c ****     {
 510:Src/stream_buffer.c ****         xOriginalTail = pxStreamBuffer->xTail;
 511:Src/stream_buffer.c ****         xSpace = pxStreamBuffer->xLength + pxStreamBuffer->xTail;
 512:Src/stream_buffer.c ****         xSpace -= pxStreamBuffer->xHead;
 513:Src/stream_buffer.c ****     } while( xOriginalTail != pxStreamBuffer->xTail );
 514:Src/stream_buffer.c **** 
 515:Src/stream_buffer.c ****     xSpace -= ( size_t ) 1;
 516:Src/stream_buffer.c **** 
 517:Src/stream_buffer.c ****     if( xSpace >= pxStreamBuffer->xLength )
 518:Src/stream_buffer.c ****     {
 519:Src/stream_buffer.c ****         xSpace -= pxStreamBuffer->xLength;
 520:Src/stream_buffer.c ****     }
 521:Src/stream_buffer.c ****     else
 522:Src/stream_buffer.c ****     {
 523:Src/stream_buffer.c ****         mtCOVERAGE_TEST_MARKER();
 524:Src/stream_buffer.c ****     }
 525:Src/stream_buffer.c **** 
 526:Src/stream_buffer.c ****     return xSpace;
 527:Src/stream_buffer.c **** }
 528:Src/stream_buffer.c **** /*-----------------------------------------------------------*/
 529:Src/stream_buffer.c **** 
 530:Src/stream_buffer.c **** size_t xStreamBufferBytesAvailable( StreamBufferHandle_t xStreamBuffer )
 531:Src/stream_buffer.c **** {
 532:Src/stream_buffer.c ****     const StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 533:Src/stream_buffer.c ****     size_t xReturn;
 534:Src/stream_buffer.c **** 
 535:Src/stream_buffer.c ****     configASSERT( pxStreamBuffer );
 536:Src/stream_buffer.c **** 
 537:Src/stream_buffer.c ****     xReturn = prvBytesInBuffer( pxStreamBuffer );
 538:Src/stream_buffer.c ****     return xReturn;
 539:Src/stream_buffer.c **** }
 540:Src/stream_buffer.c **** /*-----------------------------------------------------------*/
 541:Src/stream_buffer.c **** 
 542:Src/stream_buffer.c **** size_t xStreamBufferSend( StreamBufferHandle_t xStreamBuffer,
 543:Src/stream_buffer.c ****                           const void * pvTxData,
 544:Src/stream_buffer.c ****                           size_t xDataLengthBytes,
 545:Src/stream_buffer.c ****                           TickType_t xTicksToWait )
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 11


 546:Src/stream_buffer.c **** {
 547:Src/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 548:Src/stream_buffer.c ****     size_t xReturn, xSpace = 0;
 549:Src/stream_buffer.c ****     size_t xRequiredSpace = xDataLengthBytes;
 550:Src/stream_buffer.c ****     TimeOut_t xTimeOut;
 551:Src/stream_buffer.c ****     size_t xMaxReportedSpace = 0;
 552:Src/stream_buffer.c **** 
 553:Src/stream_buffer.c ****     configASSERT( pvTxData );
 554:Src/stream_buffer.c ****     configASSERT( pxStreamBuffer );
 555:Src/stream_buffer.c **** 
 556:Src/stream_buffer.c ****     /* The maximum amount of space a stream buffer will ever report is its length
 557:Src/stream_buffer.c ****      * minus 1. */
 558:Src/stream_buffer.c ****     xMaxReportedSpace = pxStreamBuffer->xLength - ( size_t ) 1;
 559:Src/stream_buffer.c **** 
 560:Src/stream_buffer.c ****     /* This send function is used to write to both message buffers and stream
 561:Src/stream_buffer.c ****      * buffers.  If this is a message buffer then the space needed must be
 562:Src/stream_buffer.c ****      * increased by the amount of bytes needed to store the length of the
 563:Src/stream_buffer.c ****      * message. */
 564:Src/stream_buffer.c ****     if( ( pxStreamBuffer->ucFlags & sbFLAGS_IS_MESSAGE_BUFFER ) != ( uint8_t ) 0 )
 565:Src/stream_buffer.c ****     {
 566:Src/stream_buffer.c ****         xRequiredSpace += sbBYTES_TO_STORE_MESSAGE_LENGTH;
 567:Src/stream_buffer.c **** 
 568:Src/stream_buffer.c ****         /* Overflow? */
 569:Src/stream_buffer.c ****         configASSERT( xRequiredSpace > xDataLengthBytes );
 570:Src/stream_buffer.c **** 
 571:Src/stream_buffer.c ****         /* If this is a message buffer then it must be possible to write the
 572:Src/stream_buffer.c ****          * whole message. */
 573:Src/stream_buffer.c ****         if( xRequiredSpace > xMaxReportedSpace )
 574:Src/stream_buffer.c ****         {
 575:Src/stream_buffer.c ****             /* The message would not fit even if the entire buffer was empty,
 576:Src/stream_buffer.c ****              * so don't wait for space. */
 577:Src/stream_buffer.c ****             xTicksToWait = ( TickType_t ) 0;
 578:Src/stream_buffer.c ****         }
 579:Src/stream_buffer.c ****         else
 580:Src/stream_buffer.c ****         {
 581:Src/stream_buffer.c ****             mtCOVERAGE_TEST_MARKER();
 582:Src/stream_buffer.c ****         }
 583:Src/stream_buffer.c ****     }
 584:Src/stream_buffer.c ****     else
 585:Src/stream_buffer.c ****     {
 586:Src/stream_buffer.c ****         /* If this is a stream buffer then it is acceptable to write only part
 587:Src/stream_buffer.c ****          * of the message to the buffer.  Cap the length to the total length of
 588:Src/stream_buffer.c ****          * the buffer. */
 589:Src/stream_buffer.c ****         if( xRequiredSpace > xMaxReportedSpace )
 590:Src/stream_buffer.c ****         {
 591:Src/stream_buffer.c ****             xRequiredSpace = xMaxReportedSpace;
 592:Src/stream_buffer.c ****         }
 593:Src/stream_buffer.c ****         else
 594:Src/stream_buffer.c ****         {
 595:Src/stream_buffer.c ****             mtCOVERAGE_TEST_MARKER();
 596:Src/stream_buffer.c ****         }
 597:Src/stream_buffer.c ****     }
 598:Src/stream_buffer.c **** 
 599:Src/stream_buffer.c ****     if( xTicksToWait != ( TickType_t ) 0 )
 600:Src/stream_buffer.c ****     {
 601:Src/stream_buffer.c ****         vTaskSetTimeOutState( &xTimeOut );
 602:Src/stream_buffer.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 12


 603:Src/stream_buffer.c ****         do
 604:Src/stream_buffer.c ****         {
 605:Src/stream_buffer.c ****             /* Wait until the required number of bytes are free in the message
 606:Src/stream_buffer.c ****              * buffer. */
 607:Src/stream_buffer.c ****             taskENTER_CRITICAL();
 608:Src/stream_buffer.c ****             {
 609:Src/stream_buffer.c ****                 xSpace = xStreamBufferSpacesAvailable( pxStreamBuffer );
 610:Src/stream_buffer.c **** 
 611:Src/stream_buffer.c ****                 if( xSpace < xRequiredSpace )
 612:Src/stream_buffer.c ****                 {
 613:Src/stream_buffer.c ****                     /* Clear notification state as going to wait for space. */
 614:Src/stream_buffer.c ****                     ( void ) xTaskNotifyStateClear( NULL );
 615:Src/stream_buffer.c **** 
 616:Src/stream_buffer.c ****                     /* Should only be one writer. */
 617:Src/stream_buffer.c ****                     configASSERT( pxStreamBuffer->xTaskWaitingToSend == NULL );
 618:Src/stream_buffer.c ****                     pxStreamBuffer->xTaskWaitingToSend = xTaskGetCurrentTaskHandle();
 619:Src/stream_buffer.c ****                 }
 620:Src/stream_buffer.c ****                 else
 621:Src/stream_buffer.c ****                 {
 622:Src/stream_buffer.c ****                     taskEXIT_CRITICAL();
 623:Src/stream_buffer.c ****                     break;
 624:Src/stream_buffer.c ****                 }
 625:Src/stream_buffer.c ****             }
 626:Src/stream_buffer.c ****             taskEXIT_CRITICAL();
 627:Src/stream_buffer.c **** 
 628:Src/stream_buffer.c ****             traceBLOCKING_ON_STREAM_BUFFER_SEND( xStreamBuffer );
 629:Src/stream_buffer.c ****             ( void ) xTaskNotifyWait( ( uint32_t ) 0, ( uint32_t ) 0, NULL, xTicksToWait );
 630:Src/stream_buffer.c ****             pxStreamBuffer->xTaskWaitingToSend = NULL;
 631:Src/stream_buffer.c ****         } while( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE );
 632:Src/stream_buffer.c ****     }
 633:Src/stream_buffer.c ****     else
 634:Src/stream_buffer.c ****     {
 635:Src/stream_buffer.c ****         mtCOVERAGE_TEST_MARKER();
 636:Src/stream_buffer.c ****     }
 637:Src/stream_buffer.c **** 
 638:Src/stream_buffer.c ****     if( xSpace == ( size_t ) 0 )
 639:Src/stream_buffer.c ****     {
 640:Src/stream_buffer.c ****         xSpace = xStreamBufferSpacesAvailable( pxStreamBuffer );
 641:Src/stream_buffer.c ****     }
 642:Src/stream_buffer.c ****     else
 643:Src/stream_buffer.c ****     {
 644:Src/stream_buffer.c ****         mtCOVERAGE_TEST_MARKER();
 645:Src/stream_buffer.c ****     }
 646:Src/stream_buffer.c **** 
 647:Src/stream_buffer.c ****     xReturn = prvWriteMessageToBuffer( pxStreamBuffer, pvTxData, xDataLengthBytes, xSpace, xRequire
 648:Src/stream_buffer.c **** 
 649:Src/stream_buffer.c ****     if( xReturn > ( size_t ) 0 )
 650:Src/stream_buffer.c ****     {
 651:Src/stream_buffer.c ****         traceSTREAM_BUFFER_SEND( xStreamBuffer, xReturn );
 652:Src/stream_buffer.c **** 
 653:Src/stream_buffer.c ****         /* Was a task waiting for the data? */
 654:Src/stream_buffer.c ****         if( prvBytesInBuffer( pxStreamBuffer ) >= pxStreamBuffer->xTriggerLevelBytes )
 655:Src/stream_buffer.c ****         {
 656:Src/stream_buffer.c ****             sbSEND_COMPLETED( pxStreamBuffer );
 657:Src/stream_buffer.c ****         }
 658:Src/stream_buffer.c ****         else
 659:Src/stream_buffer.c ****         {
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 13


 660:Src/stream_buffer.c ****             mtCOVERAGE_TEST_MARKER();
 661:Src/stream_buffer.c ****         }
 662:Src/stream_buffer.c ****     }
 663:Src/stream_buffer.c ****     else
 664:Src/stream_buffer.c ****     {
 665:Src/stream_buffer.c ****         mtCOVERAGE_TEST_MARKER();
 666:Src/stream_buffer.c ****         traceSTREAM_BUFFER_SEND_FAILED( xStreamBuffer );
 667:Src/stream_buffer.c ****     }
 668:Src/stream_buffer.c **** 
 669:Src/stream_buffer.c ****     return xReturn;
 670:Src/stream_buffer.c **** }
 671:Src/stream_buffer.c **** /*-----------------------------------------------------------*/
 672:Src/stream_buffer.c **** 
 673:Src/stream_buffer.c **** size_t xStreamBufferSendFromISR( StreamBufferHandle_t xStreamBuffer,
 674:Src/stream_buffer.c ****                                  const void * pvTxData,
 675:Src/stream_buffer.c ****                                  size_t xDataLengthBytes,
 676:Src/stream_buffer.c ****                                  BaseType_t * const pxHigherPriorityTaskWoken )
 677:Src/stream_buffer.c **** {
 678:Src/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 679:Src/stream_buffer.c ****     size_t xReturn, xSpace;
 680:Src/stream_buffer.c ****     size_t xRequiredSpace = xDataLengthBytes;
 681:Src/stream_buffer.c **** 
 682:Src/stream_buffer.c ****     configASSERT( pvTxData );
 683:Src/stream_buffer.c ****     configASSERT( pxStreamBuffer );
 684:Src/stream_buffer.c **** 
 685:Src/stream_buffer.c ****     /* This send function is used to write to both message buffers and stream
 686:Src/stream_buffer.c ****      * buffers.  If this is a message buffer then the space needed must be
 687:Src/stream_buffer.c ****      * increased by the amount of bytes needed to store the length of the
 688:Src/stream_buffer.c ****      * message. */
 689:Src/stream_buffer.c ****     if( ( pxStreamBuffer->ucFlags & sbFLAGS_IS_MESSAGE_BUFFER ) != ( uint8_t ) 0 )
 690:Src/stream_buffer.c ****     {
 691:Src/stream_buffer.c ****         xRequiredSpace += sbBYTES_TO_STORE_MESSAGE_LENGTH;
 692:Src/stream_buffer.c ****     }
 693:Src/stream_buffer.c ****     else
 694:Src/stream_buffer.c ****     {
 695:Src/stream_buffer.c ****         mtCOVERAGE_TEST_MARKER();
 696:Src/stream_buffer.c ****     }
 697:Src/stream_buffer.c **** 
 698:Src/stream_buffer.c ****     xSpace = xStreamBufferSpacesAvailable( pxStreamBuffer );
 699:Src/stream_buffer.c ****     xReturn = prvWriteMessageToBuffer( pxStreamBuffer, pvTxData, xDataLengthBytes, xSpace, xRequire
 700:Src/stream_buffer.c **** 
 701:Src/stream_buffer.c ****     if( xReturn > ( size_t ) 0 )
 702:Src/stream_buffer.c ****     {
 703:Src/stream_buffer.c ****         /* Was a task waiting for the data? */
 704:Src/stream_buffer.c ****         if( prvBytesInBuffer( pxStreamBuffer ) >= pxStreamBuffer->xTriggerLevelBytes )
 705:Src/stream_buffer.c ****         {
 706:Src/stream_buffer.c ****             sbSEND_COMPLETE_FROM_ISR( pxStreamBuffer, pxHigherPriorityTaskWoken );
 707:Src/stream_buffer.c ****         }
 708:Src/stream_buffer.c ****         else
 709:Src/stream_buffer.c ****         {
 710:Src/stream_buffer.c ****             mtCOVERAGE_TEST_MARKER();
 711:Src/stream_buffer.c ****         }
 712:Src/stream_buffer.c ****     }
 713:Src/stream_buffer.c ****     else
 714:Src/stream_buffer.c ****     {
 715:Src/stream_buffer.c ****         mtCOVERAGE_TEST_MARKER();
 716:Src/stream_buffer.c ****     }
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 14


 717:Src/stream_buffer.c **** 
 718:Src/stream_buffer.c ****     traceSTREAM_BUFFER_SEND_FROM_ISR( xStreamBuffer, xReturn );
 719:Src/stream_buffer.c **** 
 720:Src/stream_buffer.c ****     return xReturn;
 721:Src/stream_buffer.c **** }
 722:Src/stream_buffer.c **** /*-----------------------------------------------------------*/
 723:Src/stream_buffer.c **** 
 724:Src/stream_buffer.c **** static size_t prvWriteMessageToBuffer( StreamBuffer_t * const pxStreamBuffer,
 725:Src/stream_buffer.c ****                                        const void * pvTxData,
 726:Src/stream_buffer.c ****                                        size_t xDataLengthBytes,
 727:Src/stream_buffer.c ****                                        size_t xSpace,
 728:Src/stream_buffer.c ****                                        size_t xRequiredSpace )
 729:Src/stream_buffer.c **** {
 730:Src/stream_buffer.c ****     size_t xNextHead = pxStreamBuffer->xHead;
 731:Src/stream_buffer.c **** 
 732:Src/stream_buffer.c ****     if( ( pxStreamBuffer->ucFlags & sbFLAGS_IS_MESSAGE_BUFFER ) != ( uint8_t ) 0 )
 733:Src/stream_buffer.c ****     {
 734:Src/stream_buffer.c ****         /* This is a message buffer, as opposed to a stream buffer. */
 735:Src/stream_buffer.c **** 
 736:Src/stream_buffer.c ****         if( xSpace >= xRequiredSpace )
 737:Src/stream_buffer.c ****         {
 738:Src/stream_buffer.c ****             /* There is enough space to write both the message length and the message
 739:Src/stream_buffer.c ****              * itself into the buffer.  Start by writing the length of the data, the data
 740:Src/stream_buffer.c ****              * itself will be written later in this function. */
 741:Src/stream_buffer.c ****             xNextHead = prvWriteBytesToBuffer( pxStreamBuffer, ( const uint8_t * ) &( xDataLengthBy
 742:Src/stream_buffer.c ****         }
 743:Src/stream_buffer.c ****         else
 744:Src/stream_buffer.c ****         {
 745:Src/stream_buffer.c ****             /* Not enough space, so do not write data to the buffer. */
 746:Src/stream_buffer.c ****             xDataLengthBytes = 0;
 747:Src/stream_buffer.c ****         }
 748:Src/stream_buffer.c ****     }
 749:Src/stream_buffer.c ****     else
 750:Src/stream_buffer.c ****     {
 751:Src/stream_buffer.c ****         /* This is a stream buffer, as opposed to a message buffer, so writing a
 752:Src/stream_buffer.c ****          * stream of bytes rather than discrete messages.  Plan to write as many
 753:Src/stream_buffer.c ****          * bytes as possible. */
 754:Src/stream_buffer.c ****         xDataLengthBytes = configMIN( xDataLengthBytes, xSpace );
 755:Src/stream_buffer.c ****     }
 756:Src/stream_buffer.c **** 
 757:Src/stream_buffer.c ****     if( xDataLengthBytes != ( size_t ) 0 )
 758:Src/stream_buffer.c ****     {
 759:Src/stream_buffer.c ****         /* Write the data to the buffer. */
 760:Src/stream_buffer.c ****         pxStreamBuffer->xHead = prvWriteBytesToBuffer( pxStreamBuffer, ( const uint8_t * ) pvTxData
 761:Src/stream_buffer.c ****     }
 762:Src/stream_buffer.c **** 
 763:Src/stream_buffer.c ****     return xDataLengthBytes;
 764:Src/stream_buffer.c **** }
 765:Src/stream_buffer.c **** /*-----------------------------------------------------------*/
 766:Src/stream_buffer.c **** 
 767:Src/stream_buffer.c **** size_t xStreamBufferReceive( StreamBufferHandle_t xStreamBuffer,
 768:Src/stream_buffer.c ****                              void * pvRxData,
 769:Src/stream_buffer.c ****                              size_t xBufferLengthBytes,
 770:Src/stream_buffer.c ****                              TickType_t xTicksToWait )
 771:Src/stream_buffer.c **** {
 772:Src/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 773:Src/stream_buffer.c ****     size_t xReceivedLength = 0, xBytesAvailable, xBytesToStoreMessageLength;
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 15


 774:Src/stream_buffer.c **** 
 775:Src/stream_buffer.c ****     configASSERT( pvRxData );
 776:Src/stream_buffer.c ****     configASSERT( pxStreamBuffer );
 777:Src/stream_buffer.c **** 
 778:Src/stream_buffer.c ****     /* This receive function is used by both message buffers, which store
 779:Src/stream_buffer.c ****      * discrete messages, and stream buffers, which store a continuous stream of
 780:Src/stream_buffer.c ****      * bytes.  Discrete messages include an additional
 781:Src/stream_buffer.c ****      * sbBYTES_TO_STORE_MESSAGE_LENGTH bytes that hold the length of the
 782:Src/stream_buffer.c ****      * message. */
 783:Src/stream_buffer.c ****     if( ( pxStreamBuffer->ucFlags & sbFLAGS_IS_MESSAGE_BUFFER ) != ( uint8_t ) 0 )
 784:Src/stream_buffer.c ****     {
 785:Src/stream_buffer.c ****         xBytesToStoreMessageLength = sbBYTES_TO_STORE_MESSAGE_LENGTH;
 786:Src/stream_buffer.c ****     }
 787:Src/stream_buffer.c ****     else
 788:Src/stream_buffer.c ****     {
 789:Src/stream_buffer.c ****         xBytesToStoreMessageLength = 0;
 790:Src/stream_buffer.c ****     }
 791:Src/stream_buffer.c **** 
 792:Src/stream_buffer.c ****     if( xTicksToWait != ( TickType_t ) 0 )
 793:Src/stream_buffer.c ****     {
 794:Src/stream_buffer.c ****         /* Checking if there is data and clearing the notification state must be
 795:Src/stream_buffer.c ****          * performed atomically. */
 796:Src/stream_buffer.c ****         taskENTER_CRITICAL();
 797:Src/stream_buffer.c ****         {
 798:Src/stream_buffer.c ****             xBytesAvailable = prvBytesInBuffer( pxStreamBuffer );
 799:Src/stream_buffer.c **** 
 800:Src/stream_buffer.c ****             /* If this function was invoked by a message buffer read then
 801:Src/stream_buffer.c ****              * xBytesToStoreMessageLength holds the number of bytes used to hold
 802:Src/stream_buffer.c ****              * the length of the next discrete message.  If this function was
 803:Src/stream_buffer.c ****              * invoked by a stream buffer read then xBytesToStoreMessageLength will
 804:Src/stream_buffer.c ****              * be 0. */
 805:Src/stream_buffer.c ****             if( xBytesAvailable <= xBytesToStoreMessageLength )
 806:Src/stream_buffer.c ****             {
 807:Src/stream_buffer.c ****                 /* Clear notification state as going to wait for data. */
 808:Src/stream_buffer.c ****                 ( void ) xTaskNotifyStateClear( NULL );
 809:Src/stream_buffer.c **** 
 810:Src/stream_buffer.c ****                 /* Should only be one reader. */
 811:Src/stream_buffer.c ****                 configASSERT( pxStreamBuffer->xTaskWaitingToReceive == NULL );
 812:Src/stream_buffer.c ****                 pxStreamBuffer->xTaskWaitingToReceive = xTaskGetCurrentTaskHandle();
 813:Src/stream_buffer.c ****             }
 814:Src/stream_buffer.c ****             else
 815:Src/stream_buffer.c ****             {
 816:Src/stream_buffer.c ****                 mtCOVERAGE_TEST_MARKER();
 817:Src/stream_buffer.c ****             }
 818:Src/stream_buffer.c ****         }
 819:Src/stream_buffer.c ****         taskEXIT_CRITICAL();
 820:Src/stream_buffer.c **** 
 821:Src/stream_buffer.c ****         if( xBytesAvailable <= xBytesToStoreMessageLength )
 822:Src/stream_buffer.c ****         {
 823:Src/stream_buffer.c ****             /* Wait for data to be available. */
 824:Src/stream_buffer.c ****             traceBLOCKING_ON_STREAM_BUFFER_RECEIVE( xStreamBuffer );
 825:Src/stream_buffer.c ****             ( void ) xTaskNotifyWait( ( uint32_t ) 0, ( uint32_t ) 0, NULL, xTicksToWait );
 826:Src/stream_buffer.c ****             pxStreamBuffer->xTaskWaitingToReceive = NULL;
 827:Src/stream_buffer.c **** 
 828:Src/stream_buffer.c ****             /* Recheck the data available after blocking. */
 829:Src/stream_buffer.c ****             xBytesAvailable = prvBytesInBuffer( pxStreamBuffer );
 830:Src/stream_buffer.c ****         }
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 16


 831:Src/stream_buffer.c ****         else
 832:Src/stream_buffer.c ****         {
 833:Src/stream_buffer.c ****             mtCOVERAGE_TEST_MARKER();
 834:Src/stream_buffer.c ****         }
 835:Src/stream_buffer.c ****     }
 836:Src/stream_buffer.c ****     else
 837:Src/stream_buffer.c ****     {
 838:Src/stream_buffer.c ****         xBytesAvailable = prvBytesInBuffer( pxStreamBuffer );
 839:Src/stream_buffer.c ****     }
 840:Src/stream_buffer.c **** 
 841:Src/stream_buffer.c ****     /* Whether receiving a discrete message (where xBytesToStoreMessageLength
 842:Src/stream_buffer.c ****      * holds the number of bytes used to store the message length) or a stream of
 843:Src/stream_buffer.c ****      * bytes (where xBytesToStoreMessageLength is zero), the number of bytes
 844:Src/stream_buffer.c ****      * available must be greater than xBytesToStoreMessageLength to be able to
 845:Src/stream_buffer.c ****      * read bytes from the buffer. */
 846:Src/stream_buffer.c ****     if( xBytesAvailable > xBytesToStoreMessageLength )
 847:Src/stream_buffer.c ****     {
 848:Src/stream_buffer.c ****         xReceivedLength = prvReadMessageFromBuffer( pxStreamBuffer, pvRxData, xBufferLengthBytes, x
 849:Src/stream_buffer.c **** 
 850:Src/stream_buffer.c ****         /* Was a task waiting for space in the buffer? */
 851:Src/stream_buffer.c ****         if( xReceivedLength != ( size_t ) 0 )
 852:Src/stream_buffer.c ****         {
 853:Src/stream_buffer.c ****             traceSTREAM_BUFFER_RECEIVE( xStreamBuffer, xReceivedLength );
 854:Src/stream_buffer.c ****             sbRECEIVE_COMPLETED( pxStreamBuffer );
 855:Src/stream_buffer.c ****         }
 856:Src/stream_buffer.c ****         else
 857:Src/stream_buffer.c ****         {
 858:Src/stream_buffer.c ****             mtCOVERAGE_TEST_MARKER();
 859:Src/stream_buffer.c ****         }
 860:Src/stream_buffer.c ****     }
 861:Src/stream_buffer.c ****     else
 862:Src/stream_buffer.c ****     {
 863:Src/stream_buffer.c ****         traceSTREAM_BUFFER_RECEIVE_FAILED( xStreamBuffer );
 864:Src/stream_buffer.c ****         mtCOVERAGE_TEST_MARKER();
 865:Src/stream_buffer.c ****     }
 866:Src/stream_buffer.c **** 
 867:Src/stream_buffer.c ****     return xReceivedLength;
 868:Src/stream_buffer.c **** }
 869:Src/stream_buffer.c **** /*-----------------------------------------------------------*/
 870:Src/stream_buffer.c **** 
 871:Src/stream_buffer.c **** size_t xStreamBufferNextMessageLengthBytes( StreamBufferHandle_t xStreamBuffer )
 872:Src/stream_buffer.c **** {
 873:Src/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 874:Src/stream_buffer.c ****     size_t xReturn, xBytesAvailable;
 875:Src/stream_buffer.c ****     configMESSAGE_BUFFER_LENGTH_TYPE xTempReturn;
 876:Src/stream_buffer.c **** 
 877:Src/stream_buffer.c ****     configASSERT( pxStreamBuffer );
 878:Src/stream_buffer.c **** 
 879:Src/stream_buffer.c ****     /* Ensure the stream buffer is being used as a message buffer. */
 880:Src/stream_buffer.c ****     if( ( pxStreamBuffer->ucFlags & sbFLAGS_IS_MESSAGE_BUFFER ) != ( uint8_t ) 0 )
 881:Src/stream_buffer.c ****     {
 882:Src/stream_buffer.c ****         xBytesAvailable = prvBytesInBuffer( pxStreamBuffer );
 883:Src/stream_buffer.c **** 
 884:Src/stream_buffer.c ****         if( xBytesAvailable > sbBYTES_TO_STORE_MESSAGE_LENGTH )
 885:Src/stream_buffer.c ****         {
 886:Src/stream_buffer.c ****             /* The number of bytes available is greater than the number of bytes
 887:Src/stream_buffer.c ****              * required to hold the length of the next message, so another message
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 17


 888:Src/stream_buffer.c ****              * is available. */
 889:Src/stream_buffer.c ****             ( void ) prvReadBytesFromBuffer( pxStreamBuffer, ( uint8_t * ) &xTempReturn, sbBYTES_TO
 890:Src/stream_buffer.c ****             xReturn = ( size_t ) xTempReturn;
 891:Src/stream_buffer.c ****         }
 892:Src/stream_buffer.c ****         else
 893:Src/stream_buffer.c ****         {
 894:Src/stream_buffer.c ****             /* The minimum amount of bytes in a message buffer is
 895:Src/stream_buffer.c ****              * ( sbBYTES_TO_STORE_MESSAGE_LENGTH + 1 ), so if xBytesAvailable is
 896:Src/stream_buffer.c ****              * less than sbBYTES_TO_STORE_MESSAGE_LENGTH the only other valid
 897:Src/stream_buffer.c ****              * value is 0. */
 898:Src/stream_buffer.c ****             configASSERT( xBytesAvailable == 0 );
 899:Src/stream_buffer.c ****             xReturn = 0;
 900:Src/stream_buffer.c ****         }
 901:Src/stream_buffer.c ****     }
 902:Src/stream_buffer.c ****     else
 903:Src/stream_buffer.c ****     {
 904:Src/stream_buffer.c ****         xReturn = 0;
 905:Src/stream_buffer.c ****     }
 906:Src/stream_buffer.c **** 
 907:Src/stream_buffer.c ****     return xReturn;
 908:Src/stream_buffer.c **** }
 909:Src/stream_buffer.c **** /*-----------------------------------------------------------*/
 910:Src/stream_buffer.c **** 
 911:Src/stream_buffer.c **** size_t xStreamBufferReceiveFromISR( StreamBufferHandle_t xStreamBuffer,
 912:Src/stream_buffer.c ****                                     void * pvRxData,
 913:Src/stream_buffer.c ****                                     size_t xBufferLengthBytes,
 914:Src/stream_buffer.c ****                                     BaseType_t * const pxHigherPriorityTaskWoken )
 915:Src/stream_buffer.c **** {
 916:Src/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 917:Src/stream_buffer.c ****     size_t xReceivedLength = 0, xBytesAvailable, xBytesToStoreMessageLength;
 918:Src/stream_buffer.c **** 
 919:Src/stream_buffer.c ****     configASSERT( pvRxData );
 920:Src/stream_buffer.c ****     configASSERT( pxStreamBuffer );
 921:Src/stream_buffer.c **** 
 922:Src/stream_buffer.c ****     /* This receive function is used by both message buffers, which store
 923:Src/stream_buffer.c ****      * discrete messages, and stream buffers, which store a continuous stream of
 924:Src/stream_buffer.c ****      * bytes.  Discrete messages include an additional
 925:Src/stream_buffer.c ****      * sbBYTES_TO_STORE_MESSAGE_LENGTH bytes that hold the length of the
 926:Src/stream_buffer.c ****      * message. */
 927:Src/stream_buffer.c ****     if( ( pxStreamBuffer->ucFlags & sbFLAGS_IS_MESSAGE_BUFFER ) != ( uint8_t ) 0 )
 928:Src/stream_buffer.c ****     {
 929:Src/stream_buffer.c ****         xBytesToStoreMessageLength = sbBYTES_TO_STORE_MESSAGE_LENGTH;
 930:Src/stream_buffer.c ****     }
 931:Src/stream_buffer.c ****     else
 932:Src/stream_buffer.c ****     {
 933:Src/stream_buffer.c ****         xBytesToStoreMessageLength = 0;
 934:Src/stream_buffer.c ****     }
 935:Src/stream_buffer.c **** 
 936:Src/stream_buffer.c ****     xBytesAvailable = prvBytesInBuffer( pxStreamBuffer );
 937:Src/stream_buffer.c **** 
 938:Src/stream_buffer.c ****     /* Whether receiving a discrete message (where xBytesToStoreMessageLength
 939:Src/stream_buffer.c ****      * holds the number of bytes used to store the message length) or a stream of
 940:Src/stream_buffer.c ****      * bytes (where xBytesToStoreMessageLength is zero), the number of bytes
 941:Src/stream_buffer.c ****      * available must be greater than xBytesToStoreMessageLength to be able to
 942:Src/stream_buffer.c ****      * read bytes from the buffer. */
 943:Src/stream_buffer.c ****     if( xBytesAvailable > xBytesToStoreMessageLength )
 944:Src/stream_buffer.c ****     {
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 18


 945:Src/stream_buffer.c ****         xReceivedLength = prvReadMessageFromBuffer( pxStreamBuffer, pvRxData, xBufferLengthBytes, x
 946:Src/stream_buffer.c **** 
 947:Src/stream_buffer.c ****         /* Was a task waiting for space in the buffer? */
 948:Src/stream_buffer.c ****         if( xReceivedLength != ( size_t ) 0 )
 949:Src/stream_buffer.c ****         {
 950:Src/stream_buffer.c ****             sbRECEIVE_COMPLETED_FROM_ISR( pxStreamBuffer, pxHigherPriorityTaskWoken );
 951:Src/stream_buffer.c ****         }
 952:Src/stream_buffer.c ****         else
 953:Src/stream_buffer.c ****         {
 954:Src/stream_buffer.c ****             mtCOVERAGE_TEST_MARKER();
 955:Src/stream_buffer.c ****         }
 956:Src/stream_buffer.c ****     }
 957:Src/stream_buffer.c ****     else
 958:Src/stream_buffer.c ****     {
 959:Src/stream_buffer.c ****         mtCOVERAGE_TEST_MARKER();
 960:Src/stream_buffer.c ****     }
 961:Src/stream_buffer.c **** 
 962:Src/stream_buffer.c ****     traceSTREAM_BUFFER_RECEIVE_FROM_ISR( xStreamBuffer, xReceivedLength );
 963:Src/stream_buffer.c **** 
 964:Src/stream_buffer.c ****     return xReceivedLength;
 965:Src/stream_buffer.c **** }
 966:Src/stream_buffer.c **** /*-----------------------------------------------------------*/
 967:Src/stream_buffer.c **** 
 968:Src/stream_buffer.c **** static size_t prvReadMessageFromBuffer( StreamBuffer_t * pxStreamBuffer,
 969:Src/stream_buffer.c ****                                         void * pvRxData,
 970:Src/stream_buffer.c ****                                         size_t xBufferLengthBytes,
 971:Src/stream_buffer.c ****                                         size_t xBytesAvailable )
 972:Src/stream_buffer.c **** {
 973:Src/stream_buffer.c ****     size_t xCount, xNextMessageLength;
 974:Src/stream_buffer.c ****     configMESSAGE_BUFFER_LENGTH_TYPE xTempNextMessageLength;
 975:Src/stream_buffer.c ****     size_t xNextTail = pxStreamBuffer->xTail;
 976:Src/stream_buffer.c **** 
 977:Src/stream_buffer.c ****     if( ( pxStreamBuffer->ucFlags & sbFLAGS_IS_MESSAGE_BUFFER ) != ( uint8_t ) 0 )
 978:Src/stream_buffer.c ****     {
 979:Src/stream_buffer.c ****         /* A discrete message is being received.  First receive the length
 980:Src/stream_buffer.c ****          * of the message. */
 981:Src/stream_buffer.c ****         xNextTail = prvReadBytesFromBuffer( pxStreamBuffer, ( uint8_t * ) &xTempNextMessageLength, 
 982:Src/stream_buffer.c ****         xNextMessageLength = ( size_t ) xTempNextMessageLength;
 983:Src/stream_buffer.c **** 
 984:Src/stream_buffer.c ****         /* Reduce the number of bytes available by the number of bytes just
 985:Src/stream_buffer.c ****          * read out. */
 986:Src/stream_buffer.c ****         xBytesAvailable -= sbBYTES_TO_STORE_MESSAGE_LENGTH;
 987:Src/stream_buffer.c **** 
 988:Src/stream_buffer.c ****         /* Check there is enough space in the buffer provided by the
 989:Src/stream_buffer.c ****          * user. */
 990:Src/stream_buffer.c ****         if( xNextMessageLength > xBufferLengthBytes )
 991:Src/stream_buffer.c ****         {
 992:Src/stream_buffer.c ****             /* The user has provided insufficient space to read the message. */
 993:Src/stream_buffer.c ****             xNextMessageLength = 0;
 994:Src/stream_buffer.c ****         }
 995:Src/stream_buffer.c ****         else
 996:Src/stream_buffer.c ****         {
 997:Src/stream_buffer.c ****             mtCOVERAGE_TEST_MARKER();
 998:Src/stream_buffer.c ****         }
 999:Src/stream_buffer.c ****     }
1000:Src/stream_buffer.c ****     else
1001:Src/stream_buffer.c ****     {
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 19


1002:Src/stream_buffer.c ****         /* A stream of bytes is being received (as opposed to a discrete
1003:Src/stream_buffer.c ****          * message), so read as many bytes as possible. */
1004:Src/stream_buffer.c ****         xNextMessageLength = xBufferLengthBytes;
1005:Src/stream_buffer.c ****     }
1006:Src/stream_buffer.c **** 
1007:Src/stream_buffer.c ****     /* Use the minimum of the wanted bytes and the available bytes. */
1008:Src/stream_buffer.c ****     xCount = configMIN( xNextMessageLength, xBytesAvailable );
1009:Src/stream_buffer.c **** 
1010:Src/stream_buffer.c ****     if( xCount != ( size_t ) 0 )
1011:Src/stream_buffer.c ****     {
1012:Src/stream_buffer.c ****         /* Read the actual data and update the tail to mark the data as officially consumed. */
1013:Src/stream_buffer.c ****         pxStreamBuffer->xTail = prvReadBytesFromBuffer( pxStreamBuffer, ( uint8_t * ) pvRxData, xCo
1014:Src/stream_buffer.c ****     }
1015:Src/stream_buffer.c **** 
1016:Src/stream_buffer.c ****     return xCount;
1017:Src/stream_buffer.c **** }
1018:Src/stream_buffer.c **** /*-----------------------------------------------------------*/
1019:Src/stream_buffer.c **** 
1020:Src/stream_buffer.c **** BaseType_t xStreamBufferIsEmpty( StreamBufferHandle_t xStreamBuffer )
1021:Src/stream_buffer.c **** {
1022:Src/stream_buffer.c ****     const StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
1023:Src/stream_buffer.c ****     BaseType_t xReturn;
1024:Src/stream_buffer.c ****     size_t xTail;
1025:Src/stream_buffer.c **** 
1026:Src/stream_buffer.c ****     configASSERT( pxStreamBuffer );
1027:Src/stream_buffer.c **** 
1028:Src/stream_buffer.c ****     /* True if no bytes are available. */
1029:Src/stream_buffer.c ****     xTail = pxStreamBuffer->xTail;
1030:Src/stream_buffer.c **** 
1031:Src/stream_buffer.c ****     if( pxStreamBuffer->xHead == xTail )
1032:Src/stream_buffer.c ****     {
1033:Src/stream_buffer.c ****         xReturn = pdTRUE;
1034:Src/stream_buffer.c ****     }
1035:Src/stream_buffer.c ****     else
1036:Src/stream_buffer.c ****     {
1037:Src/stream_buffer.c ****         xReturn = pdFALSE;
1038:Src/stream_buffer.c ****     }
1039:Src/stream_buffer.c **** 
1040:Src/stream_buffer.c ****     return xReturn;
1041:Src/stream_buffer.c **** }
1042:Src/stream_buffer.c **** /*-----------------------------------------------------------*/
1043:Src/stream_buffer.c **** 
1044:Src/stream_buffer.c **** BaseType_t xStreamBufferIsFull( StreamBufferHandle_t xStreamBuffer )
1045:Src/stream_buffer.c **** {
1046:Src/stream_buffer.c ****     BaseType_t xReturn;
1047:Src/stream_buffer.c ****     size_t xBytesToStoreMessageLength;
1048:Src/stream_buffer.c ****     const StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
1049:Src/stream_buffer.c **** 
1050:Src/stream_buffer.c ****     configASSERT( pxStreamBuffer );
1051:Src/stream_buffer.c **** 
1052:Src/stream_buffer.c ****     /* This generic version of the receive function is used by both message
1053:Src/stream_buffer.c ****      * buffers, which store discrete messages, and stream buffers, which store a
1054:Src/stream_buffer.c ****      * continuous stream of bytes.  Discrete messages include an additional
1055:Src/stream_buffer.c ****      * sbBYTES_TO_STORE_MESSAGE_LENGTH bytes that hold the length of the message. */
1056:Src/stream_buffer.c ****     if( ( pxStreamBuffer->ucFlags & sbFLAGS_IS_MESSAGE_BUFFER ) != ( uint8_t ) 0 )
1057:Src/stream_buffer.c ****     {
1058:Src/stream_buffer.c ****         xBytesToStoreMessageLength = sbBYTES_TO_STORE_MESSAGE_LENGTH;
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 20


1059:Src/stream_buffer.c ****     }
1060:Src/stream_buffer.c ****     else
1061:Src/stream_buffer.c ****     {
1062:Src/stream_buffer.c ****         xBytesToStoreMessageLength = 0;
1063:Src/stream_buffer.c ****     }
1064:Src/stream_buffer.c **** 
1065:Src/stream_buffer.c ****     /* True if the available space equals zero. */
1066:Src/stream_buffer.c ****     if( xStreamBufferSpacesAvailable( xStreamBuffer ) <= xBytesToStoreMessageLength )
1067:Src/stream_buffer.c ****     {
1068:Src/stream_buffer.c ****         xReturn = pdTRUE;
1069:Src/stream_buffer.c ****     }
1070:Src/stream_buffer.c ****     else
1071:Src/stream_buffer.c ****     {
1072:Src/stream_buffer.c ****         xReturn = pdFALSE;
1073:Src/stream_buffer.c ****     }
1074:Src/stream_buffer.c **** 
1075:Src/stream_buffer.c ****     return xReturn;
1076:Src/stream_buffer.c **** }
1077:Src/stream_buffer.c **** /*-----------------------------------------------------------*/
1078:Src/stream_buffer.c **** 
1079:Src/stream_buffer.c **** BaseType_t xStreamBufferSendCompletedFromISR( StreamBufferHandle_t xStreamBuffer,
1080:Src/stream_buffer.c ****                                               BaseType_t * pxHigherPriorityTaskWoken )
1081:Src/stream_buffer.c **** {
1082:Src/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
1083:Src/stream_buffer.c ****     BaseType_t xReturn;
1084:Src/stream_buffer.c ****     UBaseType_t uxSavedInterruptStatus;
1085:Src/stream_buffer.c **** 
1086:Src/stream_buffer.c ****     configASSERT( pxStreamBuffer );
1087:Src/stream_buffer.c **** 
1088:Src/stream_buffer.c ****     uxSavedInterruptStatus = ( UBaseType_t ) portSET_INTERRUPT_MASK_FROM_ISR();
1089:Src/stream_buffer.c ****     {
1090:Src/stream_buffer.c ****         if( ( pxStreamBuffer )->xTaskWaitingToReceive != NULL )
1091:Src/stream_buffer.c ****         {
1092:Src/stream_buffer.c ****             ( void ) xTaskNotifyFromISR( ( pxStreamBuffer )->xTaskWaitingToReceive,
1093:Src/stream_buffer.c ****                                          ( uint32_t ) 0,
1094:Src/stream_buffer.c ****                                          eNoAction,
1095:Src/stream_buffer.c ****                                          pxHigherPriorityTaskWoken );
1096:Src/stream_buffer.c ****             ( pxStreamBuffer )->xTaskWaitingToReceive = NULL;
1097:Src/stream_buffer.c ****             xReturn = pdTRUE;
1098:Src/stream_buffer.c ****         }
1099:Src/stream_buffer.c ****         else
1100:Src/stream_buffer.c ****         {
1101:Src/stream_buffer.c ****             xReturn = pdFALSE;
1102:Src/stream_buffer.c ****         }
1103:Src/stream_buffer.c ****     }
1104:Src/stream_buffer.c ****     portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1105:Src/stream_buffer.c **** 
1106:Src/stream_buffer.c ****     return xReturn;
1107:Src/stream_buffer.c **** }
1108:Src/stream_buffer.c **** /*-----------------------------------------------------------*/
1109:Src/stream_buffer.c **** 
1110:Src/stream_buffer.c **** BaseType_t xStreamBufferReceiveCompletedFromISR( StreamBufferHandle_t xStreamBuffer,
1111:Src/stream_buffer.c ****                                                  BaseType_t * pxHigherPriorityTaskWoken )
1112:Src/stream_buffer.c **** {
1113:Src/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
1114:Src/stream_buffer.c ****     BaseType_t xReturn;
1115:Src/stream_buffer.c ****     UBaseType_t uxSavedInterruptStatus;
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 21


1116:Src/stream_buffer.c **** 
1117:Src/stream_buffer.c ****     configASSERT( pxStreamBuffer );
1118:Src/stream_buffer.c **** 
1119:Src/stream_buffer.c ****     uxSavedInterruptStatus = ( UBaseType_t ) portSET_INTERRUPT_MASK_FROM_ISR();
1120:Src/stream_buffer.c ****     {
1121:Src/stream_buffer.c ****         if( ( pxStreamBuffer )->xTaskWaitingToSend != NULL )
1122:Src/stream_buffer.c ****         {
1123:Src/stream_buffer.c ****             ( void ) xTaskNotifyFromISR( ( pxStreamBuffer )->xTaskWaitingToSend,
1124:Src/stream_buffer.c ****                                          ( uint32_t ) 0,
1125:Src/stream_buffer.c ****                                          eNoAction,
1126:Src/stream_buffer.c ****                                          pxHigherPriorityTaskWoken );
1127:Src/stream_buffer.c ****             ( pxStreamBuffer )->xTaskWaitingToSend = NULL;
1128:Src/stream_buffer.c ****             xReturn = pdTRUE;
1129:Src/stream_buffer.c ****         }
1130:Src/stream_buffer.c ****         else
1131:Src/stream_buffer.c ****         {
1132:Src/stream_buffer.c ****             xReturn = pdFALSE;
1133:Src/stream_buffer.c ****         }
1134:Src/stream_buffer.c ****     }
1135:Src/stream_buffer.c ****     portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1136:Src/stream_buffer.c **** 
1137:Src/stream_buffer.c ****     return xReturn;
1138:Src/stream_buffer.c **** }
1139:Src/stream_buffer.c **** /*-----------------------------------------------------------*/
1140:Src/stream_buffer.c **** 
1141:Src/stream_buffer.c **** static size_t prvWriteBytesToBuffer( StreamBuffer_t * const pxStreamBuffer,
1142:Src/stream_buffer.c ****                                      const uint8_t * pucData,
1143:Src/stream_buffer.c ****                                      size_t xCount,
1144:Src/stream_buffer.c ****                                      size_t xHead )
1145:Src/stream_buffer.c **** {
1146:Src/stream_buffer.c ****     size_t xFirstLength;
1147:Src/stream_buffer.c **** 
1148:Src/stream_buffer.c ****     configASSERT( xCount > ( size_t ) 0 );
1149:Src/stream_buffer.c **** 
1150:Src/stream_buffer.c ****     /* Calculate the number of bytes that can be added in the first write -
1151:Src/stream_buffer.c ****      * which may be less than the total number of bytes that need to be added if
1152:Src/stream_buffer.c ****      * the buffer will wrap back to the beginning. */
1153:Src/stream_buffer.c ****     xFirstLength = configMIN( pxStreamBuffer->xLength - xHead, xCount );
1154:Src/stream_buffer.c **** 
1155:Src/stream_buffer.c ****     /* Write as many bytes as can be written in the first write. */
1156:Src/stream_buffer.c ****     configASSERT( ( xHead + xFirstLength ) <= pxStreamBuffer->xLength );
1157:Src/stream_buffer.c ****     ( void ) memcpy( ( void * ) ( &( pxStreamBuffer->pucBuffer[ xHead ] ) ), ( const void * ) pucDa
1158:Src/stream_buffer.c **** 
1159:Src/stream_buffer.c ****     /* If the number of bytes written was less than the number that could be
1160:Src/stream_buffer.c ****      * written in the first write... */
1161:Src/stream_buffer.c ****     if( xCount > xFirstLength )
1162:Src/stream_buffer.c ****     {
1163:Src/stream_buffer.c ****         /* ...then write the remaining bytes to the start of the buffer. */
1164:Src/stream_buffer.c ****         configASSERT( ( xCount - xFirstLength ) <= pxStreamBuffer->xLength );
1165:Src/stream_buffer.c ****         ( void ) memcpy( ( void * ) pxStreamBuffer->pucBuffer, ( const void * ) &( pucData[ xFirstL
1166:Src/stream_buffer.c ****     }
1167:Src/stream_buffer.c ****     else
1168:Src/stream_buffer.c ****     {
1169:Src/stream_buffer.c ****         mtCOVERAGE_TEST_MARKER();
1170:Src/stream_buffer.c ****     }
1171:Src/stream_buffer.c **** 
1172:Src/stream_buffer.c ****     xHead += xCount;
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 22


1173:Src/stream_buffer.c **** 
1174:Src/stream_buffer.c ****     if( xHead >= pxStreamBuffer->xLength )
1175:Src/stream_buffer.c ****     {
1176:Src/stream_buffer.c ****         xHead -= pxStreamBuffer->xLength;
1177:Src/stream_buffer.c ****     }
1178:Src/stream_buffer.c ****     else
1179:Src/stream_buffer.c ****     {
1180:Src/stream_buffer.c ****         mtCOVERAGE_TEST_MARKER();
1181:Src/stream_buffer.c ****     }
1182:Src/stream_buffer.c **** 
1183:Src/stream_buffer.c ****     return xHead;
1184:Src/stream_buffer.c **** }
1185:Src/stream_buffer.c **** /*-----------------------------------------------------------*/
1186:Src/stream_buffer.c **** 
1187:Src/stream_buffer.c **** static size_t prvReadBytesFromBuffer( StreamBuffer_t * pxStreamBuffer,
1188:Src/stream_buffer.c ****                                       uint8_t * pucData,
1189:Src/stream_buffer.c ****                                       size_t xCount,
1190:Src/stream_buffer.c ****                                       size_t xTail )
1191:Src/stream_buffer.c **** {
1192:Src/stream_buffer.c ****     size_t xFirstLength;
1193:Src/stream_buffer.c **** 
1194:Src/stream_buffer.c ****     configASSERT( xCount != ( size_t ) 0 );
1195:Src/stream_buffer.c **** 
1196:Src/stream_buffer.c ****     /* Calculate the number of bytes that can be read - which may be
1197:Src/stream_buffer.c ****      * less than the number wanted if the data wraps around to the start of
1198:Src/stream_buffer.c ****      * the buffer. */
1199:Src/stream_buffer.c ****     xFirstLength = configMIN( pxStreamBuffer->xLength - xTail, xCount );
1200:Src/stream_buffer.c **** 
1201:Src/stream_buffer.c ****     /* Obtain the number of bytes it is possible to obtain in the first
1202:Src/stream_buffer.c ****      * read.  Asserts check bounds of read and write. */
1203:Src/stream_buffer.c ****     configASSERT( xFirstLength <= xCount );
1204:Src/stream_buffer.c ****     configASSERT( ( xTail + xFirstLength ) <= pxStreamBuffer->xLength );
1205:Src/stream_buffer.c ****     ( void ) memcpy( ( void * ) pucData, ( const void * ) &( pxStreamBuffer->pucBuffer[ xTail ] ), 
1206:Src/stream_buffer.c **** 
1207:Src/stream_buffer.c ****     /* If the total number of wanted bytes is greater than the number
1208:Src/stream_buffer.c ****      * that could be read in the first read... */
1209:Src/stream_buffer.c ****     if( xCount > xFirstLength )
1210:Src/stream_buffer.c ****     {
1211:Src/stream_buffer.c ****         /* ...then read the remaining bytes from the start of the buffer. */
1212:Src/stream_buffer.c ****         ( void ) memcpy( ( void * ) &( pucData[ xFirstLength ] ), ( void * ) ( pxStreamBuffer->pucB
1213:Src/stream_buffer.c ****     }
1214:Src/stream_buffer.c ****     else
1215:Src/stream_buffer.c ****     {
1216:Src/stream_buffer.c ****         mtCOVERAGE_TEST_MARKER();
1217:Src/stream_buffer.c ****     }
1218:Src/stream_buffer.c **** 
1219:Src/stream_buffer.c ****     /* Move the tail pointer to effectively remove the data read from the buffer. */
1220:Src/stream_buffer.c ****     xTail += xCount;
1221:Src/stream_buffer.c **** 
1222:Src/stream_buffer.c ****     if( xTail >= pxStreamBuffer->xLength )
1223:Src/stream_buffer.c ****     {
1224:Src/stream_buffer.c ****         xTail -= pxStreamBuffer->xLength;
1225:Src/stream_buffer.c ****     }
1226:Src/stream_buffer.c **** 
1227:Src/stream_buffer.c ****     return xTail;
1228:Src/stream_buffer.c **** }
1229:Src/stream_buffer.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 23


1230:Src/stream_buffer.c **** 
1231:Src/stream_buffer.c **** static size_t prvBytesInBuffer( const StreamBuffer_t * const pxStreamBuffer )
1232:Src/stream_buffer.c **** {
  27              		.loc 1 1232 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
1233:Src/stream_buffer.c **** /* Returns the distance between xTail and xHead. */
1234:Src/stream_buffer.c ****     size_t xCount;
  32              		.loc 1 1234 5 view .LVU1
1235:Src/stream_buffer.c **** 
1236:Src/stream_buffer.c ****     xCount = pxStreamBuffer->xLength + pxStreamBuffer->xHead;
  33              		.loc 1 1236 5 view .LVU2
  34              		.loc 1 1236 28 is_stmt 0 view .LVU3
  35 0000 8268     		ldr	r2, [r0, #8]
  36              		.loc 1 1236 54 view .LVU4
  37 0002 4368     		ldr	r3, [r0, #4]
  38              		.loc 1 1236 12 view .LVU5
  39 0004 1344     		add	r3, r3, r2
  40              	.LVL1:
1237:Src/stream_buffer.c ****     xCount -= pxStreamBuffer->xTail;
  41              		.loc 1 1237 5 is_stmt 1 view .LVU6
  42              		.loc 1 1237 29 is_stmt 0 view .LVU7
  43 0006 0068     		ldr	r0, [r0]
  44              	.LVL2:
  45              		.loc 1 1237 12 view .LVU8
  46 0008 181A     		subs	r0, r3, r0
  47              	.LVL3:
1238:Src/stream_buffer.c **** 
1239:Src/stream_buffer.c ****     if( xCount >= pxStreamBuffer->xLength )
  48              		.loc 1 1239 5 is_stmt 1 view .LVU9
  49              		.loc 1 1239 7 is_stmt 0 view .LVU10
  50 000a 8242     		cmp	r2, r0
  51 000c 00D8     		bhi	.L1
1240:Src/stream_buffer.c ****     {
1241:Src/stream_buffer.c ****         xCount -= pxStreamBuffer->xLength;
  52              		.loc 1 1241 9 is_stmt 1 view .LVU11
  53              		.loc 1 1241 16 is_stmt 0 view .LVU12
  54 000e 801A     		subs	r0, r0, r2
  55              	.LVL4:
1242:Src/stream_buffer.c ****     }
1243:Src/stream_buffer.c ****     else
1244:Src/stream_buffer.c ****     {
1245:Src/stream_buffer.c ****         mtCOVERAGE_TEST_MARKER();
  56              		.loc 1 1245 33 is_stmt 1 view .LVU13
1246:Src/stream_buffer.c ****     }
1247:Src/stream_buffer.c **** 
1248:Src/stream_buffer.c ****     return xCount;
  57              		.loc 1 1248 5 view .LVU14
  58              	.L1:
1249:Src/stream_buffer.c **** }
  59              		.loc 1 1249 1 is_stmt 0 view .LVU15
  60 0010 7047     		bx	lr
  61              		.cfi_endproc
  62              	.LFE23:
  64              		.section	.text.prvInitialiseNewStreamBuffer,"ax",%progbits
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 24


  65              		.align	1
  66              		.syntax unified
  67              		.thumb
  68              		.thumb_func
  69              		.fpu softvfp
  71              	prvInitialiseNewStreamBuffer:
  72              	.LVL5:
  73              	.LFB24:
1250:Src/stream_buffer.c **** /*-----------------------------------------------------------*/
1251:Src/stream_buffer.c **** 
1252:Src/stream_buffer.c **** static void prvInitialiseNewStreamBuffer( StreamBuffer_t * const pxStreamBuffer,
1253:Src/stream_buffer.c ****                                           uint8_t * const pucBuffer,
1254:Src/stream_buffer.c ****                                           size_t xBufferSizeBytes,
1255:Src/stream_buffer.c ****                                           size_t xTriggerLevelBytes,
1256:Src/stream_buffer.c ****                                           uint8_t ucFlags )
1257:Src/stream_buffer.c **** {
  74              		.loc 1 1257 1 is_stmt 1 view -0
  75              		.cfi_startproc
  76              		@ args = 4, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              		.loc 1 1257 1 is_stmt 0 view .LVU17
  79 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  80              	.LCFI0:
  81              		.cfi_def_cfa_offset 24
  82              		.cfi_offset 3, -24
  83              		.cfi_offset 4, -20
  84              		.cfi_offset 5, -16
  85              		.cfi_offset 6, -12
  86              		.cfi_offset 7, -8
  87              		.cfi_offset 14, -4
  88 0002 0446     		mov	r4, r0
  89 0004 0F46     		mov	r7, r1
  90 0006 1646     		mov	r6, r2
  91 0008 1D46     		mov	r5, r3
1258:Src/stream_buffer.c ****     /* Assert here is deliberately writing to the entire buffer to ensure it can
1259:Src/stream_buffer.c ****      * be written to without generating exceptions, and is setting the buffer to a
1260:Src/stream_buffer.c ****      * known value to assist in development/debugging. */
1261:Src/stream_buffer.c ****     #if ( configASSERT_DEFINED == 1 )
1262:Src/stream_buffer.c ****         {
1263:Src/stream_buffer.c ****             /* The value written just has to be identifiable when looking at the
1264:Src/stream_buffer.c ****              * memory.  Don't use 0xA5 as that is the stack fill value and could
1265:Src/stream_buffer.c ****              * result in confusion as to what is actually being observed. */
1266:Src/stream_buffer.c ****             const BaseType_t xWriteValue = 0x55;
1267:Src/stream_buffer.c ****             configASSERT( memset( pucBuffer, ( int ) xWriteValue, xBufferSizeBytes ) == pucBuffer )
1268:Src/stream_buffer.c ****         } /*lint !e529 !e438 xWriteValue is only used if configASSERT() is defined. */
1269:Src/stream_buffer.c ****     #endif
1270:Src/stream_buffer.c **** 
1271:Src/stream_buffer.c ****     ( void ) memset( ( void * ) pxStreamBuffer, 0x00, sizeof( StreamBuffer_t ) ); /*lint !e9087 mem
  92              		.loc 1 1271 5 is_stmt 1 view .LVU18
  93              		.loc 1 1271 14 is_stmt 0 view .LVU19
  94 000a 2022     		movs	r2, #32
  95              	.LVL6:
  96              		.loc 1 1271 14 view .LVU20
  97 000c 0021     		movs	r1, #0
  98              	.LVL7:
  99              		.loc 1 1271 14 view .LVU21
 100 000e FFF7FEFF 		bl	memset
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 25


 101              	.LVL8:
1272:Src/stream_buffer.c ****     pxStreamBuffer->pucBuffer = pucBuffer;
 102              		.loc 1 1272 5 is_stmt 1 view .LVU22
 103              		.loc 1 1272 31 is_stmt 0 view .LVU23
 104 0012 A761     		str	r7, [r4, #24]
1273:Src/stream_buffer.c ****     pxStreamBuffer->xLength = xBufferSizeBytes;
 105              		.loc 1 1273 5 is_stmt 1 view .LVU24
 106              		.loc 1 1273 29 is_stmt 0 view .LVU25
 107 0014 A660     		str	r6, [r4, #8]
1274:Src/stream_buffer.c ****     pxStreamBuffer->xTriggerLevelBytes = xTriggerLevelBytes;
 108              		.loc 1 1274 5 is_stmt 1 view .LVU26
 109              		.loc 1 1274 40 is_stmt 0 view .LVU27
 110 0016 E560     		str	r5, [r4, #12]
1275:Src/stream_buffer.c ****     pxStreamBuffer->ucFlags = ucFlags;
 111              		.loc 1 1275 5 is_stmt 1 view .LVU28
 112              		.loc 1 1275 29 is_stmt 0 view .LVU29
 113 0018 9DF81830 		ldrb	r3, [sp, #24]	@ zero_extendqisi2
 114 001c 2377     		strb	r3, [r4, #28]
1276:Src/stream_buffer.c **** }
 115              		.loc 1 1276 1 view .LVU30
 116 001e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 117              		.loc 1 1276 1 view .LVU31
 118              		.cfi_endproc
 119              	.LFE24:
 121              		.section	.text.prvWriteBytesToBuffer,"ax",%progbits
 122              		.align	1
 123              		.syntax unified
 124              		.thumb
 125              		.thumb_func
 126              		.fpu softvfp
 128              	prvWriteBytesToBuffer:
 129              	.LVL9:
 130              	.LFB21:
1145:Src/stream_buffer.c ****     size_t xFirstLength;
 131              		.loc 1 1145 1 is_stmt 1 view -0
 132              		.cfi_startproc
 133              		@ args = 0, pretend = 0, frame = 0
 134              		@ frame_needed = 0, uses_anonymous_args = 0
1145:Src/stream_buffer.c ****     size_t xFirstLength;
 135              		.loc 1 1145 1 is_stmt 0 view .LVU33
 136 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 137              	.LCFI1:
 138              		.cfi_def_cfa_offset 24
 139              		.cfi_offset 4, -24
 140              		.cfi_offset 5, -20
 141              		.cfi_offset 6, -16
 142              		.cfi_offset 7, -12
 143              		.cfi_offset 8, -8
 144              		.cfi_offset 14, -4
 145 0004 0646     		mov	r6, r0
 146 0006 8846     		mov	r8, r1
 147 0008 1746     		mov	r7, r2
 148 000a 1C46     		mov	r4, r3
1146:Src/stream_buffer.c **** 
 149              		.loc 1 1146 5 is_stmt 1 view .LVU34
1148:Src/stream_buffer.c **** 
 150              		.loc 1 1148 42 view .LVU35
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 26


1153:Src/stream_buffer.c **** 
 151              		.loc 1 1153 5 view .LVU36
1153:Src/stream_buffer.c **** 
 152              		.loc 1 1153 20 is_stmt 0 view .LVU37
 153 000c 8568     		ldr	r5, [r0, #8]
 154 000e ED1A     		subs	r5, r5, r3
1153:Src/stream_buffer.c **** 
 155              		.loc 1 1153 18 view .LVU38
 156 0010 9542     		cmp	r5, r2
 157 0012 28BF     		it	cs
 158 0014 1546     		movcs	r5, r2
 159              	.LVL10:
1156:Src/stream_buffer.c ****     ( void ) memcpy( ( void * ) ( &( pxStreamBuffer->pucBuffer[ xHead ] ) ), ( const void * ) pucDa
 160              		.loc 1 1156 72 is_stmt 1 view .LVU39
1157:Src/stream_buffer.c **** 
 161              		.loc 1 1157 5 view .LVU40
1157:Src/stream_buffer.c **** 
 162              		.loc 1 1157 52 is_stmt 0 view .LVU41
 163 0016 8069     		ldr	r0, [r0, #24]
 164              	.LVL11:
1157:Src/stream_buffer.c **** 
 165              		.loc 1 1157 14 view .LVU42
 166 0018 2A46     		mov	r2, r5
 167              	.LVL12:
1157:Src/stream_buffer.c **** 
 168              		.loc 1 1157 14 view .LVU43
 169 001a 1844     		add	r0, r0, r3
 170 001c FFF7FEFF 		bl	memcpy
 171              	.LVL13:
1161:Src/stream_buffer.c ****     {
 172              		.loc 1 1161 5 is_stmt 1 view .LVU44
1161:Src/stream_buffer.c ****     {
 173              		.loc 1 1161 7 is_stmt 0 view .LVU45
 174 0020 AF42     		cmp	r7, r5
 175 0022 06D8     		bhi	.L9
 176              	.L6:
1169:Src/stream_buffer.c ****     }
 177              		.loc 1 1169 33 is_stmt 1 view .LVU46
1172:Src/stream_buffer.c **** 
 178              		.loc 1 1172 5 view .LVU47
1172:Src/stream_buffer.c **** 
 179              		.loc 1 1172 11 is_stmt 0 view .LVU48
 180 0024 E019     		adds	r0, r4, r7
 181              	.LVL14:
1174:Src/stream_buffer.c ****     {
 182              		.loc 1 1174 5 is_stmt 1 view .LVU49
1174:Src/stream_buffer.c ****     {
 183              		.loc 1 1174 32 is_stmt 0 view .LVU50
 184 0026 B368     		ldr	r3, [r6, #8]
1174:Src/stream_buffer.c ****     {
 185              		.loc 1 1174 7 view .LVU51
 186 0028 8342     		cmp	r3, r0
 187 002a 00D8     		bhi	.L5
1176:Src/stream_buffer.c ****     }
 188              		.loc 1 1176 9 is_stmt 1 view .LVU52
1176:Src/stream_buffer.c ****     }
 189              		.loc 1 1176 15 is_stmt 0 view .LVU53
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 27


 190 002c C01A     		subs	r0, r0, r3
 191              	.LVL15:
1180:Src/stream_buffer.c ****     }
 192              		.loc 1 1180 33 is_stmt 1 view .LVU54
1183:Src/stream_buffer.c **** }
 193              		.loc 1 1183 5 view .LVU55
 194              	.L5:
1184:Src/stream_buffer.c **** /*-----------------------------------------------------------*/
 195              		.loc 1 1184 1 is_stmt 0 view .LVU56
 196 002e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 197              	.LVL16:
 198              	.L9:
1164:Src/stream_buffer.c ****         ( void ) memcpy( ( void * ) pxStreamBuffer->pucBuffer, ( const void * ) &( pucData[ xFirstL
 199              		.loc 1 1164 77 is_stmt 1 view .LVU57
1165:Src/stream_buffer.c ****     }
 200              		.loc 1 1165 9 view .LVU58
1165:Src/stream_buffer.c ****     }
 201              		.loc 1 1165 18 is_stmt 0 view .LVU59
 202 0032 7A1B     		subs	r2, r7, r5
 203 0034 08EB0501 		add	r1, r8, r5
 204 0038 B069     		ldr	r0, [r6, #24]
 205 003a FFF7FEFF 		bl	memcpy
 206              	.LVL17:
 207 003e F1E7     		b	.L6
 208              		.cfi_endproc
 209              	.LFE21:
 211              		.section	.text.prvWriteMessageToBuffer,"ax",%progbits
 212              		.align	1
 213              		.syntax unified
 214              		.thumb
 215              		.thumb_func
 216              		.fpu softvfp
 218              	prvWriteMessageToBuffer:
 219              	.LVL18:
 220              	.LFB12:
 729:Src/stream_buffer.c ****     size_t xNextHead = pxStreamBuffer->xHead;
 221              		.loc 1 729 1 is_stmt 1 view -0
 222              		.cfi_startproc
 223              		@ args = 4, pretend = 0, frame = 8
 224              		@ frame_needed = 0, uses_anonymous_args = 0
 729:Src/stream_buffer.c ****     size_t xNextHead = pxStreamBuffer->xHead;
 225              		.loc 1 729 1 is_stmt 0 view .LVU61
 226 0000 70B5     		push	{r4, r5, r6, lr}
 227              	.LCFI2:
 228              		.cfi_def_cfa_offset 16
 229              		.cfi_offset 4, -16
 230              		.cfi_offset 5, -12
 231              		.cfi_offset 6, -8
 232              		.cfi_offset 14, -4
 233 0002 82B0     		sub	sp, sp, #8
 234              	.LCFI3:
 235              		.cfi_def_cfa_offset 24
 236 0004 0446     		mov	r4, r0
 237 0006 0E46     		mov	r6, r1
 238 0008 0192     		str	r2, [sp, #4]
 239 000a 1A46     		mov	r2, r3
 240              	.LVL19:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 28


 730:Src/stream_buffer.c **** 
 241              		.loc 1 730 5 is_stmt 1 view .LVU62
 730:Src/stream_buffer.c **** 
 242              		.loc 1 730 12 is_stmt 0 view .LVU63
 243 000c 4368     		ldr	r3, [r0, #4]
 244              	.LVL20:
 732:Src/stream_buffer.c ****     {
 245              		.loc 1 732 5 is_stmt 1 view .LVU64
 732:Src/stream_buffer.c ****     {
 246              		.loc 1 732 25 is_stmt 0 view .LVU65
 247 000e 057F     		ldrb	r5, [r0, #28]	@ zero_extendqisi2
 732:Src/stream_buffer.c ****     {
 248              		.loc 1 732 7 view .LVU66
 249 0010 15F0010F 		tst	r5, #1
 250 0014 0CD0     		beq	.L11
 736:Src/stream_buffer.c ****         {
 251              		.loc 1 736 9 is_stmt 1 view .LVU67
 736:Src/stream_buffer.c ****         {
 252              		.loc 1 736 11 is_stmt 0 view .LVU68
 253 0016 0699     		ldr	r1, [sp, #24]
 254              	.LVL21:
 736:Src/stream_buffer.c ****         {
 255              		.loc 1 736 11 view .LVU69
 256 0018 8A42     		cmp	r2, r1
 257 001a 02D2     		bcs	.L16
 746:Src/stream_buffer.c ****         }
 258              		.loc 1 746 13 is_stmt 1 view .LVU70
 746:Src/stream_buffer.c ****         }
 259              		.loc 1 746 30 is_stmt 0 view .LVU71
 260 001c 0022     		movs	r2, #0
 261              	.LVL22:
 746:Src/stream_buffer.c ****         }
 262              		.loc 1 746 30 view .LVU72
 263 001e 0192     		str	r2, [sp, #4]
 264              	.LVL23:
 746:Src/stream_buffer.c ****         }
 265              		.loc 1 746 30 view .LVU73
 266 0020 0BE0     		b	.L13
 267              	.LVL24:
 268              	.L16:
 741:Src/stream_buffer.c ****         }
 269              		.loc 1 741 13 is_stmt 1 view .LVU74
 741:Src/stream_buffer.c ****         }
 270              		.loc 1 741 25 is_stmt 0 view .LVU75
 271 0022 0422     		movs	r2, #4
 272              	.LVL25:
 741:Src/stream_buffer.c ****         }
 273              		.loc 1 741 25 view .LVU76
 274 0024 0DEB0201 		add	r1, sp, r2
 275 0028 FFF7FEFF 		bl	prvWriteBytesToBuffer
 276              	.LVL26:
 741:Src/stream_buffer.c ****         }
 277              		.loc 1 741 25 view .LVU77
 278 002c 0346     		mov	r3, r0
 279              	.LVL27:
 741:Src/stream_buffer.c ****         }
 280              		.loc 1 741 25 view .LVU78
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 29


 281 002e 04E0     		b	.L13
 282              	.LVL28:
 283              	.L11:
 754:Src/stream_buffer.c ****     }
 284              		.loc 1 754 9 is_stmt 1 view .LVU79
 754:Src/stream_buffer.c ****     }
 285              		.loc 1 754 28 is_stmt 0 view .LVU80
 286 0030 0199     		ldr	r1, [sp, #4]
 287              	.LVL29:
 754:Src/stream_buffer.c ****     }
 288              		.loc 1 754 28 view .LVU81
 289 0032 8A42     		cmp	r2, r1
 290 0034 28BF     		it	cs
 291 0036 0A46     		movcs	r2, r1
 292              	.LVL30:
 754:Src/stream_buffer.c ****     }
 293              		.loc 1 754 26 view .LVU82
 294 0038 0192     		str	r2, [sp, #4]
 295              	.LVL31:
 296              	.L13:
 757:Src/stream_buffer.c ****     {
 297              		.loc 1 757 5 is_stmt 1 view .LVU83
 757:Src/stream_buffer.c ****     {
 298              		.loc 1 757 26 is_stmt 0 view .LVU84
 299 003a 019A     		ldr	r2, [sp, #4]
 757:Src/stream_buffer.c ****     {
 300              		.loc 1 757 7 view .LVU85
 301 003c 12B9     		cbnz	r2, .L17
 302              	.LVL32:
 303              	.L14:
 763:Src/stream_buffer.c **** }
 304              		.loc 1 763 5 is_stmt 1 view .LVU86
 764:Src/stream_buffer.c **** /*-----------------------------------------------------------*/
 305              		.loc 1 764 1 is_stmt 0 view .LVU87
 306 003e 0198     		ldr	r0, [sp, #4]
 307 0040 02B0     		add	sp, sp, #8
 308              	.LCFI4:
 309              		.cfi_remember_state
 310              		.cfi_def_cfa_offset 16
 311              		@ sp needed
 312 0042 70BD     		pop	{r4, r5, r6, pc}
 313              	.LVL33:
 314              	.L17:
 315              	.LCFI5:
 316              		.cfi_restore_state
 760:Src/stream_buffer.c ****     }
 317              		.loc 1 760 9 is_stmt 1 view .LVU88
 760:Src/stream_buffer.c ****     }
 318              		.loc 1 760 33 is_stmt 0 view .LVU89
 319 0044 3146     		mov	r1, r6
 320 0046 2046     		mov	r0, r4
 321 0048 FFF7FEFF 		bl	prvWriteBytesToBuffer
 322              	.LVL34:
 760:Src/stream_buffer.c ****     }
 323              		.loc 1 760 31 view .LVU90
 324 004c 6060     		str	r0, [r4, #4]
 325 004e F6E7     		b	.L14
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 30


 326              		.cfi_endproc
 327              	.LFE12:
 329              		.section	.text.prvReadBytesFromBuffer,"ax",%progbits
 330              		.align	1
 331              		.syntax unified
 332              		.thumb
 333              		.thumb_func
 334              		.fpu softvfp
 336              	prvReadBytesFromBuffer:
 337              	.LVL35:
 338              	.LFB22:
1191:Src/stream_buffer.c ****     size_t xFirstLength;
 339              		.loc 1 1191 1 is_stmt 1 view -0
 340              		.cfi_startproc
 341              		@ args = 0, pretend = 0, frame = 0
 342              		@ frame_needed = 0, uses_anonymous_args = 0
1191:Src/stream_buffer.c ****     size_t xFirstLength;
 343              		.loc 1 1191 1 is_stmt 0 view .LVU92
 344 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 345              	.LCFI6:
 346              		.cfi_def_cfa_offset 24
 347              		.cfi_offset 4, -24
 348              		.cfi_offset 5, -20
 349              		.cfi_offset 6, -16
 350              		.cfi_offset 7, -12
 351              		.cfi_offset 8, -8
 352              		.cfi_offset 14, -4
 353 0004 0646     		mov	r6, r0
 354 0006 8846     		mov	r8, r1
 355 0008 1746     		mov	r7, r2
 356 000a 1C46     		mov	r4, r3
1192:Src/stream_buffer.c **** 
 357              		.loc 1 1192 5 is_stmt 1 view .LVU93
1194:Src/stream_buffer.c **** 
 358              		.loc 1 1194 43 view .LVU94
1199:Src/stream_buffer.c **** 
 359              		.loc 1 1199 5 view .LVU95
1199:Src/stream_buffer.c **** 
 360              		.loc 1 1199 20 is_stmt 0 view .LVU96
 361 000c 8568     		ldr	r5, [r0, #8]
 362 000e ED1A     		subs	r5, r5, r3
1199:Src/stream_buffer.c **** 
 363              		.loc 1 1199 18 view .LVU97
 364 0010 9542     		cmp	r5, r2
 365 0012 28BF     		it	cs
 366 0014 1546     		movcs	r5, r2
 367              	.LVL36:
1203:Src/stream_buffer.c ****     configASSERT( ( xTail + xFirstLength ) <= pxStreamBuffer->xLength );
 368              		.loc 1 1203 43 is_stmt 1 view .LVU98
1204:Src/stream_buffer.c ****     ( void ) memcpy( ( void * ) pucData, ( const void * ) &( pxStreamBuffer->pucBuffer[ xTail ] ), 
 369              		.loc 1 1204 72 view .LVU99
1205:Src/stream_buffer.c **** 
 370              		.loc 1 1205 5 view .LVU100
1205:Src/stream_buffer.c **** 
 371              		.loc 1 1205 76 is_stmt 0 view .LVU101
 372 0016 8169     		ldr	r1, [r0, #24]
 373              	.LVL37:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 31


1205:Src/stream_buffer.c **** 
 374              		.loc 1 1205 14 view .LVU102
 375 0018 2A46     		mov	r2, r5
 376              	.LVL38:
1205:Src/stream_buffer.c **** 
 377              		.loc 1 1205 14 view .LVU103
 378 001a 1944     		add	r1, r1, r3
 379 001c 4046     		mov	r0, r8
 380              	.LVL39:
1205:Src/stream_buffer.c **** 
 381              		.loc 1 1205 14 view .LVU104
 382 001e FFF7FEFF 		bl	memcpy
 383              	.LVL40:
1209:Src/stream_buffer.c ****     {
 384              		.loc 1 1209 5 is_stmt 1 view .LVU105
1209:Src/stream_buffer.c ****     {
 385              		.loc 1 1209 7 is_stmt 0 view .LVU106
 386 0022 AF42     		cmp	r7, r5
 387 0024 06D8     		bhi	.L22
 388              	.L19:
1216:Src/stream_buffer.c ****     }
 389              		.loc 1 1216 33 is_stmt 1 view .LVU107
1220:Src/stream_buffer.c **** 
 390              		.loc 1 1220 5 view .LVU108
1220:Src/stream_buffer.c **** 
 391              		.loc 1 1220 11 is_stmt 0 view .LVU109
 392 0026 E019     		adds	r0, r4, r7
 393              	.LVL41:
1222:Src/stream_buffer.c ****     {
 394              		.loc 1 1222 5 is_stmt 1 view .LVU110
1222:Src/stream_buffer.c ****     {
 395              		.loc 1 1222 32 is_stmt 0 view .LVU111
 396 0028 B368     		ldr	r3, [r6, #8]
1222:Src/stream_buffer.c ****     {
 397              		.loc 1 1222 7 view .LVU112
 398 002a 8342     		cmp	r3, r0
 399 002c 00D8     		bhi	.L18
1224:Src/stream_buffer.c ****     }
 400              		.loc 1 1224 9 is_stmt 1 view .LVU113
1224:Src/stream_buffer.c ****     }
 401              		.loc 1 1224 15 is_stmt 0 view .LVU114
 402 002e C01A     		subs	r0, r0, r3
 403              	.LVL42:
1227:Src/stream_buffer.c **** }
 404              		.loc 1 1227 5 is_stmt 1 view .LVU115
 405              	.L18:
1228:Src/stream_buffer.c **** /*-----------------------------------------------------------*/
 406              		.loc 1 1228 1 is_stmt 0 view .LVU116
 407 0030 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 408              	.LVL43:
 409              	.L22:
1212:Src/stream_buffer.c ****     }
 410              		.loc 1 1212 9 is_stmt 1 view .LVU117
1212:Src/stream_buffer.c ****     }
 411              		.loc 1 1212 18 is_stmt 0 view .LVU118
 412 0034 7A1B     		subs	r2, r7, r5
 413 0036 B169     		ldr	r1, [r6, #24]
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 32


 414 0038 08EB0500 		add	r0, r8, r5
 415 003c FFF7FEFF 		bl	memcpy
 416              	.LVL44:
 417 0040 F1E7     		b	.L19
 418              		.cfi_endproc
 419              	.LFE22:
 421              		.section	.text.prvReadMessageFromBuffer,"ax",%progbits
 422              		.align	1
 423              		.syntax unified
 424              		.thumb
 425              		.thumb_func
 426              		.fpu softvfp
 428              	prvReadMessageFromBuffer:
 429              	.LVL45:
 430              	.LFB16:
 972:Src/stream_buffer.c ****     size_t xCount, xNextMessageLength;
 431              		.loc 1 972 1 is_stmt 1 view -0
 432              		.cfi_startproc
 433              		@ args = 0, pretend = 0, frame = 8
 434              		@ frame_needed = 0, uses_anonymous_args = 0
 972:Src/stream_buffer.c ****     size_t xCount, xNextMessageLength;
 435              		.loc 1 972 1 is_stmt 0 view .LVU120
 436 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 437              	.LCFI7:
 438              		.cfi_def_cfa_offset 20
 439              		.cfi_offset 4, -20
 440              		.cfi_offset 5, -16
 441              		.cfi_offset 6, -12
 442              		.cfi_offset 7, -8
 443              		.cfi_offset 14, -4
 444 0002 83B0     		sub	sp, sp, #12
 445              	.LCFI8:
 446              		.cfi_def_cfa_offset 32
 447 0004 0546     		mov	r5, r0
 448 0006 0F46     		mov	r7, r1
 449 0008 1646     		mov	r6, r2
 450 000a 1C46     		mov	r4, r3
 973:Src/stream_buffer.c ****     configMESSAGE_BUFFER_LENGTH_TYPE xTempNextMessageLength;
 451              		.loc 1 973 5 is_stmt 1 view .LVU121
 974:Src/stream_buffer.c ****     size_t xNextTail = pxStreamBuffer->xTail;
 452              		.loc 1 974 5 view .LVU122
 975:Src/stream_buffer.c **** 
 453              		.loc 1 975 5 view .LVU123
 975:Src/stream_buffer.c **** 
 454              		.loc 1 975 12 is_stmt 0 view .LVU124
 455 000c 0368     		ldr	r3, [r0]
 456              	.LVL46:
 977:Src/stream_buffer.c ****     {
 457              		.loc 1 977 5 is_stmt 1 view .LVU125
 977:Src/stream_buffer.c ****     {
 458              		.loc 1 977 25 is_stmt 0 view .LVU126
 459 000e 027F     		ldrb	r2, [r0, #28]	@ zero_extendqisi2
 460              	.LVL47:
 977:Src/stream_buffer.c ****     {
 461              		.loc 1 977 7 view .LVU127
 462 0010 12F0010F 		tst	r2, #1
 463 0014 06D1     		bne	.L28
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 33


 464              	.LVL48:
 465              	.L24:
1008:Src/stream_buffer.c **** 
 466              		.loc 1 1008 5 is_stmt 1 view .LVU128
1008:Src/stream_buffer.c **** 
 467              		.loc 1 1008 12 is_stmt 0 view .LVU129
 468 0016 B442     		cmp	r4, r6
 469 0018 28BF     		it	cs
 470 001a 3446     		movcs	r4, r6
 471              	.LVL49:
1010:Src/stream_buffer.c ****     {
 472              		.loc 1 1010 5 is_stmt 1 view .LVU130
1010:Src/stream_buffer.c ****     {
 473              		.loc 1 1010 7 is_stmt 0 view .LVU131
 474 001c 84B9     		cbnz	r4, .L29
 475              	.LVL50:
 476              	.L23:
1017:Src/stream_buffer.c **** /*-----------------------------------------------------------*/
 477              		.loc 1 1017 1 view .LVU132
 478 001e 2046     		mov	r0, r4
 479 0020 03B0     		add	sp, sp, #12
 480              	.LCFI9:
 481              		.cfi_remember_state
 482              		.cfi_def_cfa_offset 20
 483              		@ sp needed
 484 0022 F0BD     		pop	{r4, r5, r6, r7, pc}
 485              	.LVL51:
 486              	.L28:
 487              	.LCFI10:
 488              		.cfi_restore_state
 981:Src/stream_buffer.c ****         xNextMessageLength = ( size_t ) xTempNextMessageLength;
 489              		.loc 1 981 9 is_stmt 1 view .LVU133
 981:Src/stream_buffer.c ****         xNextMessageLength = ( size_t ) xTempNextMessageLength;
 490              		.loc 1 981 21 is_stmt 0 view .LVU134
 491 0024 0422     		movs	r2, #4
 492 0026 0DEB0201 		add	r1, sp, r2
 493              	.LVL52:
 981:Src/stream_buffer.c ****         xNextMessageLength = ( size_t ) xTempNextMessageLength;
 494              		.loc 1 981 21 view .LVU135
 495 002a FFF7FEFF 		bl	prvReadBytesFromBuffer
 496              	.LVL53:
 981:Src/stream_buffer.c ****         xNextMessageLength = ( size_t ) xTempNextMessageLength;
 497              		.loc 1 981 21 view .LVU136
 498 002e 0346     		mov	r3, r0
 499              	.LVL54:
 982:Src/stream_buffer.c **** 
 500              		.loc 1 982 9 is_stmt 1 view .LVU137
 982:Src/stream_buffer.c **** 
 501              		.loc 1 982 28 is_stmt 0 view .LVU138
 502 0030 019A     		ldr	r2, [sp, #4]
 503              	.LVL55:
 986:Src/stream_buffer.c **** 
 504              		.loc 1 986 9 is_stmt 1 view .LVU139
 986:Src/stream_buffer.c **** 
 505              		.loc 1 986 25 is_stmt 0 view .LVU140
 506 0032 043C     		subs	r4, r4, #4
 507              	.LVL56:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 34


 990:Src/stream_buffer.c ****         {
 508              		.loc 1 990 9 is_stmt 1 view .LVU141
 990:Src/stream_buffer.c ****         {
 509              		.loc 1 990 11 is_stmt 0 view .LVU142
 510 0034 9642     		cmp	r6, r2
 511 0036 01D3     		bcc	.L26
 982:Src/stream_buffer.c **** 
 512              		.loc 1 982 28 view .LVU143
 513 0038 1646     		mov	r6, r2
 514              	.LVL57:
 982:Src/stream_buffer.c **** 
 515              		.loc 1 982 28 view .LVU144
 516 003a ECE7     		b	.L24
 517              	.LVL58:
 518              	.L26:
 993:Src/stream_buffer.c ****         }
 519              		.loc 1 993 32 view .LVU145
 520 003c 0026     		movs	r6, #0
 521              	.LVL59:
 993:Src/stream_buffer.c ****         }
 522              		.loc 1 993 32 view .LVU146
 523 003e EAE7     		b	.L24
 524              	.LVL60:
 525              	.L29:
1013:Src/stream_buffer.c ****     }
 526              		.loc 1 1013 9 is_stmt 1 view .LVU147
1013:Src/stream_buffer.c ****     }
 527              		.loc 1 1013 33 is_stmt 0 view .LVU148
 528 0040 2246     		mov	r2, r4
 529 0042 3946     		mov	r1, r7
 530 0044 2846     		mov	r0, r5
 531 0046 FFF7FEFF 		bl	prvReadBytesFromBuffer
 532              	.LVL61:
1013:Src/stream_buffer.c ****     }
 533              		.loc 1 1013 31 view .LVU149
 534 004a 2860     		str	r0, [r5]
1016:Src/stream_buffer.c **** }
 535              		.loc 1 1016 5 is_stmt 1 view .LVU150
1016:Src/stream_buffer.c **** }
 536              		.loc 1 1016 12 is_stmt 0 view .LVU151
 537 004c E7E7     		b	.L23
 538              		.cfi_endproc
 539              	.LFE16:
 541              		.section	.text.xStreamBufferGenericCreate,"ax",%progbits
 542              		.align	1
 543              		.global	xStreamBufferGenericCreate
 544              		.syntax unified
 545              		.thumb
 546              		.thumb_func
 547              		.fpu softvfp
 549              	xStreamBufferGenericCreate:
 550              	.LVL62:
 551              	.LFB4:
 238:Src/stream_buffer.c ****         uint8_t * pucAllocatedMemory;
 552              		.loc 1 238 5 is_stmt 1 view -0
 553              		.cfi_startproc
 554              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 35


 555              		@ frame_needed = 0, uses_anonymous_args = 0
 238:Src/stream_buffer.c ****         uint8_t * pucAllocatedMemory;
 556              		.loc 1 238 5 is_stmt 0 view .LVU153
 557 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 558              	.LCFI11:
 559              		.cfi_def_cfa_offset 20
 560              		.cfi_offset 4, -20
 561              		.cfi_offset 5, -16
 562              		.cfi_offset 6, -12
 563              		.cfi_offset 7, -8
 564              		.cfi_offset 14, -4
 565 0002 83B0     		sub	sp, sp, #12
 566              	.LCFI12:
 567              		.cfi_def_cfa_offset 32
 568 0004 0C46     		mov	r4, r1
 239:Src/stream_buffer.c ****         uint8_t ucFlags;
 569              		.loc 1 239 9 is_stmt 1 view .LVU154
 240:Src/stream_buffer.c **** 
 570              		.loc 1 240 9 view .LVU155
 246:Src/stream_buffer.c ****         {
 571              		.loc 1 246 9 view .LVU156
 246:Src/stream_buffer.c ****         {
 572              		.loc 1 246 11 is_stmt 0 view .LVU157
 573 0006 012A     		cmp	r2, #1
 574 0008 13D0     		beq	.L38
 255:Src/stream_buffer.c ****             configASSERT( xBufferSizeBytes > 0 );
 575              		.loc 1 255 21 view .LVU158
 576 000a 0026     		movs	r6, #0
 577              	.L31:
 578              	.LVL63:
 256:Src/stream_buffer.c ****         }
 579              		.loc 1 256 49 is_stmt 1 view .LVU159
 259:Src/stream_buffer.c **** 
 580              		.loc 1 259 63 view .LVU160
 263:Src/stream_buffer.c ****         {
 581              		.loc 1 263 9 view .LVU161
 263:Src/stream_buffer.c ****         {
 582              		.loc 1 263 11 is_stmt 0 view .LVU162
 583 000c 04B9     		cbnz	r4, .L32
 265:Src/stream_buffer.c ****         }
 584              		.loc 1 265 32 view .LVU163
 585 000e 0124     		movs	r4, #1
 586              	.L32:
 587              	.LVL64:
 276:Src/stream_buffer.c ****         {
 588              		.loc 1 276 9 is_stmt 1 view .LVU164
 276:Src/stream_buffer.c ****         {
 589              		.loc 1 276 11 is_stmt 0 view .LVU165
 590 0010 10F1220F 		cmn	r0, #34
 591 0014 0FD8     		bhi	.L36
 278:Src/stream_buffer.c ****             pucAllocatedMemory = ( uint8_t * ) pvPortMalloc( xBufferSizeBytes + sizeof( StreamBuffe
 592              		.loc 1 278 13 is_stmt 1 view .LVU166
 278:Src/stream_buffer.c ****             pucAllocatedMemory = ( uint8_t * ) pvPortMalloc( xBufferSizeBytes + sizeof( StreamBuffe
 593              		.loc 1 278 29 is_stmt 0 view .LVU167
 594 0016 471C     		adds	r7, r0, #1
 595              	.LVL65:
 279:Src/stream_buffer.c ****         }
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 36


 596              		.loc 1 279 13 is_stmt 1 view .LVU168
 279:Src/stream_buffer.c ****         }
 597              		.loc 1 279 48 is_stmt 0 view .LVU169
 598 0018 2130     		adds	r0, r0, #33
 599 001a FFF7FEFF 		bl	pvPortMalloc
 600              	.LVL66:
 286:Src/stream_buffer.c ****         {
 601              		.loc 1 286 9 is_stmt 1 view .LVU170
 286:Src/stream_buffer.c ****         {
 602              		.loc 1 286 11 is_stmt 0 view .LVU171
 603 001e 0546     		mov	r5, r0
 604 0020 50B1     		cbz	r0, .L30
 288:Src/stream_buffer.c ****                                           pucAllocatedMemory + sizeof( StreamBuffer_t ), /* Storage
 605              		.loc 1 288 13 is_stmt 1 view .LVU172
 606 0022 0096     		str	r6, [sp]
 607 0024 2346     		mov	r3, r4
 608 0026 3A46     		mov	r2, r7
 609 0028 00F12001 		add	r1, r0, #32
 610 002c FFF7FEFF 		bl	prvInitialiseNewStreamBuffer
 611              	.LVL67:
 294:Src/stream_buffer.c ****         }
 612              		.loc 1 294 103 view .LVU173
 613 0030 02E0     		b	.L30
 614              	.LVL68:
 615              	.L38:
 249:Src/stream_buffer.c ****             configASSERT( xBufferSizeBytes > sbBYTES_TO_STORE_MESSAGE_LENGTH );
 616              		.loc 1 249 21 is_stmt 0 view .LVU174
 617 0032 0126     		movs	r6, #1
 618 0034 EAE7     		b	.L31
 619              	.LVL69:
 620              	.L36:
 283:Src/stream_buffer.c ****         }
 621              		.loc 1 283 32 view .LVU175
 622 0036 0025     		movs	r5, #0
 623              	.LVL70:
 298:Src/stream_buffer.c ****         }
 624              		.loc 1 298 65 is_stmt 1 view .LVU176
 301:Src/stream_buffer.c ****     }
 625              		.loc 1 301 9 view .LVU177
 626              	.L30:
 302:Src/stream_buffer.c **** 
 627              		.loc 1 302 5 is_stmt 0 view .LVU178
 628 0038 2846     		mov	r0, r5
 629 003a 03B0     		add	sp, sp, #12
 630              	.LCFI13:
 631              		.cfi_def_cfa_offset 20
 632              		@ sp needed
 633 003c F0BD     		pop	{r4, r5, r6, r7, pc}
 302:Src/stream_buffer.c **** 
 634              		.loc 1 302 5 view .LVU179
 635              		.cfi_endproc
 636              	.LFE4:
 638              		.section	.text.vStreamBufferDelete,"ax",%progbits
 639              		.align	1
 640              		.global	vStreamBufferDelete
 641              		.syntax unified
 642              		.thumb
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 37


 643              		.thumb_func
 644              		.fpu softvfp
 646              	vStreamBufferDelete:
 647              	.LVL71:
 648              	.LFB5:
 386:Src/stream_buffer.c ****     StreamBuffer_t * pxStreamBuffer = xStreamBuffer;
 649              		.loc 1 386 1 is_stmt 1 view -0
 650              		.cfi_startproc
 651              		@ args = 0, pretend = 0, frame = 0
 652              		@ frame_needed = 0, uses_anonymous_args = 0
 386:Src/stream_buffer.c ****     StreamBuffer_t * pxStreamBuffer = xStreamBuffer;
 653              		.loc 1 386 1 is_stmt 0 view .LVU181
 654 0000 08B5     		push	{r3, lr}
 655              	.LCFI14:
 656              		.cfi_def_cfa_offset 8
 657              		.cfi_offset 3, -8
 658              		.cfi_offset 14, -4
 387:Src/stream_buffer.c **** 
 659              		.loc 1 387 5 is_stmt 1 view .LVU182
 660              	.LVL72:
 389:Src/stream_buffer.c **** 
 661              		.loc 1 389 35 view .LVU183
 391:Src/stream_buffer.c **** 
 662              		.loc 1 391 47 view .LVU184
 393:Src/stream_buffer.c ****     {
 663              		.loc 1 393 5 view .LVU185
 393:Src/stream_buffer.c ****     {
 664              		.loc 1 393 25 is_stmt 0 view .LVU186
 665 0002 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 393:Src/stream_buffer.c ****     {
 666              		.loc 1 393 7 view .LVU187
 667 0004 13F0020F 		tst	r3, #2
 668 0008 02D1     		bne	.L40
 399:Src/stream_buffer.c ****             }
 669              		.loc 1 399 17 is_stmt 1 view .LVU188
 670 000a FFF7FEFF 		bl	vPortFree
 671              	.LVL73:
 672              	.L39:
 415:Src/stream_buffer.c **** /*-----------------------------------------------------------*/
 673              		.loc 1 415 1 is_stmt 0 view .LVU189
 674 000e 08BD     		pop	{r3, pc}
 675              	.LVL74:
 676              	.L40:
 413:Src/stream_buffer.c ****     }
 677              		.loc 1 413 9 is_stmt 1 view .LVU190
 413:Src/stream_buffer.c ****     }
 678              		.loc 1 413 18 is_stmt 0 view .LVU191
 679 0010 2022     		movs	r2, #32
 680 0012 0021     		movs	r1, #0
 681 0014 FFF7FEFF 		bl	memset
 682              	.LVL75:
 415:Src/stream_buffer.c **** /*-----------------------------------------------------------*/
 683              		.loc 1 415 1 view .LVU192
 684 0018 F9E7     		b	.L39
 685              		.cfi_endproc
 686              	.LFE5:
 688              		.section	.text.xStreamBufferReset,"ax",%progbits
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 38


 689              		.align	1
 690              		.global	xStreamBufferReset
 691              		.syntax unified
 692              		.thumb
 693              		.thumb_func
 694              		.fpu softvfp
 696              	xStreamBufferReset:
 697              	.LVL76:
 698              	.LFB6:
 419:Src/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 699              		.loc 1 419 1 is_stmt 1 view -0
 700              		.cfi_startproc
 701              		@ args = 0, pretend = 0, frame = 0
 702              		@ frame_needed = 0, uses_anonymous_args = 0
 419:Src/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 703              		.loc 1 419 1 is_stmt 0 view .LVU194
 704 0000 10B5     		push	{r4, lr}
 705              	.LCFI15:
 706              		.cfi_def_cfa_offset 8
 707              		.cfi_offset 4, -8
 708              		.cfi_offset 14, -4
 709 0002 82B0     		sub	sp, sp, #8
 710              	.LCFI16:
 711              		.cfi_def_cfa_offset 16
 712 0004 0446     		mov	r4, r0
 420:Src/stream_buffer.c ****     BaseType_t xReturn = pdFAIL;
 713              		.loc 1 420 5 is_stmt 1 view .LVU195
 714              	.LVL77:
 421:Src/stream_buffer.c **** 
 715              		.loc 1 421 5 view .LVU196
 427:Src/stream_buffer.c **** 
 716              		.loc 1 427 35 view .LVU197
 438:Src/stream_buffer.c ****     {
 717              		.loc 1 438 5 view .LVU198
 718 0006 FFF7FEFF 		bl	vPortEnterCritical
 719              	.LVL78:
 440:Src/stream_buffer.c ****         {
 720              		.loc 1 440 9 view .LVU199
 440:Src/stream_buffer.c ****         {
 721              		.loc 1 440 27 is_stmt 0 view .LVU200
 722 000a 2369     		ldr	r3, [r4, #16]
 440:Src/stream_buffer.c ****         {
 723              		.loc 1 440 11 view .LVU201
 724 000c 2BB1     		cbz	r3, .L48
 421:Src/stream_buffer.c **** 
 725              		.loc 1 421 16 view .LVU202
 726 000e 0024     		movs	r4, #0
 727              	.LVL79:
 728              	.L44:
 457:Src/stream_buffer.c ****             }
 729              		.loc 1 457 58 is_stmt 1 view .LVU203
 461:Src/stream_buffer.c **** 
 730              		.loc 1 461 5 view .LVU204
 731 0010 FFF7FEFF 		bl	vPortExitCritical
 732              	.LVL80:
 463:Src/stream_buffer.c **** }
 733              		.loc 1 463 5 view .LVU205
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 39


 464:Src/stream_buffer.c **** /*-----------------------------------------------------------*/
 734              		.loc 1 464 1 is_stmt 0 view .LVU206
 735 0014 2046     		mov	r0, r4
 736 0016 02B0     		add	sp, sp, #8
 737              	.LCFI17:
 738              		.cfi_remember_state
 739              		.cfi_def_cfa_offset 8
 740              		@ sp needed
 741 0018 10BD     		pop	{r4, pc}
 742              	.LVL81:
 743              	.L48:
 744              	.LCFI18:
 745              		.cfi_restore_state
 442:Src/stream_buffer.c ****             {
 746              		.loc 1 442 13 is_stmt 1 view .LVU207
 442:Src/stream_buffer.c ****             {
 747              		.loc 1 442 31 is_stmt 0 view .LVU208
 748 001a 6369     		ldr	r3, [r4, #20]
 442:Src/stream_buffer.c ****             {
 749              		.loc 1 442 15 view .LVU209
 750 001c 0BB1     		cbz	r3, .L49
 421:Src/stream_buffer.c **** 
 751              		.loc 1 421 16 view .LVU210
 752 001e 0024     		movs	r4, #0
 753              	.LVL82:
 421:Src/stream_buffer.c **** 
 754              		.loc 1 421 16 view .LVU211
 755 0020 F6E7     		b	.L44
 756              	.LVL83:
 757              	.L49:
 444:Src/stream_buffer.c ****                                               pxStreamBuffer->pucBuffer,
 758              		.loc 1 444 17 is_stmt 1 view .LVU212
 759 0022 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 760 0024 0093     		str	r3, [sp]
 761 0026 E368     		ldr	r3, [r4, #12]
 762 0028 A268     		ldr	r2, [r4, #8]
 763 002a A169     		ldr	r1, [r4, #24]
 764 002c 2046     		mov	r0, r4
 765 002e FFF7FEFF 		bl	prvInitialiseNewStreamBuffer
 766              	.LVL84:
 449:Src/stream_buffer.c **** 
 767              		.loc 1 449 17 view .LVU213
 449:Src/stream_buffer.c **** 
 768              		.loc 1 449 25 is_stmt 0 view .LVU214
 769 0032 0124     		movs	r4, #1
 770              	.LVL85:
 449:Src/stream_buffer.c **** 
 771              		.loc 1 449 25 view .LVU215
 772 0034 ECE7     		b	.L44
 773              		.cfi_endproc
 774              	.LFE6:
 776              		.section	.text.xStreamBufferSetTriggerLevel,"ax",%progbits
 777              		.align	1
 778              		.global	xStreamBufferSetTriggerLevel
 779              		.syntax unified
 780              		.thumb
 781              		.thumb_func
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 40


 782              		.fpu softvfp
 784              	xStreamBufferSetTriggerLevel:
 785              	.LVL86:
 786              	.LFB7:
 469:Src/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 787              		.loc 1 469 1 is_stmt 1 view -0
 788              		.cfi_startproc
 789              		@ args = 0, pretend = 0, frame = 0
 790              		@ frame_needed = 0, uses_anonymous_args = 0
 791              		@ link register save eliminated.
 470:Src/stream_buffer.c ****     BaseType_t xReturn;
 792              		.loc 1 470 5 view .LVU217
 471:Src/stream_buffer.c **** 
 793              		.loc 1 471 5 view .LVU218
 473:Src/stream_buffer.c **** 
 794              		.loc 1 473 35 view .LVU219
 476:Src/stream_buffer.c ****     {
 795              		.loc 1 476 5 view .LVU220
 476:Src/stream_buffer.c ****     {
 796              		.loc 1 476 7 is_stmt 0 view .LVU221
 797 0000 0B46     		mov	r3, r1
 798 0002 01B9     		cbnz	r1, .L51
 478:Src/stream_buffer.c ****     }
 799              		.loc 1 478 23 view .LVU222
 800 0004 0123     		movs	r3, #1
 801              	.L51:
 802              	.LVL87:
 483:Src/stream_buffer.c ****     {
 803              		.loc 1 483 5 is_stmt 1 view .LVU223
 483:Src/stream_buffer.c ****     {
 804              		.loc 1 483 39 is_stmt 0 view .LVU224
 805 0006 8268     		ldr	r2, [r0, #8]
 483:Src/stream_buffer.c ****     {
 806              		.loc 1 483 7 view .LVU225
 807 0008 9A42     		cmp	r2, r3
 808 000a 02D9     		bls	.L54
 485:Src/stream_buffer.c ****         xReturn = pdPASS;
 809              		.loc 1 485 9 is_stmt 1 view .LVU226
 485:Src/stream_buffer.c ****         xReturn = pdPASS;
 810              		.loc 1 485 44 is_stmt 0 view .LVU227
 811 000c C360     		str	r3, [r0, #12]
 486:Src/stream_buffer.c ****     }
 812              		.loc 1 486 9 is_stmt 1 view .LVU228
 813              	.LVL88:
 486:Src/stream_buffer.c ****     }
 814              		.loc 1 486 17 is_stmt 0 view .LVU229
 815 000e 0120     		movs	r0, #1
 816              	.LVL89:
 486:Src/stream_buffer.c ****     }
 817              		.loc 1 486 17 view .LVU230
 818 0010 7047     		bx	lr
 819              	.LVL90:
 820              	.L54:
 490:Src/stream_buffer.c ****     }
 821              		.loc 1 490 17 view .LVU231
 822 0012 0020     		movs	r0, #0
 823              	.LVL91:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 41


 493:Src/stream_buffer.c **** }
 824              		.loc 1 493 5 is_stmt 1 view .LVU232
 494:Src/stream_buffer.c **** /*-----------------------------------------------------------*/
 825              		.loc 1 494 1 is_stmt 0 view .LVU233
 826 0014 7047     		bx	lr
 827              		.cfi_endproc
 828              	.LFE7:
 830              		.section	.text.xStreamBufferSpacesAvailable,"ax",%progbits
 831              		.align	1
 832              		.global	xStreamBufferSpacesAvailable
 833              		.syntax unified
 834              		.thumb
 835              		.thumb_func
 836              		.fpu softvfp
 838              	xStreamBufferSpacesAvailable:
 839              	.LFB8:
 498:Src/stream_buffer.c ****     const StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 840              		.loc 1 498 1 is_stmt 1 view -0
 841              		.cfi_startproc
 842              		@ args = 0, pretend = 0, frame = 0
 843              		@ frame_needed = 0, uses_anonymous_args = 0
 844              		@ link register save eliminated.
 845              	.LVL92:
 498:Src/stream_buffer.c ****     const StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 846              		.loc 1 498 1 is_stmt 0 view .LVU235
 847 0000 10B4     		push	{r4}
 848              	.LCFI19:
 849              		.cfi_def_cfa_offset 4
 850              		.cfi_offset 4, -4
 851              	.L56:
 500:Src/stream_buffer.c ****     size_t xOriginalTail;
 852              		.loc 1 500 5 is_stmt 1 discriminator 1 view .LVU236
 501:Src/stream_buffer.c **** 
 853              		.loc 1 501 5 discriminator 1 view .LVU237
 503:Src/stream_buffer.c **** 
 854              		.loc 1 503 35 discriminator 1 view .LVU238
 508:Src/stream_buffer.c ****     {
 855              		.loc 1 508 5 discriminator 1 view .LVU239
 510:Src/stream_buffer.c ****         xSpace = pxStreamBuffer->xLength + pxStreamBuffer->xTail;
 856              		.loc 1 510 9 discriminator 1 view .LVU240
 510:Src/stream_buffer.c ****         xSpace = pxStreamBuffer->xLength + pxStreamBuffer->xTail;
 857              		.loc 1 510 23 is_stmt 0 discriminator 1 view .LVU241
 858 0002 0168     		ldr	r1, [r0]
 859              	.LVL93:
 511:Src/stream_buffer.c ****         xSpace -= pxStreamBuffer->xHead;
 860              		.loc 1 511 9 is_stmt 1 discriminator 1 view .LVU242
 511:Src/stream_buffer.c ****         xSpace -= pxStreamBuffer->xHead;
 861              		.loc 1 511 32 is_stmt 0 discriminator 1 view .LVU243
 862 0004 8268     		ldr	r2, [r0, #8]
 511:Src/stream_buffer.c ****         xSpace -= pxStreamBuffer->xHead;
 863              		.loc 1 511 58 discriminator 1 view .LVU244
 864 0006 0368     		ldr	r3, [r0]
 511:Src/stream_buffer.c ****         xSpace -= pxStreamBuffer->xHead;
 865              		.loc 1 511 16 discriminator 1 view .LVU245
 866 0008 1344     		add	r3, r3, r2
 867              	.LVL94:
 512:Src/stream_buffer.c ****     } while( xOriginalTail != pxStreamBuffer->xTail );
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 42


 868              		.loc 1 512 9 is_stmt 1 discriminator 1 view .LVU246
 512:Src/stream_buffer.c ****     } while( xOriginalTail != pxStreamBuffer->xTail );
 869              		.loc 1 512 33 is_stmt 0 discriminator 1 view .LVU247
 870 000a 4468     		ldr	r4, [r0, #4]
 512:Src/stream_buffer.c ****     } while( xOriginalTail != pxStreamBuffer->xTail );
 871              		.loc 1 512 16 discriminator 1 view .LVU248
 872 000c 1B1B     		subs	r3, r3, r4
 873              	.LVL95:
 513:Src/stream_buffer.c **** 
 874              		.loc 1 513 12 is_stmt 1 discriminator 1 view .LVU249
 513:Src/stream_buffer.c **** 
 875              		.loc 1 513 45 is_stmt 0 discriminator 1 view .LVU250
 876 000e 0468     		ldr	r4, [r0]
 513:Src/stream_buffer.c **** 
 877              		.loc 1 513 5 discriminator 1 view .LVU251
 878 0010 8C42     		cmp	r4, r1
 879 0012 F6D1     		bne	.L56
 515:Src/stream_buffer.c **** 
 880              		.loc 1 515 5 is_stmt 1 view .LVU252
 515:Src/stream_buffer.c **** 
 881              		.loc 1 515 12 is_stmt 0 view .LVU253
 882 0014 581E     		subs	r0, r3, #1
 883              	.LVL96:
 517:Src/stream_buffer.c ****     {
 884              		.loc 1 517 5 is_stmt 1 view .LVU254
 517:Src/stream_buffer.c ****     {
 885              		.loc 1 517 7 is_stmt 0 view .LVU255
 886 0016 8242     		cmp	r2, r0
 887 0018 00D8     		bhi	.L55
 519:Src/stream_buffer.c ****     }
 888              		.loc 1 519 9 is_stmt 1 view .LVU256
 519:Src/stream_buffer.c ****     }
 889              		.loc 1 519 16 is_stmt 0 view .LVU257
 890 001a 801A     		subs	r0, r0, r2
 891              	.LVL97:
 523:Src/stream_buffer.c ****     }
 892              		.loc 1 523 33 is_stmt 1 view .LVU258
 526:Src/stream_buffer.c **** }
 893              		.loc 1 526 5 view .LVU259
 894              	.L55:
 527:Src/stream_buffer.c **** /*-----------------------------------------------------------*/
 895              		.loc 1 527 1 is_stmt 0 view .LVU260
 896 001c 10BC     		pop	{r4}
 897              	.LCFI20:
 898              		.cfi_restore 4
 899              		.cfi_def_cfa_offset 0
 900 001e 7047     		bx	lr
 901              		.cfi_endproc
 902              	.LFE8:
 904              		.section	.text.xStreamBufferBytesAvailable,"ax",%progbits
 905              		.align	1
 906              		.global	xStreamBufferBytesAvailable
 907              		.syntax unified
 908              		.thumb
 909              		.thumb_func
 910              		.fpu softvfp
 912              	xStreamBufferBytesAvailable:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 43


 913              	.LVL98:
 914              	.LFB9:
 531:Src/stream_buffer.c ****     const StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 915              		.loc 1 531 1 is_stmt 1 view -0
 916              		.cfi_startproc
 917              		@ args = 0, pretend = 0, frame = 0
 918              		@ frame_needed = 0, uses_anonymous_args = 0
 531:Src/stream_buffer.c ****     const StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 919              		.loc 1 531 1 is_stmt 0 view .LVU262
 920 0000 08B5     		push	{r3, lr}
 921              	.LCFI21:
 922              		.cfi_def_cfa_offset 8
 923              		.cfi_offset 3, -8
 924              		.cfi_offset 14, -4
 532:Src/stream_buffer.c ****     size_t xReturn;
 925              		.loc 1 532 5 is_stmt 1 view .LVU263
 926              	.LVL99:
 533:Src/stream_buffer.c **** 
 927              		.loc 1 533 5 view .LVU264
 535:Src/stream_buffer.c **** 
 928              		.loc 1 535 35 view .LVU265
 537:Src/stream_buffer.c ****     return xReturn;
 929              		.loc 1 537 5 view .LVU266
 537:Src/stream_buffer.c ****     return xReturn;
 930              		.loc 1 537 15 is_stmt 0 view .LVU267
 931 0002 FFF7FEFF 		bl	prvBytesInBuffer
 932              	.LVL100:
 538:Src/stream_buffer.c **** }
 933              		.loc 1 538 5 is_stmt 1 view .LVU268
 539:Src/stream_buffer.c **** /*-----------------------------------------------------------*/
 934              		.loc 1 539 1 is_stmt 0 view .LVU269
 935 0006 08BD     		pop	{r3, pc}
 936              		.cfi_endproc
 937              	.LFE9:
 939              		.section	.text.xStreamBufferSend,"ax",%progbits
 940              		.align	1
 941              		.global	xStreamBufferSend
 942              		.syntax unified
 943              		.thumb
 944              		.thumb_func
 945              		.fpu softvfp
 947              	xStreamBufferSend:
 948              	.LVL101:
 949              	.LFB10:
 546:Src/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 950              		.loc 1 546 1 is_stmt 1 view -0
 951              		.cfi_startproc
 952              		@ args = 0, pretend = 0, frame = 16
 953              		@ frame_needed = 0, uses_anonymous_args = 0
 546:Src/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 954              		.loc 1 546 1 is_stmt 0 view .LVU271
 955 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 956              	.LCFI22:
 957              		.cfi_def_cfa_offset 24
 958              		.cfi_offset 4, -24
 959              		.cfi_offset 5, -20
 960              		.cfi_offset 6, -16
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 44


 961              		.cfi_offset 7, -12
 962              		.cfi_offset 8, -8
 963              		.cfi_offset 14, -4
 964 0004 86B0     		sub	sp, sp, #24
 965              	.LCFI23:
 966              		.cfi_def_cfa_offset 48
 967 0006 0546     		mov	r5, r0
 968 0008 8846     		mov	r8, r1
 969 000a 1746     		mov	r7, r2
 970 000c 0393     		str	r3, [sp, #12]
 547:Src/stream_buffer.c ****     size_t xReturn, xSpace = 0;
 971              		.loc 1 547 5 is_stmt 1 view .LVU272
 972              	.LVL102:
 548:Src/stream_buffer.c ****     size_t xRequiredSpace = xDataLengthBytes;
 973              		.loc 1 548 5 view .LVU273
 549:Src/stream_buffer.c ****     TimeOut_t xTimeOut;
 974              		.loc 1 549 5 view .LVU274
 550:Src/stream_buffer.c ****     size_t xMaxReportedSpace = 0;
 975              		.loc 1 550 5 view .LVU275
 551:Src/stream_buffer.c **** 
 976              		.loc 1 551 5 view .LVU276
 553:Src/stream_buffer.c ****     configASSERT( pxStreamBuffer );
 977              		.loc 1 553 29 view .LVU277
 554:Src/stream_buffer.c **** 
 978              		.loc 1 554 35 view .LVU278
 558:Src/stream_buffer.c **** 
 979              		.loc 1 558 5 view .LVU279
 558:Src/stream_buffer.c **** 
 980              		.loc 1 558 39 is_stmt 0 view .LVU280
 981 000e 8368     		ldr	r3, [r0, #8]
 982              	.LVL103:
 558:Src/stream_buffer.c **** 
 983              		.loc 1 558 23 view .LVU281
 984 0010 013B     		subs	r3, r3, #1
 985              	.LVL104:
 564:Src/stream_buffer.c ****     {
 986              		.loc 1 564 5 is_stmt 1 view .LVU282
 564:Src/stream_buffer.c ****     {
 987              		.loc 1 564 25 is_stmt 0 view .LVU283
 988 0012 027F     		ldrb	r2, [r0, #28]	@ zero_extendqisi2
 989              	.LVL105:
 564:Src/stream_buffer.c ****     {
 990              		.loc 1 564 7 view .LVU284
 991 0014 12F0010F 		tst	r2, #1
 992 0018 2BD0     		beq	.L62
 566:Src/stream_buffer.c **** 
 993              		.loc 1 566 9 is_stmt 1 view .LVU285
 566:Src/stream_buffer.c **** 
 994              		.loc 1 566 24 is_stmt 0 view .LVU286
 995 001a 3E1D     		adds	r6, r7, #4
 996              	.LVL106:
 569:Src/stream_buffer.c **** 
 997              		.loc 1 569 58 is_stmt 1 view .LVU287
 573:Src/stream_buffer.c ****         {
 998              		.loc 1 573 9 view .LVU288
 573:Src/stream_buffer.c ****         {
 999              		.loc 1 573 11 is_stmt 0 view .LVU289
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 45


 1000 001c B342     		cmp	r3, r6
 1001 001e 01D2     		bcs	.L63
 577:Src/stream_buffer.c ****         }
 1002              		.loc 1 577 13 is_stmt 1 view .LVU290
 577:Src/stream_buffer.c ****         }
 1003              		.loc 1 577 26 is_stmt 0 view .LVU291
 1004 0020 0023     		movs	r3, #0
 1005              	.LVL107:
 577:Src/stream_buffer.c ****         }
 1006              		.loc 1 577 26 view .LVU292
 1007 0022 0393     		str	r3, [sp, #12]
 1008              	.LVL108:
 1009              	.L63:
 595:Src/stream_buffer.c ****         }
 1010              		.loc 1 595 37 is_stmt 1 view .LVU293
 599:Src/stream_buffer.c ****     {
 1011              		.loc 1 599 5 view .LVU294
 599:Src/stream_buffer.c ****     {
 1012              		.loc 1 599 22 is_stmt 0 view .LVU295
 1013 0024 039B     		ldr	r3, [sp, #12]
 599:Src/stream_buffer.c ****     {
 1014              		.loc 1 599 7 view .LVU296
 1015 0026 6BB3     		cbz	r3, .L64
 601:Src/stream_buffer.c **** 
 1016              		.loc 1 601 9 is_stmt 1 view .LVU297
 1017 0028 04A8     		add	r0, sp, #16
 1018              	.LVL109:
 601:Src/stream_buffer.c **** 
 1019              		.loc 1 601 9 is_stmt 0 view .LVU298
 1020 002a FFF7FEFF 		bl	vTaskSetTimeOutState
 1021              	.LVL110:
 1022              	.L66:
 603:Src/stream_buffer.c ****         {
 1023              		.loc 1 603 9 is_stmt 1 view .LVU299
 607:Src/stream_buffer.c ****             {
 1024              		.loc 1 607 13 view .LVU300
 1025 002e FFF7FEFF 		bl	vPortEnterCritical
 1026              	.LVL111:
 609:Src/stream_buffer.c **** 
 1027              		.loc 1 609 17 view .LVU301
 609:Src/stream_buffer.c **** 
 1028              		.loc 1 609 26 is_stmt 0 view .LVU302
 1029 0032 2846     		mov	r0, r5
 1030 0034 FFF7FEFF 		bl	xStreamBufferSpacesAvailable
 1031              	.LVL112:
 1032 0038 0446     		mov	r4, r0
 1033              	.LVL113:
 611:Src/stream_buffer.c ****                 {
 1034              		.loc 1 611 17 is_stmt 1 view .LVU303
 611:Src/stream_buffer.c ****                 {
 1035              		.loc 1 611 19 is_stmt 0 view .LVU304
 1036 003a 8642     		cmp	r6, r0
 1037 003c 1FD9     		bls	.L65
 614:Src/stream_buffer.c **** 
 1038              		.loc 1 614 21 is_stmt 1 view .LVU305
 614:Src/stream_buffer.c **** 
 1039              		.loc 1 614 30 is_stmt 0 view .LVU306
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 46


 1040 003e 0021     		movs	r1, #0
 1041 0040 0846     		mov	r0, r1
 1042              	.LVL114:
 614:Src/stream_buffer.c **** 
 1043              		.loc 1 614 30 view .LVU307
 1044 0042 FFF7FEFF 		bl	xTaskGenericNotifyStateClear
 1045              	.LVL115:
 617:Src/stream_buffer.c ****                     pxStreamBuffer->xTaskWaitingToSend = xTaskGetCurrentTaskHandle();
 1046              		.loc 1 617 79 is_stmt 1 view .LVU308
 618:Src/stream_buffer.c ****                 }
 1047              		.loc 1 618 21 view .LVU309
 618:Src/stream_buffer.c ****                 }
 1048              		.loc 1 618 58 is_stmt 0 view .LVU310
 1049 0046 FFF7FEFF 		bl	xTaskGetCurrentTaskHandle
 1050              	.LVL116:
 618:Src/stream_buffer.c ****                 }
 1051              		.loc 1 618 56 view .LVU311
 1052 004a 6861     		str	r0, [r5, #20]
 626:Src/stream_buffer.c **** 
 1053              		.loc 1 626 13 is_stmt 1 view .LVU312
 1054 004c FFF7FEFF 		bl	vPortExitCritical
 1055              	.LVL117:
 628:Src/stream_buffer.c ****             ( void ) xTaskNotifyWait( ( uint32_t ) 0, ( uint32_t ) 0, NULL, xTicksToWait );
 1056              		.loc 1 628 65 view .LVU313
 629:Src/stream_buffer.c ****             pxStreamBuffer->xTaskWaitingToSend = NULL;
 1057              		.loc 1 629 13 view .LVU314
 1058 0050 039B     		ldr	r3, [sp, #12]
 629:Src/stream_buffer.c ****             pxStreamBuffer->xTaskWaitingToSend = NULL;
 1059              		.loc 1 629 22 is_stmt 0 view .LVU315
 1060 0052 0093     		str	r3, [sp]
 1061 0054 0023     		movs	r3, #0
 1062 0056 1A46     		mov	r2, r3
 1063 0058 1946     		mov	r1, r3
 1064 005a 1846     		mov	r0, r3
 1065 005c FFF7FEFF 		bl	xTaskGenericNotifyWait
 1066              	.LVL118:
 630:Src/stream_buffer.c ****         } while( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE );
 1067              		.loc 1 630 13 is_stmt 1 view .LVU316
 630:Src/stream_buffer.c ****         } while( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE );
 1068              		.loc 1 630 48 is_stmt 0 view .LVU317
 1069 0060 0023     		movs	r3, #0
 1070 0062 6B61     		str	r3, [r5, #20]
 631:Src/stream_buffer.c ****     }
 1071              		.loc 1 631 16 is_stmt 1 view .LVU318
 631:Src/stream_buffer.c ****     }
 1072              		.loc 1 631 18 is_stmt 0 view .LVU319
 1073 0064 03A9     		add	r1, sp, #12
 1074 0066 04A8     		add	r0, sp, #16
 1075 0068 FFF7FEFF 		bl	xTaskCheckForTimeOut
 1076              	.LVL119:
 631:Src/stream_buffer.c ****     }
 1077              		.loc 1 631 9 view .LVU320
 1078 006c 0028     		cmp	r0, #0
 1079 006e DED0     		beq	.L66
 1080 0070 07E0     		b	.L67
 1081              	.LVL120:
 1082              	.L62:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 47


 589:Src/stream_buffer.c ****         {
 1083              		.loc 1 589 9 is_stmt 1 view .LVU321
 589:Src/stream_buffer.c ****         {
 1084              		.loc 1 589 11 is_stmt 0 view .LVU322
 1085 0072 9F42     		cmp	r7, r3
 1086 0074 01D8     		bhi	.L71
 549:Src/stream_buffer.c ****     TimeOut_t xTimeOut;
 1087              		.loc 1 549 12 view .LVU323
 1088 0076 3E46     		mov	r6, r7
 1089 0078 D4E7     		b	.L63
 1090              	.L71:
 591:Src/stream_buffer.c ****         }
 1091              		.loc 1 591 28 view .LVU324
 1092 007a 1E46     		mov	r6, r3
 1093 007c D2E7     		b	.L63
 1094              	.LVL121:
 1095              	.L65:
 622:Src/stream_buffer.c ****                     break;
 1096              		.loc 1 622 21 is_stmt 1 view .LVU325
 1097 007e FFF7FEFF 		bl	vPortExitCritical
 1098              	.LVL122:
 623:Src/stream_buffer.c ****                 }
 1099              		.loc 1 623 21 view .LVU326
 1100              	.L67:
 635:Src/stream_buffer.c ****     }
 1101              		.loc 1 635 33 view .LVU327
 638:Src/stream_buffer.c ****     {
 1102              		.loc 1 638 5 view .LVU328
 638:Src/stream_buffer.c ****     {
 1103              		.loc 1 638 7 is_stmt 0 view .LVU329
 1104 0082 1CB9     		cbnz	r4, .L68
 1105              	.LVL123:
 1106              	.L64:
 640:Src/stream_buffer.c ****     }
 1107              		.loc 1 640 9 is_stmt 1 view .LVU330
 640:Src/stream_buffer.c ****     }
 1108              		.loc 1 640 18 is_stmt 0 view .LVU331
 1109 0084 2846     		mov	r0, r5
 1110 0086 FFF7FEFF 		bl	xStreamBufferSpacesAvailable
 1111              	.LVL124:
 1112 008a 0446     		mov	r4, r0
 1113              	.LVL125:
 1114              	.L68:
 644:Src/stream_buffer.c ****     }
 1115              		.loc 1 644 33 is_stmt 1 view .LVU332
 647:Src/stream_buffer.c **** 
 1116              		.loc 1 647 5 view .LVU333
 647:Src/stream_buffer.c **** 
 1117              		.loc 1 647 15 is_stmt 0 view .LVU334
 1118 008c 0096     		str	r6, [sp]
 1119 008e 2346     		mov	r3, r4
 1120 0090 3A46     		mov	r2, r7
 1121 0092 4146     		mov	r1, r8
 1122 0094 2846     		mov	r0, r5
 1123 0096 FFF7FEFF 		bl	prvWriteMessageToBuffer
 1124              	.LVL126:
 649:Src/stream_buffer.c ****     {
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 48


 1125              		.loc 1 649 5 is_stmt 1 view .LVU335
 649:Src/stream_buffer.c ****     {
 1126              		.loc 1 649 7 is_stmt 0 view .LVU336
 1127 009a 0446     		mov	r4, r0
 1128              	.LVL127:
 649:Src/stream_buffer.c ****     {
 1129              		.loc 1 649 7 view .LVU337
 1130 009c 18B9     		cbnz	r0, .L73
 1131              	.LVL128:
 1132              	.L61:
 670:Src/stream_buffer.c **** /*-----------------------------------------------------------*/
 1133              		.loc 1 670 1 view .LVU338
 1134 009e 2046     		mov	r0, r4
 1135 00a0 06B0     		add	sp, sp, #24
 1136              	.LCFI24:
 1137              		.cfi_remember_state
 1138              		.cfi_def_cfa_offset 24
 1139              		@ sp needed
 1140 00a2 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1141              	.LVL129:
 1142              	.L73:
 1143              	.LCFI25:
 1144              		.cfi_restore_state
 651:Src/stream_buffer.c **** 
 1145              		.loc 1 651 58 is_stmt 1 view .LVU339
 654:Src/stream_buffer.c ****         {
 1146              		.loc 1 654 9 view .LVU340
 654:Src/stream_buffer.c ****         {
 1147              		.loc 1 654 13 is_stmt 0 view .LVU341
 1148 00a6 2846     		mov	r0, r5
 1149              	.LVL130:
 654:Src/stream_buffer.c ****         {
 1150              		.loc 1 654 13 view .LVU342
 1151 00a8 FFF7FEFF 		bl	prvBytesInBuffer
 1152              	.LVL131:
 654:Src/stream_buffer.c ****         {
 1153              		.loc 1 654 65 view .LVU343
 1154 00ac EB68     		ldr	r3, [r5, #12]
 654:Src/stream_buffer.c ****         {
 1155              		.loc 1 654 11 view .LVU344
 1156 00ae 9842     		cmp	r0, r3
 1157 00b0 F5D3     		bcc	.L61
 656:Src/stream_buffer.c ****         }
 1158              		.loc 1 656 13 is_stmt 1 view .LVU345
 1159 00b2 FFF7FEFF 		bl	vTaskSuspendAll
 1160              	.LVL132:
 656:Src/stream_buffer.c ****         }
 1161              		.loc 1 656 13 view .LVU346
 1162 00b6 2B69     		ldr	r3, [r5, #16]
 1163 00b8 43B1     		cbz	r3, .L70
 656:Src/stream_buffer.c ****         }
 1164              		.loc 1 656 13 discriminator 1 view .LVU347
 1165 00ba 2869     		ldr	r0, [r5, #16]
 1166 00bc 0026     		movs	r6, #0
 1167              	.LVL133:
 656:Src/stream_buffer.c ****         }
 1168              		.loc 1 656 13 is_stmt 0 discriminator 1 view .LVU348
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 49


 1169 00be 0096     		str	r6, [sp]
 1170 00c0 3346     		mov	r3, r6
 1171 00c2 3246     		mov	r2, r6
 1172 00c4 3146     		mov	r1, r6
 1173 00c6 FFF7FEFF 		bl	xTaskGenericNotify
 1174              	.LVL134:
 656:Src/stream_buffer.c ****         }
 1175              		.loc 1 656 13 is_stmt 1 discriminator 1 view .LVU349
 1176 00ca 2E61     		str	r6, [r5, #16]
 1177              	.L70:
 656:Src/stream_buffer.c ****         }
 1178              		.loc 1 656 13 discriminator 3 view .LVU350
 1179 00cc FFF7FEFF 		bl	xTaskResumeAll
 1180              	.LVL135:
 656:Src/stream_buffer.c ****         }
 1181              		.loc 1 656 47 discriminator 3 view .LVU351
 665:Src/stream_buffer.c ****         traceSTREAM_BUFFER_SEND_FAILED( xStreamBuffer );
 1182              		.loc 1 665 33 discriminator 3 view .LVU352
 666:Src/stream_buffer.c ****     }
 1183              		.loc 1 666 56 discriminator 3 view .LVU353
 669:Src/stream_buffer.c **** }
 1184              		.loc 1 669 5 discriminator 3 view .LVU354
 669:Src/stream_buffer.c **** }
 1185              		.loc 1 669 12 is_stmt 0 discriminator 3 view .LVU355
 1186 00d0 E5E7     		b	.L61
 1187              		.cfi_endproc
 1188              	.LFE10:
 1190              		.section	.text.xStreamBufferSendFromISR,"ax",%progbits
 1191              		.align	1
 1192              		.global	xStreamBufferSendFromISR
 1193              		.syntax unified
 1194              		.thumb
 1195              		.thumb_func
 1196              		.fpu softvfp
 1198              	xStreamBufferSendFromISR:
 1199              	.LVL136:
 1200              	.LFB11:
 677:Src/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1201              		.loc 1 677 1 is_stmt 1 view -0
 1202              		.cfi_startproc
 1203              		@ args = 0, pretend = 0, frame = 0
 1204              		@ frame_needed = 0, uses_anonymous_args = 0
 677:Src/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1205              		.loc 1 677 1 is_stmt 0 view .LVU357
 1206 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1207              	.LCFI26:
 1208              		.cfi_def_cfa_offset 28
 1209              		.cfi_offset 4, -28
 1210              		.cfi_offset 5, -24
 1211              		.cfi_offset 6, -20
 1212              		.cfi_offset 7, -16
 1213              		.cfi_offset 8, -12
 1214              		.cfi_offset 9, -8
 1215              		.cfi_offset 14, -4
 1216 0004 83B0     		sub	sp, sp, #12
 1217              	.LCFI27:
 1218              		.cfi_def_cfa_offset 40
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 50


 1219 0006 0446     		mov	r4, r0
 1220 0008 0E46     		mov	r6, r1
 1221 000a 1546     		mov	r5, r2
 1222 000c 9946     		mov	r9, r3
 678:Src/stream_buffer.c ****     size_t xReturn, xSpace;
 1223              		.loc 1 678 5 is_stmt 1 view .LVU358
 1224              	.LVL137:
 679:Src/stream_buffer.c ****     size_t xRequiredSpace = xDataLengthBytes;
 1225              		.loc 1 679 5 view .LVU359
 680:Src/stream_buffer.c **** 
 1226              		.loc 1 680 5 view .LVU360
 682:Src/stream_buffer.c ****     configASSERT( pxStreamBuffer );
 1227              		.loc 1 682 29 view .LVU361
 683:Src/stream_buffer.c **** 
 1228              		.loc 1 683 35 view .LVU362
 689:Src/stream_buffer.c ****     {
 1229              		.loc 1 689 5 view .LVU363
 689:Src/stream_buffer.c ****     {
 1230              		.loc 1 689 25 is_stmt 0 view .LVU364
 1231 000e 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 1232              	.LVL138:
 689:Src/stream_buffer.c ****     {
 1233              		.loc 1 689 7 view .LVU365
 1234 0010 13F0010F 		tst	r3, #1
 1235 0014 10D0     		beq	.L78
 691:Src/stream_buffer.c ****     }
 1236              		.loc 1 691 9 is_stmt 1 view .LVU366
 691:Src/stream_buffer.c ****     }
 1237              		.loc 1 691 24 is_stmt 0 view .LVU367
 1238 0016 171D     		adds	r7, r2, #4
 1239              	.LVL139:
 1240              	.L75:
 695:Src/stream_buffer.c ****     }
 1241              		.loc 1 695 33 is_stmt 1 view .LVU368
 698:Src/stream_buffer.c ****     xReturn = prvWriteMessageToBuffer( pxStreamBuffer, pvTxData, xDataLengthBytes, xSpace, xRequire
 1242              		.loc 1 698 5 view .LVU369
 698:Src/stream_buffer.c ****     xReturn = prvWriteMessageToBuffer( pxStreamBuffer, pvTxData, xDataLengthBytes, xSpace, xRequire
 1243              		.loc 1 698 14 is_stmt 0 view .LVU370
 1244 0018 2046     		mov	r0, r4
 1245              	.LVL140:
 698:Src/stream_buffer.c ****     xReturn = prvWriteMessageToBuffer( pxStreamBuffer, pvTxData, xDataLengthBytes, xSpace, xRequire
 1246              		.loc 1 698 14 view .LVU371
 1247 001a FFF7FEFF 		bl	xStreamBufferSpacesAvailable
 1248              	.LVL141:
 698:Src/stream_buffer.c ****     xReturn = prvWriteMessageToBuffer( pxStreamBuffer, pvTxData, xDataLengthBytes, xSpace, xRequire
 1249              		.loc 1 698 14 view .LVU372
 1250 001e 0346     		mov	r3, r0
 1251              	.LVL142:
 699:Src/stream_buffer.c **** 
 1252              		.loc 1 699 5 is_stmt 1 view .LVU373
 699:Src/stream_buffer.c **** 
 1253              		.loc 1 699 15 is_stmt 0 view .LVU374
 1254 0020 0097     		str	r7, [sp]
 1255 0022 2A46     		mov	r2, r5
 1256 0024 3146     		mov	r1, r6
 1257 0026 2046     		mov	r0, r4
 1258              	.LVL143:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 51


 699:Src/stream_buffer.c **** 
 1259              		.loc 1 699 15 view .LVU375
 1260 0028 FFF7FEFF 		bl	prvWriteMessageToBuffer
 1261              	.LVL144:
 701:Src/stream_buffer.c ****     {
 1262              		.loc 1 701 5 is_stmt 1 view .LVU376
 701:Src/stream_buffer.c ****     {
 1263              		.loc 1 701 7 is_stmt 0 view .LVU377
 1264 002c 0546     		mov	r5, r0
 1265              	.LVL145:
 701:Src/stream_buffer.c ****     {
 1266              		.loc 1 701 7 view .LVU378
 1267 002e 28B9     		cbnz	r0, .L80
 1268              	.LVL146:
 1269              	.L74:
 721:Src/stream_buffer.c **** /*-----------------------------------------------------------*/
 1270              		.loc 1 721 1 view .LVU379
 1271 0030 2846     		mov	r0, r5
 1272 0032 03B0     		add	sp, sp, #12
 1273              	.LCFI28:
 1274              		.cfi_remember_state
 1275              		.cfi_def_cfa_offset 28
 1276              		@ sp needed
 1277 0034 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1278              	.LVL147:
 1279              	.L78:
 1280              	.LCFI29:
 1281              		.cfi_restore_state
 680:Src/stream_buffer.c **** 
 1282              		.loc 1 680 12 view .LVU380
 1283 0038 1746     		mov	r7, r2
 1284 003a EDE7     		b	.L75
 1285              	.LVL148:
 1286              	.L80:
 704:Src/stream_buffer.c ****         {
 1287              		.loc 1 704 9 is_stmt 1 view .LVU381
 704:Src/stream_buffer.c ****         {
 1288              		.loc 1 704 13 is_stmt 0 view .LVU382
 1289 003c 2046     		mov	r0, r4
 1290              	.LVL149:
 704:Src/stream_buffer.c ****         {
 1291              		.loc 1 704 13 view .LVU383
 1292 003e FFF7FEFF 		bl	prvBytesInBuffer
 1293              	.LVL150:
 704:Src/stream_buffer.c ****         {
 1294              		.loc 1 704 65 view .LVU384
 1295 0042 E368     		ldr	r3, [r4, #12]
 704:Src/stream_buffer.c ****         {
 1296              		.loc 1 704 11 view .LVU385
 1297 0044 9842     		cmp	r0, r3
 1298 0046 F3D3     		bcc	.L74
 1299              	.LBB20:
 706:Src/stream_buffer.c ****         }
 1300              		.loc 1 706 13 is_stmt 1 view .LVU386
 706:Src/stream_buffer.c ****         }
 1301              		.loc 1 706 13 view .LVU387
 1302              	.LBB21:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 52


 1303              	.LBI21:
 1304              		.file 2 "Inc/portmacro.h"
   1:Inc/portmacro.h **** /*
   2:Inc/portmacro.h ****  * FreeRTOS Kernel V10.4.6
   3:Inc/portmacro.h ****  * Copyright (C) 2021 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Inc/portmacro.h ****  *
   5:Inc/portmacro.h ****  * SPDX-License-Identifier: MIT
   6:Inc/portmacro.h ****  *
   7:Inc/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   8:Inc/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   9:Inc/portmacro.h ****  * the Software without restriction, including without limitation the rights to
  10:Inc/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
  11:Inc/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  12:Inc/portmacro.h ****  * subject to the following conditions:
  13:Inc/portmacro.h ****  *
  14:Inc/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  15:Inc/portmacro.h ****  * copies or substantial portions of the Software.
  16:Inc/portmacro.h ****  *
  17:Inc/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  18:Inc/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  19:Inc/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  20:Inc/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  21:Inc/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  22:Inc/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  23:Inc/portmacro.h ****  *
  24:Inc/portmacro.h ****  * https://www.FreeRTOS.org
  25:Inc/portmacro.h ****  * https://github.com/FreeRTOS
  26:Inc/portmacro.h ****  *
  27:Inc/portmacro.h ****  */
  28:Inc/portmacro.h **** 
  29:Inc/portmacro.h **** 
  30:Inc/portmacro.h **** #ifndef PORTMACRO_H
  31:Inc/portmacro.h ****     #define PORTMACRO_H
  32:Inc/portmacro.h **** 
  33:Inc/portmacro.h ****     #ifdef __cplusplus
  34:Inc/portmacro.h ****         extern "C" {
  35:Inc/portmacro.h ****     #endif
  36:Inc/portmacro.h **** 
  37:Inc/portmacro.h **** /*-----------------------------------------------------------
  38:Inc/portmacro.h ****  * Port specific definitions.
  39:Inc/portmacro.h ****  *
  40:Inc/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  41:Inc/portmacro.h ****  * given hardware and compiler.
  42:Inc/portmacro.h ****  *
  43:Inc/portmacro.h ****  * These settings should not be altered.
  44:Inc/portmacro.h ****  *-----------------------------------------------------------
  45:Inc/portmacro.h ****  */
  46:Inc/portmacro.h **** 
  47:Inc/portmacro.h **** /* Type definitions. */
  48:Inc/portmacro.h ****     #define portCHAR          char
  49:Inc/portmacro.h ****     #define portFLOAT         float
  50:Inc/portmacro.h ****     #define portDOUBLE        double
  51:Inc/portmacro.h ****     #define portLONG          long
  52:Inc/portmacro.h ****     #define portSHORT         short
  53:Inc/portmacro.h ****     #define portSTACK_TYPE    uint32_t
  54:Inc/portmacro.h ****     #define portBASE_TYPE     long
  55:Inc/portmacro.h **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 53


  56:Inc/portmacro.h ****     typedef portSTACK_TYPE   StackType_t;
  57:Inc/portmacro.h ****     typedef long             BaseType_t;
  58:Inc/portmacro.h ****     typedef unsigned long    UBaseType_t;
  59:Inc/portmacro.h **** 
  60:Inc/portmacro.h ****     #if ( configUSE_16_BIT_TICKS == 1 )
  61:Inc/portmacro.h ****         typedef uint16_t     TickType_t;
  62:Inc/portmacro.h ****         #define portMAX_DELAY              ( TickType_t ) 0xffff
  63:Inc/portmacro.h ****     #else
  64:Inc/portmacro.h ****         typedef uint32_t     TickType_t;
  65:Inc/portmacro.h ****         #define portMAX_DELAY              ( TickType_t ) 0xffffffffUL
  66:Inc/portmacro.h **** 
  67:Inc/portmacro.h **** /* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  68:Inc/portmacro.h ****  * not need to be guarded with a critical section. */
  69:Inc/portmacro.h ****         #define portTICK_TYPE_IS_ATOMIC    1
  70:Inc/portmacro.h ****     #endif
  71:Inc/portmacro.h **** /*-----------------------------------------------------------*/
  72:Inc/portmacro.h **** 
  73:Inc/portmacro.h **** /* Architecture specifics. */
  74:Inc/portmacro.h ****     #define portSTACK_GROWTH      ( -1 )
  75:Inc/portmacro.h ****     #define portTICK_PERIOD_MS    ( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  76:Inc/portmacro.h ****     #define portBYTE_ALIGNMENT    8
  77:Inc/portmacro.h ****     #define portDONT_DISCARD      __attribute__( ( used ) )
  78:Inc/portmacro.h **** /*-----------------------------------------------------------*/
  79:Inc/portmacro.h **** 
  80:Inc/portmacro.h **** /* Scheduler utilities. */
  81:Inc/portmacro.h ****     #define portYIELD()                                 \
  82:Inc/portmacro.h ****     {                                                   \
  83:Inc/portmacro.h ****         /* Set a PendSV to request a context switch. */ \
  84:Inc/portmacro.h ****         portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT; \
  85:Inc/portmacro.h ****                                                         \
  86:Inc/portmacro.h ****         /* Barriers are normally not required but do ensure the code is completely \
  87:Inc/portmacro.h ****          * within the specified behaviour for the architecture. */ \
  88:Inc/portmacro.h ****         __asm volatile ( "dsb" ::: "memory" );                     \
  89:Inc/portmacro.h ****         __asm volatile ( "isb" );                                  \
  90:Inc/portmacro.h ****     }
  91:Inc/portmacro.h **** 
  92:Inc/portmacro.h ****     #define portNVIC_INT_CTRL_REG     ( *( ( volatile uint32_t * ) 0xe000ed04 ) )
  93:Inc/portmacro.h ****     #define portNVIC_PENDSVSET_BIT    ( 1UL << 28UL )
  94:Inc/portmacro.h ****     #define portEND_SWITCHING_ISR( xSwitchRequired )    do { if( xSwitchRequired != pdFALSE ) portY
  95:Inc/portmacro.h ****     #define portYIELD_FROM_ISR( x )                     portEND_SWITCHING_ISR( x )
  96:Inc/portmacro.h **** /*-----------------------------------------------------------*/
  97:Inc/portmacro.h **** 
  98:Inc/portmacro.h **** /* Critical section management. */
  99:Inc/portmacro.h ****     extern void vPortEnterCritical( void );
 100:Inc/portmacro.h ****     extern void vPortExitCritical( void );
 101:Inc/portmacro.h ****     #define portSET_INTERRUPT_MASK_FROM_ISR()         ulPortRaiseBASEPRI()
 102:Inc/portmacro.h ****     #define portCLEAR_INTERRUPT_MASK_FROM_ISR( x )    vPortSetBASEPRI( x )
 103:Inc/portmacro.h ****     #define portDISABLE_INTERRUPTS()                  vPortRaiseBASEPRI()
 104:Inc/portmacro.h ****     #define portENABLE_INTERRUPTS()                   vPortSetBASEPRI( 0 )
 105:Inc/portmacro.h ****     #define portENTER_CRITICAL()                      vPortEnterCritical()
 106:Inc/portmacro.h ****     #define portEXIT_CRITICAL()                       vPortExitCritical()
 107:Inc/portmacro.h **** 
 108:Inc/portmacro.h **** /*-----------------------------------------------------------*/
 109:Inc/portmacro.h **** 
 110:Inc/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 111:Inc/portmacro.h ****  * not necessary for to use this port.  They are defined so the common demo files
 112:Inc/portmacro.h ****  * (which build with all the ports) will build. */
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 54


 113:Inc/portmacro.h ****     #define portTASK_FUNCTION_PROTO( vFunction, pvParameters )    void vFunction( void * pvParamete
 114:Inc/portmacro.h ****     #define portTASK_FUNCTION( vFunction, pvParameters )          void vFunction( void * pvParamete
 115:Inc/portmacro.h **** /*-----------------------------------------------------------*/
 116:Inc/portmacro.h **** 
 117:Inc/portmacro.h **** /* Tickless idle/low power functionality. */
 118:Inc/portmacro.h ****     #ifndef portSUPPRESS_TICKS_AND_SLEEP
 119:Inc/portmacro.h ****         extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 120:Inc/portmacro.h ****         #define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime )    vPortSuppressTicksAndSleep( xE
 121:Inc/portmacro.h ****     #endif
 122:Inc/portmacro.h **** /*-----------------------------------------------------------*/
 123:Inc/portmacro.h **** 
 124:Inc/portmacro.h **** /* Architecture specific optimisations. */
 125:Inc/portmacro.h ****     #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 126:Inc/portmacro.h ****         #define configUSE_PORT_OPTIMISED_TASK_SELECTION    1
 127:Inc/portmacro.h ****     #endif
 128:Inc/portmacro.h **** 
 129:Inc/portmacro.h ****     #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 130:Inc/portmacro.h **** 
 131:Inc/portmacro.h **** /* Generic helper function. */
 132:Inc/portmacro.h ****         __attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t 
 133:Inc/portmacro.h ****         {
 134:Inc/portmacro.h ****             uint8_t ucReturn;
 135:Inc/portmacro.h **** 
 136:Inc/portmacro.h ****             __asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 137:Inc/portmacro.h **** 
 138:Inc/portmacro.h ****             return ucReturn;
 139:Inc/portmacro.h ****         }
 140:Inc/portmacro.h **** 
 141:Inc/portmacro.h **** /* Check the configuration. */
 142:Inc/portmacro.h ****         #if ( configMAX_PRIORITIES > 32 )
 143:Inc/portmacro.h ****             #error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIO
 144:Inc/portmacro.h ****         #endif
 145:Inc/portmacro.h **** 
 146:Inc/portmacro.h **** /* Store/clear the ready priorities in a bit map. */
 147:Inc/portmacro.h ****         #define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities )    ( uxReadyPriorities )
 148:Inc/portmacro.h ****         #define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities )     ( uxReadyPriorities )
 149:Inc/portmacro.h **** 
 150:Inc/portmacro.h **** /*-----------------------------------------------------------*/
 151:Inc/portmacro.h **** 
 152:Inc/portmacro.h ****         #define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities )    uxTopPriority = ( 3
 153:Inc/portmacro.h **** 
 154:Inc/portmacro.h ****     #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 155:Inc/portmacro.h **** 
 156:Inc/portmacro.h **** /*-----------------------------------------------------------*/
 157:Inc/portmacro.h **** 
 158:Inc/portmacro.h ****     #ifdef configASSERT
 159:Inc/portmacro.h ****         void vPortValidateInterruptPriority( void );
 160:Inc/portmacro.h ****         #define portASSERT_IF_INTERRUPT_PRIORITY_INVALID()    vPortValidateInterruptPriority()
 161:Inc/portmacro.h ****     #endif
 162:Inc/portmacro.h **** 
 163:Inc/portmacro.h **** /* portNOP() is not required by this port. */
 164:Inc/portmacro.h ****     #define portNOP()
 165:Inc/portmacro.h **** 
 166:Inc/portmacro.h ****     #define portINLINE              __inline
 167:Inc/portmacro.h **** 
 168:Inc/portmacro.h ****     #ifndef portFORCE_INLINE
 169:Inc/portmacro.h ****         #define portFORCE_INLINE    inline __attribute__( ( always_inline ) )
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 55


 170:Inc/portmacro.h ****     #endif
 171:Inc/portmacro.h **** 
 172:Inc/portmacro.h **** /*-----------------------------------------------------------*/
 173:Inc/portmacro.h **** 
 174:Inc/portmacro.h ****     portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 175:Inc/portmacro.h ****     {
 176:Inc/portmacro.h ****         uint32_t ulCurrentInterrupt;
 177:Inc/portmacro.h ****         BaseType_t xReturn;
 178:Inc/portmacro.h **** 
 179:Inc/portmacro.h ****         /* Obtain the number of the currently executing interrupt. */
 180:Inc/portmacro.h ****         __asm volatile ( "mrs %0, ipsr" : "=r" ( ulCurrentInterrupt )::"memory" );
 181:Inc/portmacro.h **** 
 182:Inc/portmacro.h ****         if( ulCurrentInterrupt == 0 )
 183:Inc/portmacro.h ****         {
 184:Inc/portmacro.h ****             xReturn = pdFALSE;
 185:Inc/portmacro.h ****         }
 186:Inc/portmacro.h ****         else
 187:Inc/portmacro.h ****         {
 188:Inc/portmacro.h ****             xReturn = pdTRUE;
 189:Inc/portmacro.h ****         }
 190:Inc/portmacro.h **** 
 191:Inc/portmacro.h ****         return xReturn;
 192:Inc/portmacro.h ****     }
 193:Inc/portmacro.h **** 
 194:Inc/portmacro.h **** /*-----------------------------------------------------------*/
 195:Inc/portmacro.h **** 
 196:Inc/portmacro.h ****     portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 197:Inc/portmacro.h ****     {
 198:Inc/portmacro.h ****         uint32_t ulNewBASEPRI;
 199:Inc/portmacro.h **** 
 200:Inc/portmacro.h ****         __asm volatile
 201:Inc/portmacro.h ****         (
 202:Inc/portmacro.h ****             "	mov %0, %1												\n"\
 203:Inc/portmacro.h ****             "	msr basepri, %0											\n"\
 204:Inc/portmacro.h ****             "	isb														\n"\
 205:Inc/portmacro.h ****             "	dsb														\n"\
 206:Inc/portmacro.h ****             : "=r" ( ulNewBASEPRI ) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 207:Inc/portmacro.h ****         );
 208:Inc/portmacro.h ****     }
 209:Inc/portmacro.h **** 
 210:Inc/portmacro.h **** /*-----------------------------------------------------------*/
 211:Inc/portmacro.h **** 
 212:Inc/portmacro.h ****     portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 1305              		.loc 2 212 38 view .LVU388
 1306              	.LBB22:
 213:Inc/portmacro.h ****     {
 214:Inc/portmacro.h ****         uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 1307              		.loc 2 214 9 view .LVU389
 215:Inc/portmacro.h **** 
 216:Inc/portmacro.h ****         __asm volatile
 1308              		.loc 2 216 9 view .LVU390
 1309              		.syntax unified
 1310              	@ 216 "Inc/portmacro.h" 1
 1311 0048 EFF31188 			mrs r8, basepri											
 1312 004c 4FF0BF03 		mov r3, #191												
 1313 0050 83F31188 		msr basepri, r3											
 1314 0054 BFF36F8F 		isb														
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 56


 1315 0058 BFF34F8F 		dsb														
 1316              	
 1317              	@ 0 "" 2
 1318              	.LVL151:
 217:Inc/portmacro.h ****         (
 218:Inc/portmacro.h ****             "	mrs %0, basepri											\n"\
 219:Inc/portmacro.h ****             "	mov %1, %2												\n"\
 220:Inc/portmacro.h ****             "	msr basepri, %1											\n"\
 221:Inc/portmacro.h ****             "	isb														\n"\
 222:Inc/portmacro.h ****             "	dsb														\n"\
 223:Inc/portmacro.h ****             : "=r" ( ulOriginalBASEPRI ), "=r" ( ulNewBASEPRI ) : "i" ( configMAX_SYSCALL_INTERRUPT
 224:Inc/portmacro.h ****         );
 225:Inc/portmacro.h **** 
 226:Inc/portmacro.h ****         /* This return will not be reached but is necessary to prevent compiler
 227:Inc/portmacro.h ****          * warnings. */
 228:Inc/portmacro.h ****         return ulOriginalBASEPRI;
 1319              		.loc 2 228 9 view .LVU391
 1320              		.loc 2 228 9 is_stmt 0 view .LVU392
 1321              		.thumb
 1322              		.syntax unified
 1323              	.LBE22:
 1324              	.LBE21:
 706:Src/stream_buffer.c ****         }
 1325              		.loc 1 706 13 is_stmt 1 view .LVU393
 1326 005c 2369     		ldr	r3, [r4, #16]
 1327 005e 53B1     		cbz	r3, .L77
 706:Src/stream_buffer.c ****         }
 1328              		.loc 1 706 13 discriminator 1 view .LVU394
 1329 0060 2069     		ldr	r0, [r4, #16]
 1330 0062 CDF80490 		str	r9, [sp, #4]
 1331 0066 0026     		movs	r6, #0
 1332              	.LVL152:
 706:Src/stream_buffer.c ****         }
 1333              		.loc 1 706 13 is_stmt 0 discriminator 1 view .LVU395
 1334 0068 0096     		str	r6, [sp]
 1335 006a 3346     		mov	r3, r6
 1336 006c 3246     		mov	r2, r6
 1337 006e 3146     		mov	r1, r6
 1338 0070 FFF7FEFF 		bl	xTaskGenericNotifyFromISR
 1339              	.LVL153:
 706:Src/stream_buffer.c ****         }
 1340              		.loc 1 706 13 is_stmt 1 discriminator 1 view .LVU396
 1341 0074 2661     		str	r6, [r4, #16]
 1342              	.L77:
 706:Src/stream_buffer.c ****         }
 1343              		.loc 1 706 13 discriminator 3 view .LVU397
 1344              	.LVL154:
 1345              	.LBB23:
 1346              	.LBI23:
 229:Inc/portmacro.h ****     }
 230:Inc/portmacro.h **** /*-----------------------------------------------------------*/
 231:Inc/portmacro.h **** 
 232:Inc/portmacro.h ****     portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 1347              		.loc 2 232 34 discriminator 3 view .LVU398
 1348              	.LBB24:
 233:Inc/portmacro.h ****     {
 234:Inc/portmacro.h ****         __asm volatile
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 57


 1349              		.loc 2 234 9 discriminator 3 view .LVU399
 1350              		.syntax unified
 1351              	@ 234 "Inc/portmacro.h" 1
 1352 0076 88F31188 			msr basepri, r8	
 1353              	@ 0 "" 2
 1354              	.LVL155:
 1355              		.loc 2 234 9 is_stmt 0 discriminator 3 view .LVU400
 1356              		.thumb
 1357              		.syntax unified
 1358              	.LBE24:
 1359              	.LBE23:
 1360              	.LBE20:
 715:Src/stream_buffer.c ****     }
 1361              		.loc 1 715 33 is_stmt 1 discriminator 3 view .LVU401
 718:Src/stream_buffer.c **** 
 1362              		.loc 1 718 63 discriminator 3 view .LVU402
 720:Src/stream_buffer.c **** }
 1363              		.loc 1 720 5 discriminator 3 view .LVU403
 720:Src/stream_buffer.c **** }
 1364              		.loc 1 720 12 is_stmt 0 discriminator 3 view .LVU404
 1365 007a D9E7     		b	.L74
 1366              		.cfi_endproc
 1367              	.LFE11:
 1369              		.section	.text.xStreamBufferReceive,"ax",%progbits
 1370              		.align	1
 1371              		.global	xStreamBufferReceive
 1372              		.syntax unified
 1373              		.thumb
 1374              		.thumb_func
 1375              		.fpu softvfp
 1377              	xStreamBufferReceive:
 1378              	.LVL156:
 1379              	.LFB13:
 771:Src/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1380              		.loc 1 771 1 is_stmt 1 view -0
 1381              		.cfi_startproc
 1382              		@ args = 0, pretend = 0, frame = 0
 1383              		@ frame_needed = 0, uses_anonymous_args = 0
 771:Src/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1384              		.loc 1 771 1 is_stmt 0 view .LVU406
 1385 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1386              	.LCFI30:
 1387              		.cfi_def_cfa_offset 28
 1388              		.cfi_offset 4, -28
 1389              		.cfi_offset 5, -24
 1390              		.cfi_offset 6, -20
 1391              		.cfi_offset 7, -16
 1392              		.cfi_offset 8, -12
 1393              		.cfi_offset 9, -8
 1394              		.cfi_offset 14, -4
 1395 0004 83B0     		sub	sp, sp, #12
 1396              	.LCFI31:
 1397              		.cfi_def_cfa_offset 40
 1398 0006 0446     		mov	r4, r0
 1399 0008 0E46     		mov	r6, r1
 1400 000a 1746     		mov	r7, r2
 1401 000c 9946     		mov	r9, r3
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 58


 772:Src/stream_buffer.c ****     size_t xReceivedLength = 0, xBytesAvailable, xBytesToStoreMessageLength;
 1402              		.loc 1 772 5 is_stmt 1 view .LVU407
 1403              	.LVL157:
 773:Src/stream_buffer.c **** 
 1404              		.loc 1 773 5 view .LVU408
 775:Src/stream_buffer.c ****     configASSERT( pxStreamBuffer );
 1405              		.loc 1 775 29 view .LVU409
 776:Src/stream_buffer.c **** 
 1406              		.loc 1 776 35 view .LVU410
 783:Src/stream_buffer.c ****     {
 1407              		.loc 1 783 5 view .LVU411
 783:Src/stream_buffer.c ****     {
 1408              		.loc 1 783 25 is_stmt 0 view .LVU412
 1409 000e 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 1410              	.LVL158:
 783:Src/stream_buffer.c ****     {
 1411              		.loc 1 783 7 view .LVU413
 1412 0010 13F0010F 		tst	r3, #1
 1413 0014 1FD0     		beq	.L88
 785:Src/stream_buffer.c ****     }
 1414              		.loc 1 785 36 view .LVU414
 1415 0016 4FF00408 		mov	r8, #4
 1416              	.L82:
 1417              	.LVL159:
 792:Src/stream_buffer.c ****     {
 1418              		.loc 1 792 5 is_stmt 1 view .LVU415
 792:Src/stream_buffer.c ****     {
 1419              		.loc 1 792 7 is_stmt 0 view .LVU416
 1420 001a B9F1000F 		cmp	r9, #0
 1421 001e 25D0     		beq	.L83
 796:Src/stream_buffer.c ****         {
 1422              		.loc 1 796 9 is_stmt 1 view .LVU417
 1423 0020 FFF7FEFF 		bl	vPortEnterCritical
 1424              	.LVL160:
 798:Src/stream_buffer.c **** 
 1425              		.loc 1 798 13 view .LVU418
 798:Src/stream_buffer.c **** 
 1426              		.loc 1 798 31 is_stmt 0 view .LVU419
 1427 0024 2046     		mov	r0, r4
 1428 0026 FFF7FEFF 		bl	prvBytesInBuffer
 1429              	.LVL161:
 1430 002a 0546     		mov	r5, r0
 1431              	.LVL162:
 805:Src/stream_buffer.c ****             {
 1432              		.loc 1 805 13 is_stmt 1 view .LVU420
 805:Src/stream_buffer.c ****             {
 1433              		.loc 1 805 15 is_stmt 0 view .LVU421
 1434 002c 8045     		cmp	r8, r0
 1435 002e 15D2     		bcs	.L91
 1436              	.LVL163:
 1437              	.L84:
 816:Src/stream_buffer.c ****             }
 1438              		.loc 1 816 41 is_stmt 1 view .LVU422
 819:Src/stream_buffer.c **** 
 1439              		.loc 1 819 9 view .LVU423
 1440 0030 FFF7FEFF 		bl	vPortExitCritical
 1441              	.LVL164:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 59


 821:Src/stream_buffer.c ****         {
 1442              		.loc 1 821 9 view .LVU424
 821:Src/stream_buffer.c ****         {
 1443              		.loc 1 821 11 is_stmt 0 view .LVU425
 1444 0034 A845     		cmp	r8, r5
 1445 0036 1DD3     		bcc	.L85
 824:Src/stream_buffer.c ****             ( void ) xTaskNotifyWait( ( uint32_t ) 0, ( uint32_t ) 0, NULL, xTicksToWait );
 1446              		.loc 1 824 68 is_stmt 1 view .LVU426
 825:Src/stream_buffer.c ****             pxStreamBuffer->xTaskWaitingToReceive = NULL;
 1447              		.loc 1 825 13 view .LVU427
 825:Src/stream_buffer.c ****             pxStreamBuffer->xTaskWaitingToReceive = NULL;
 1448              		.loc 1 825 22 is_stmt 0 view .LVU428
 1449 0038 CDF80090 		str	r9, [sp]
 1450 003c 0023     		movs	r3, #0
 1451 003e 1A46     		mov	r2, r3
 1452 0040 1946     		mov	r1, r3
 1453 0042 1846     		mov	r0, r3
 1454 0044 FFF7FEFF 		bl	xTaskGenericNotifyWait
 1455              	.LVL165:
 826:Src/stream_buffer.c **** 
 1456              		.loc 1 826 13 is_stmt 1 view .LVU429
 826:Src/stream_buffer.c **** 
 1457              		.loc 1 826 51 is_stmt 0 view .LVU430
 1458 0048 0023     		movs	r3, #0
 1459 004a 2361     		str	r3, [r4, #16]
 829:Src/stream_buffer.c ****         }
 1460              		.loc 1 829 13 is_stmt 1 view .LVU431
 829:Src/stream_buffer.c ****         }
 1461              		.loc 1 829 31 is_stmt 0 view .LVU432
 1462 004c 2046     		mov	r0, r4
 1463 004e FFF7FEFF 		bl	prvBytesInBuffer
 1464              	.LVL166:
 1465 0052 0546     		mov	r5, r0
 1466              	.LVL167:
 829:Src/stream_buffer.c ****         }
 1467              		.loc 1 829 31 view .LVU433
 1468 0054 0EE0     		b	.L85
 1469              	.LVL168:
 1470              	.L88:
 789:Src/stream_buffer.c ****     }
 1471              		.loc 1 789 36 view .LVU434
 1472 0056 4FF00008 		mov	r8, #0
 1473 005a DEE7     		b	.L82
 1474              	.LVL169:
 1475              	.L91:
 808:Src/stream_buffer.c **** 
 1476              		.loc 1 808 17 is_stmt 1 view .LVU435
 808:Src/stream_buffer.c **** 
 1477              		.loc 1 808 26 is_stmt 0 view .LVU436
 1478 005c 0021     		movs	r1, #0
 1479 005e 0846     		mov	r0, r1
 1480              	.LVL170:
 808:Src/stream_buffer.c **** 
 1481              		.loc 1 808 26 view .LVU437
 1482 0060 FFF7FEFF 		bl	xTaskGenericNotifyStateClear
 1483              	.LVL171:
 811:Src/stream_buffer.c ****                 pxStreamBuffer->xTaskWaitingToReceive = xTaskGetCurrentTaskHandle();
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 60


 1484              		.loc 1 811 78 is_stmt 1 view .LVU438
 812:Src/stream_buffer.c ****             }
 1485              		.loc 1 812 17 view .LVU439
 812:Src/stream_buffer.c ****             }
 1486              		.loc 1 812 57 is_stmt 0 view .LVU440
 1487 0064 FFF7FEFF 		bl	xTaskGetCurrentTaskHandle
 1488              	.LVL172:
 812:Src/stream_buffer.c ****             }
 1489              		.loc 1 812 55 view .LVU441
 1490 0068 2061     		str	r0, [r4, #16]
 1491 006a E1E7     		b	.L84
 1492              	.LVL173:
 1493              	.L83:
 838:Src/stream_buffer.c ****     }
 1494              		.loc 1 838 9 is_stmt 1 view .LVU442
 838:Src/stream_buffer.c ****     }
 1495              		.loc 1 838 27 is_stmt 0 view .LVU443
 1496 006c 2046     		mov	r0, r4
 1497              	.LVL174:
 838:Src/stream_buffer.c ****     }
 1498              		.loc 1 838 27 view .LVU444
 1499 006e FFF7FEFF 		bl	prvBytesInBuffer
 1500              	.LVL175:
 838:Src/stream_buffer.c ****     }
 1501              		.loc 1 838 27 view .LVU445
 1502 0072 0546     		mov	r5, r0
 1503              	.LVL176:
 1504              	.L85:
 846:Src/stream_buffer.c ****     {
 1505              		.loc 1 846 5 is_stmt 1 view .LVU446
 846:Src/stream_buffer.c ****     {
 1506              		.loc 1 846 7 is_stmt 0 view .LVU447
 1507 0074 4545     		cmp	r5, r8
 1508 0076 04D8     		bhi	.L92
 773:Src/stream_buffer.c **** 
 1509              		.loc 1 773 12 view .LVU448
 1510 0078 0025     		movs	r5, #0
 1511              	.LVL177:
 863:Src/stream_buffer.c ****         mtCOVERAGE_TEST_MARKER();
 1512              		.loc 1 863 59 is_stmt 1 view .LVU449
 864:Src/stream_buffer.c ****     }
 1513              		.loc 1 864 33 view .LVU450
 867:Src/stream_buffer.c **** }
 1514              		.loc 1 867 5 view .LVU451
 1515              	.L81:
 868:Src/stream_buffer.c **** /*-----------------------------------------------------------*/
 1516              		.loc 1 868 1 is_stmt 0 view .LVU452
 1517 007a 2846     		mov	r0, r5
 1518 007c 03B0     		add	sp, sp, #12
 1519              	.LCFI32:
 1520              		.cfi_remember_state
 1521              		.cfi_def_cfa_offset 28
 1522              		@ sp needed
 1523 007e BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1524              	.LVL178:
 1525              	.L92:
 1526              	.LCFI33:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 61


 1527              		.cfi_restore_state
 848:Src/stream_buffer.c **** 
 1528              		.loc 1 848 9 is_stmt 1 view .LVU453
 848:Src/stream_buffer.c **** 
 1529              		.loc 1 848 27 is_stmt 0 view .LVU454
 1530 0082 2B46     		mov	r3, r5
 1531 0084 3A46     		mov	r2, r7
 1532 0086 3146     		mov	r1, r6
 1533 0088 2046     		mov	r0, r4
 1534 008a FFF7FEFF 		bl	prvReadMessageFromBuffer
 1535              	.LVL179:
 851:Src/stream_buffer.c ****         {
 1536              		.loc 1 851 9 is_stmt 1 view .LVU455
 851:Src/stream_buffer.c ****         {
 1537              		.loc 1 851 11 is_stmt 0 view .LVU456
 1538 008e 0546     		mov	r5, r0
 1539              	.LVL180:
 851:Src/stream_buffer.c ****         {
 1540              		.loc 1 851 11 view .LVU457
 1541 0090 0028     		cmp	r0, #0
 1542 0092 F2D0     		beq	.L81
 853:Src/stream_buffer.c ****             sbRECEIVE_COMPLETED( pxStreamBuffer );
 1543              		.loc 1 853 73 is_stmt 1 view .LVU458
 854:Src/stream_buffer.c ****         }
 1544              		.loc 1 854 13 view .LVU459
 1545 0094 FFF7FEFF 		bl	vTaskSuspendAll
 1546              	.LVL181:
 854:Src/stream_buffer.c ****         }
 1547              		.loc 1 854 13 view .LVU460
 1548 0098 6369     		ldr	r3, [r4, #20]
 1549 009a 43B1     		cbz	r3, .L87
 854:Src/stream_buffer.c ****         }
 1550              		.loc 1 854 13 discriminator 1 view .LVU461
 1551 009c 6069     		ldr	r0, [r4, #20]
 1552 009e 0026     		movs	r6, #0
 1553              	.LVL182:
 854:Src/stream_buffer.c ****         }
 1554              		.loc 1 854 13 is_stmt 0 discriminator 1 view .LVU462
 1555 00a0 0096     		str	r6, [sp]
 1556 00a2 3346     		mov	r3, r6
 1557 00a4 3246     		mov	r2, r6
 1558 00a6 3146     		mov	r1, r6
 1559 00a8 FFF7FEFF 		bl	xTaskGenericNotify
 1560              	.LVL183:
 854:Src/stream_buffer.c ****         }
 1561              		.loc 1 854 13 is_stmt 1 discriminator 1 view .LVU463
 1562 00ac 6661     		str	r6, [r4, #20]
 1563              	.L87:
 854:Src/stream_buffer.c ****         }
 1564              		.loc 1 854 13 discriminator 3 view .LVU464
 1565 00ae FFF7FEFF 		bl	xTaskResumeAll
 1566              	.LVL184:
 854:Src/stream_buffer.c ****         }
 1567              		.loc 1 854 50 discriminator 3 view .LVU465
 1568 00b2 E2E7     		b	.L81
 1569              		.cfi_endproc
 1570              	.LFE13:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 62


 1572              		.section	.text.xStreamBufferNextMessageLengthBytes,"ax",%progbits
 1573              		.align	1
 1574              		.global	xStreamBufferNextMessageLengthBytes
 1575              		.syntax unified
 1576              		.thumb
 1577              		.thumb_func
 1578              		.fpu softvfp
 1580              	xStreamBufferNextMessageLengthBytes:
 1581              	.LVL185:
 1582              	.LFB14:
 872:Src/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1583              		.loc 1 872 1 view -0
 1584              		.cfi_startproc
 1585              		@ args = 0, pretend = 0, frame = 8
 1586              		@ frame_needed = 0, uses_anonymous_args = 0
 873:Src/stream_buffer.c ****     size_t xReturn, xBytesAvailable;
 1587              		.loc 1 873 5 view .LVU467
 874:Src/stream_buffer.c ****     configMESSAGE_BUFFER_LENGTH_TYPE xTempReturn;
 1588              		.loc 1 874 5 view .LVU468
 875:Src/stream_buffer.c **** 
 1589              		.loc 1 875 5 view .LVU469
 877:Src/stream_buffer.c **** 
 1590              		.loc 1 877 35 view .LVU470
 880:Src/stream_buffer.c ****     {
 1591              		.loc 1 880 5 view .LVU471
 880:Src/stream_buffer.c ****     {
 1592              		.loc 1 880 25 is_stmt 0 view .LVU472
 1593 0000 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 880:Src/stream_buffer.c ****     {
 1594              		.loc 1 880 7 view .LVU473
 1595 0002 13F0010F 		tst	r3, #1
 1596 0006 01D1     		bne	.L101
 904:Src/stream_buffer.c ****     }
 1597              		.loc 1 904 17 view .LVU474
 1598 0008 0020     		movs	r0, #0
 1599              	.LVL186:
 908:Src/stream_buffer.c **** /*-----------------------------------------------------------*/
 1600              		.loc 1 908 1 view .LVU475
 1601 000a 7047     		bx	lr
 1602              	.LVL187:
 1603              	.L101:
 872:Src/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1604              		.loc 1 872 1 view .LVU476
 1605 000c 10B5     		push	{r4, lr}
 1606              	.LCFI34:
 1607              		.cfi_def_cfa_offset 8
 1608              		.cfi_offset 4, -8
 1609              		.cfi_offset 14, -4
 1610 000e 82B0     		sub	sp, sp, #8
 1611              	.LCFI35:
 1612              		.cfi_def_cfa_offset 16
 1613 0010 0446     		mov	r4, r0
 882:Src/stream_buffer.c **** 
 1614              		.loc 1 882 9 is_stmt 1 view .LVU477
 882:Src/stream_buffer.c **** 
 1615              		.loc 1 882 27 is_stmt 0 view .LVU478
 1616 0012 FFF7FEFF 		bl	prvBytesInBuffer
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 63


 1617              	.LVL188:
 884:Src/stream_buffer.c ****         {
 1618              		.loc 1 884 9 is_stmt 1 view .LVU479
 884:Src/stream_buffer.c ****         {
 1619              		.loc 1 884 11 is_stmt 0 view .LVU480
 1620 0016 0428     		cmp	r0, #4
 1621 0018 02D8     		bhi	.L102
 899:Src/stream_buffer.c ****         }
 1622              		.loc 1 899 21 view .LVU481
 1623 001a 0020     		movs	r0, #0
 1624              	.LVL189:
 907:Src/stream_buffer.c **** }
 1625              		.loc 1 907 5 is_stmt 1 view .LVU482
 1626              	.L93:
 908:Src/stream_buffer.c **** /*-----------------------------------------------------------*/
 1627              		.loc 1 908 1 is_stmt 0 view .LVU483
 1628 001c 02B0     		add	sp, sp, #8
 1629              	.LCFI36:
 1630              		.cfi_remember_state
 1631              		.cfi_def_cfa_offset 8
 1632              		@ sp needed
 1633 001e 10BD     		pop	{r4, pc}
 1634              	.LVL190:
 1635              	.L102:
 1636              	.LCFI37:
 1637              		.cfi_restore_state
 889:Src/stream_buffer.c ****             xReturn = ( size_t ) xTempReturn;
 1638              		.loc 1 889 13 is_stmt 1 view .LVU484
 889:Src/stream_buffer.c ****             xReturn = ( size_t ) xTempReturn;
 1639              		.loc 1 889 22 is_stmt 0 view .LVU485
 1640 0020 2368     		ldr	r3, [r4]
 1641 0022 0422     		movs	r2, #4
 1642 0024 0DEB0201 		add	r1, sp, r2
 1643 0028 2046     		mov	r0, r4
 1644              	.LVL191:
 889:Src/stream_buffer.c ****             xReturn = ( size_t ) xTempReturn;
 1645              		.loc 1 889 22 view .LVU486
 1646 002a FFF7FEFF 		bl	prvReadBytesFromBuffer
 1647              	.LVL192:
 890:Src/stream_buffer.c ****         }
 1648              		.loc 1 890 13 is_stmt 1 view .LVU487
 890:Src/stream_buffer.c ****         }
 1649              		.loc 1 890 21 is_stmt 0 view .LVU488
 1650 002e 0198     		ldr	r0, [sp, #4]
 1651              	.LVL193:
 890:Src/stream_buffer.c ****         }
 1652              		.loc 1 890 21 view .LVU489
 1653 0030 F4E7     		b	.L93
 1654              		.cfi_endproc
 1655              	.LFE14:
 1657              		.section	.text.xStreamBufferReceiveFromISR,"ax",%progbits
 1658              		.align	1
 1659              		.global	xStreamBufferReceiveFromISR
 1660              		.syntax unified
 1661              		.thumb
 1662              		.thumb_func
 1663              		.fpu softvfp
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 64


 1665              	xStreamBufferReceiveFromISR:
 1666              	.LVL194:
 1667              	.LFB15:
 915:Src/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1668              		.loc 1 915 1 is_stmt 1 view -0
 1669              		.cfi_startproc
 1670              		@ args = 0, pretend = 0, frame = 0
 1671              		@ frame_needed = 0, uses_anonymous_args = 0
 915:Src/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1672              		.loc 1 915 1 is_stmt 0 view .LVU491
 1673 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1674              	.LCFI38:
 1675              		.cfi_def_cfa_offset 24
 1676              		.cfi_offset 4, -24
 1677              		.cfi_offset 5, -20
 1678              		.cfi_offset 6, -16
 1679              		.cfi_offset 7, -12
 1680              		.cfi_offset 8, -8
 1681              		.cfi_offset 14, -4
 1682 0004 82B0     		sub	sp, sp, #8
 1683              	.LCFI39:
 1684              		.cfi_def_cfa_offset 32
 1685 0006 0446     		mov	r4, r0
 1686 0008 0D46     		mov	r5, r1
 1687 000a 1646     		mov	r6, r2
 1688 000c 1F46     		mov	r7, r3
 916:Src/stream_buffer.c ****     size_t xReceivedLength = 0, xBytesAvailable, xBytesToStoreMessageLength;
 1689              		.loc 1 916 5 is_stmt 1 view .LVU492
 1690              	.LVL195:
 917:Src/stream_buffer.c **** 
 1691              		.loc 1 917 5 view .LVU493
 919:Src/stream_buffer.c ****     configASSERT( pxStreamBuffer );
 1692              		.loc 1 919 29 view .LVU494
 920:Src/stream_buffer.c **** 
 1693              		.loc 1 920 35 view .LVU495
 927:Src/stream_buffer.c ****     {
 1694              		.loc 1 927 5 view .LVU496
 927:Src/stream_buffer.c ****     {
 1695              		.loc 1 927 25 is_stmt 0 view .LVU497
 1696 000e 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 1697              	.LVL196:
 927:Src/stream_buffer.c ****     {
 1698              		.loc 1 927 7 view .LVU498
 1699 0010 13F0010F 		tst	r3, #1
 1700 0014 0BD0     		beq	.L107
 929:Src/stream_buffer.c ****     }
 1701              		.loc 1 929 36 view .LVU499
 1702 0016 4FF00408 		mov	r8, #4
 1703              	.L104:
 1704              	.LVL197:
 936:Src/stream_buffer.c **** 
 1705              		.loc 1 936 5 is_stmt 1 view .LVU500
 936:Src/stream_buffer.c **** 
 1706              		.loc 1 936 23 is_stmt 0 view .LVU501
 1707 001a 2046     		mov	r0, r4
 1708              	.LVL198:
 936:Src/stream_buffer.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 65


 1709              		.loc 1 936 23 view .LVU502
 1710 001c FFF7FEFF 		bl	prvBytesInBuffer
 1711              	.LVL199:
 943:Src/stream_buffer.c ****     {
 1712              		.loc 1 943 5 is_stmt 1 view .LVU503
 943:Src/stream_buffer.c ****     {
 1713              		.loc 1 943 7 is_stmt 0 view .LVU504
 1714 0020 8045     		cmp	r8, r0
 1715 0022 07D3     		bcc	.L110
 917:Src/stream_buffer.c **** 
 1716              		.loc 1 917 12 view .LVU505
 1717 0024 0025     		movs	r5, #0
 1718              	.LVL200:
 959:Src/stream_buffer.c ****     }
 1719              		.loc 1 959 33 is_stmt 1 view .LVU506
 962:Src/stream_buffer.c **** 
 1720              		.loc 1 962 74 view .LVU507
 964:Src/stream_buffer.c **** }
 1721              		.loc 1 964 5 view .LVU508
 1722              	.L103:
 965:Src/stream_buffer.c **** /*-----------------------------------------------------------*/
 1723              		.loc 1 965 1 is_stmt 0 view .LVU509
 1724 0026 2846     		mov	r0, r5
 1725 0028 02B0     		add	sp, sp, #8
 1726              	.LCFI40:
 1727              		.cfi_remember_state
 1728              		.cfi_def_cfa_offset 24
 1729              		@ sp needed
 1730 002a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1731              	.LVL201:
 1732              	.L107:
 1733              	.LCFI41:
 1734              		.cfi_restore_state
 933:Src/stream_buffer.c ****     }
 1735              		.loc 1 933 36 view .LVU510
 1736 002e 4FF00008 		mov	r8, #0
 1737 0032 F2E7     		b	.L104
 1738              	.LVL202:
 1739              	.L110:
 945:Src/stream_buffer.c **** 
 1740              		.loc 1 945 9 is_stmt 1 view .LVU511
 945:Src/stream_buffer.c **** 
 1741              		.loc 1 945 27 is_stmt 0 view .LVU512
 1742 0034 0346     		mov	r3, r0
 1743 0036 3246     		mov	r2, r6
 1744 0038 2946     		mov	r1, r5
 1745 003a 2046     		mov	r0, r4
 1746              	.LVL203:
 945:Src/stream_buffer.c **** 
 1747              		.loc 1 945 27 view .LVU513
 1748 003c FFF7FEFF 		bl	prvReadMessageFromBuffer
 1749              	.LVL204:
 948:Src/stream_buffer.c ****         {
 1750              		.loc 1 948 9 is_stmt 1 view .LVU514
 948:Src/stream_buffer.c ****         {
 1751              		.loc 1 948 11 is_stmt 0 view .LVU515
 1752 0040 0546     		mov	r5, r0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 66


 1753              	.LVL205:
 948:Src/stream_buffer.c ****         {
 1754              		.loc 1 948 11 view .LVU516
 1755 0042 0028     		cmp	r0, #0
 1756 0044 EFD0     		beq	.L103
 1757              	.LBB25:
 950:Src/stream_buffer.c ****         }
 1758              		.loc 1 950 13 is_stmt 1 view .LVU517
 950:Src/stream_buffer.c ****         }
 1759              		.loc 1 950 13 view .LVU518
 1760              	.LBB26:
 1761              	.LBI26:
 212:Inc/portmacro.h ****     {
 1762              		.loc 2 212 38 view .LVU519
 1763              	.LBB27:
 214:Inc/portmacro.h **** 
 1764              		.loc 2 214 9 view .LVU520
 216:Inc/portmacro.h ****         (
 1765              		.loc 2 216 9 view .LVU521
 1766              		.syntax unified
 1767              	@ 216 "Inc/portmacro.h" 1
 1768 0046 EFF31188 			mrs r8, basepri											
 1769 004a 4FF0BF03 		mov r3, #191												
 1770 004e 83F31188 		msr basepri, r3											
 1771 0052 BFF36F8F 		isb														
 1772 0056 BFF34F8F 		dsb														
 1773              	
 1774              	@ 0 "" 2
 1775              	.LVL206:
 228:Inc/portmacro.h ****     }
 1776              		.loc 2 228 9 view .LVU522
 228:Inc/portmacro.h ****     }
 1777              		.loc 2 228 9 is_stmt 0 view .LVU523
 1778              		.thumb
 1779              		.syntax unified
 1780              	.LBE27:
 1781              	.LBE26:
 950:Src/stream_buffer.c ****         }
 1782              		.loc 1 950 13 is_stmt 1 view .LVU524
 1783 005a 6369     		ldr	r3, [r4, #20]
 1784 005c 4BB1     		cbz	r3, .L106
 950:Src/stream_buffer.c ****         }
 1785              		.loc 1 950 13 discriminator 1 view .LVU525
 1786 005e 6069     		ldr	r0, [r4, #20]
 1787              	.LVL207:
 950:Src/stream_buffer.c ****         }
 1788              		.loc 1 950 13 is_stmt 0 discriminator 1 view .LVU526
 1789 0060 0197     		str	r7, [sp, #4]
 1790 0062 0026     		movs	r6, #0
 1791              	.LVL208:
 950:Src/stream_buffer.c ****         }
 1792              		.loc 1 950 13 discriminator 1 view .LVU527
 1793 0064 0096     		str	r6, [sp]
 1794 0066 3346     		mov	r3, r6
 1795 0068 3246     		mov	r2, r6
 1796 006a 3146     		mov	r1, r6
 1797 006c FFF7FEFF 		bl	xTaskGenericNotifyFromISR
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 67


 1798              	.LVL209:
 950:Src/stream_buffer.c ****         }
 1799              		.loc 1 950 13 is_stmt 1 discriminator 1 view .LVU528
 1800 0070 6661     		str	r6, [r4, #20]
 1801              	.L106:
 950:Src/stream_buffer.c ****         }
 1802              		.loc 1 950 13 discriminator 3 view .LVU529
 1803              	.LVL210:
 1804              	.LBB28:
 1805              	.LBI28:
 232:Inc/portmacro.h ****     {
 1806              		.loc 2 232 34 discriminator 3 view .LVU530
 1807              	.LBB29:
 1808              		.loc 2 234 9 discriminator 3 view .LVU531
 1809              		.syntax unified
 1810              	@ 234 "Inc/portmacro.h" 1
 1811 0072 88F31188 			msr basepri, r8	
 1812              	@ 0 "" 2
 235:Inc/portmacro.h ****         (
 236:Inc/portmacro.h ****             "	msr basepri, %0	"::"r" ( ulNewMaskValue ) : "memory"
 237:Inc/portmacro.h ****         );
 238:Inc/portmacro.h ****     }
 1813              		.loc 2 238 5 is_stmt 0 discriminator 3 view .LVU532
 1814              		.thumb
 1815              		.syntax unified
 1816 0076 D6E7     		b	.L103
 1817              	.LBE29:
 1818              	.LBE28:
 1819              	.LBE25:
 1820              		.cfi_endproc
 1821              	.LFE15:
 1823              		.section	.text.xStreamBufferIsEmpty,"ax",%progbits
 1824              		.align	1
 1825              		.global	xStreamBufferIsEmpty
 1826              		.syntax unified
 1827              		.thumb
 1828              		.thumb_func
 1829              		.fpu softvfp
 1831              	xStreamBufferIsEmpty:
 1832              	.LVL211:
 1833              	.LFB17:
1021:Src/stream_buffer.c ****     const StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1834              		.loc 1 1021 1 is_stmt 1 view -0
 1835              		.cfi_startproc
 1836              		@ args = 0, pretend = 0, frame = 0
 1837              		@ frame_needed = 0, uses_anonymous_args = 0
 1838              		@ link register save eliminated.
1022:Src/stream_buffer.c ****     BaseType_t xReturn;
 1839              		.loc 1 1022 5 view .LVU534
1023:Src/stream_buffer.c ****     size_t xTail;
 1840              		.loc 1 1023 5 view .LVU535
1024:Src/stream_buffer.c **** 
 1841              		.loc 1 1024 5 view .LVU536
1026:Src/stream_buffer.c **** 
 1842              		.loc 1 1026 35 view .LVU537
1029:Src/stream_buffer.c **** 
 1843              		.loc 1 1029 5 view .LVU538
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 68


1029:Src/stream_buffer.c **** 
 1844              		.loc 1 1029 11 is_stmt 0 view .LVU539
 1845 0000 0368     		ldr	r3, [r0]
 1846              	.LVL212:
1031:Src/stream_buffer.c ****     {
 1847              		.loc 1 1031 5 is_stmt 1 view .LVU540
1031:Src/stream_buffer.c ****     {
 1848              		.loc 1 1031 23 is_stmt 0 view .LVU541
 1849 0002 4268     		ldr	r2, [r0, #4]
1031:Src/stream_buffer.c ****     {
 1850              		.loc 1 1031 7 view .LVU542
 1851 0004 9A42     		cmp	r2, r3
 1852 0006 01D0     		beq	.L114
1037:Src/stream_buffer.c ****     }
 1853              		.loc 1 1037 17 view .LVU543
 1854 0008 0020     		movs	r0, #0
 1855              	.LVL213:
1040:Src/stream_buffer.c **** }
 1856              		.loc 1 1040 5 is_stmt 1 view .LVU544
1041:Src/stream_buffer.c **** /*-----------------------------------------------------------*/
 1857              		.loc 1 1041 1 is_stmt 0 view .LVU545
 1858 000a 7047     		bx	lr
 1859              	.LVL214:
 1860              	.L114:
1033:Src/stream_buffer.c ****     }
 1861              		.loc 1 1033 17 view .LVU546
 1862 000c 0120     		movs	r0, #1
 1863              	.LVL215:
1033:Src/stream_buffer.c ****     }
 1864              		.loc 1 1033 17 view .LVU547
 1865 000e 7047     		bx	lr
 1866              		.cfi_endproc
 1867              	.LFE17:
 1869              		.section	.text.xStreamBufferIsFull,"ax",%progbits
 1870              		.align	1
 1871              		.global	xStreamBufferIsFull
 1872              		.syntax unified
 1873              		.thumb
 1874              		.thumb_func
 1875              		.fpu softvfp
 1877              	xStreamBufferIsFull:
 1878              	.LVL216:
 1879              	.LFB18:
1045:Src/stream_buffer.c ****     BaseType_t xReturn;
 1880              		.loc 1 1045 1 is_stmt 1 view -0
 1881              		.cfi_startproc
 1882              		@ args = 0, pretend = 0, frame = 0
 1883              		@ frame_needed = 0, uses_anonymous_args = 0
1045:Src/stream_buffer.c ****     BaseType_t xReturn;
 1884              		.loc 1 1045 1 is_stmt 0 view .LVU549
 1885 0000 10B5     		push	{r4, lr}
 1886              	.LCFI42:
 1887              		.cfi_def_cfa_offset 8
 1888              		.cfi_offset 4, -8
 1889              		.cfi_offset 14, -4
1046:Src/stream_buffer.c ****     size_t xBytesToStoreMessageLength;
 1890              		.loc 1 1046 5 is_stmt 1 view .LVU550
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 69


1047:Src/stream_buffer.c ****     const StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1891              		.loc 1 1047 5 view .LVU551
1048:Src/stream_buffer.c **** 
 1892              		.loc 1 1048 5 view .LVU552
 1893              	.LVL217:
1050:Src/stream_buffer.c **** 
 1894              		.loc 1 1050 35 view .LVU553
1056:Src/stream_buffer.c ****     {
 1895              		.loc 1 1056 5 view .LVU554
1056:Src/stream_buffer.c ****     {
 1896              		.loc 1 1056 25 is_stmt 0 view .LVU555
 1897 0002 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
1056:Src/stream_buffer.c ****     {
 1898              		.loc 1 1056 7 view .LVU556
 1899 0004 13F0010F 		tst	r3, #1
 1900 0008 06D0     		beq	.L118
1058:Src/stream_buffer.c ****     }
 1901              		.loc 1 1058 36 view .LVU557
 1902 000a 0424     		movs	r4, #4
 1903              	.L116:
 1904              	.LVL218:
1066:Src/stream_buffer.c ****     {
 1905              		.loc 1 1066 5 is_stmt 1 view .LVU558
1066:Src/stream_buffer.c ****     {
 1906              		.loc 1 1066 9 is_stmt 0 view .LVU559
 1907 000c FFF7FEFF 		bl	xStreamBufferSpacesAvailable
 1908              	.LVL219:
1066:Src/stream_buffer.c ****     {
 1909              		.loc 1 1066 7 view .LVU560
 1910 0010 A042     		cmp	r0, r4
 1911 0012 03D8     		bhi	.L119
1068:Src/stream_buffer.c ****     }
 1912              		.loc 1 1068 17 view .LVU561
 1913 0014 0120     		movs	r0, #1
 1914              	.L115:
1076:Src/stream_buffer.c **** /*-----------------------------------------------------------*/
 1915              		.loc 1 1076 1 view .LVU562
 1916 0016 10BD     		pop	{r4, pc}
 1917              	.LVL220:
 1918              	.L118:
1062:Src/stream_buffer.c ****     }
 1919              		.loc 1 1062 36 view .LVU563
 1920 0018 0024     		movs	r4, #0
 1921 001a F7E7     		b	.L116
 1922              	.LVL221:
 1923              	.L119:
1072:Src/stream_buffer.c ****     }
 1924              		.loc 1 1072 17 view .LVU564
 1925 001c 0020     		movs	r0, #0
 1926              	.LVL222:
1075:Src/stream_buffer.c **** }
 1927              		.loc 1 1075 5 is_stmt 1 view .LVU565
1075:Src/stream_buffer.c **** }
 1928              		.loc 1 1075 12 is_stmt 0 view .LVU566
 1929 001e FAE7     		b	.L115
 1930              		.cfi_endproc
 1931              	.LFE18:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 70


 1933              		.section	.text.xStreamBufferSendCompletedFromISR,"ax",%progbits
 1934              		.align	1
 1935              		.global	xStreamBufferSendCompletedFromISR
 1936              		.syntax unified
 1937              		.thumb
 1938              		.thumb_func
 1939              		.fpu softvfp
 1941              	xStreamBufferSendCompletedFromISR:
 1942              	.LVL223:
 1943              	.LFB19:
1081:Src/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1944              		.loc 1 1081 1 is_stmt 1 view -0
 1945              		.cfi_startproc
 1946              		@ args = 0, pretend = 0, frame = 0
 1947              		@ frame_needed = 0, uses_anonymous_args = 0
1081:Src/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1948              		.loc 1 1081 1 is_stmt 0 view .LVU568
 1949 0000 70B5     		push	{r4, r5, r6, lr}
 1950              	.LCFI43:
 1951              		.cfi_def_cfa_offset 16
 1952              		.cfi_offset 4, -16
 1953              		.cfi_offset 5, -12
 1954              		.cfi_offset 6, -8
 1955              		.cfi_offset 14, -4
 1956 0002 82B0     		sub	sp, sp, #8
 1957              	.LCFI44:
 1958              		.cfi_def_cfa_offset 24
1082:Src/stream_buffer.c ****     BaseType_t xReturn;
 1959              		.loc 1 1082 5 is_stmt 1 view .LVU569
 1960              	.LVL224:
1083:Src/stream_buffer.c ****     UBaseType_t uxSavedInterruptStatus;
 1961              		.loc 1 1083 5 view .LVU570
1084:Src/stream_buffer.c **** 
 1962              		.loc 1 1084 5 view .LVU571
1086:Src/stream_buffer.c **** 
 1963              		.loc 1 1086 35 view .LVU572
1088:Src/stream_buffer.c ****     {
 1964              		.loc 1 1088 5 view .LVU573
 1965              	.LBB30:
 1966              	.LBI30:
 212:Inc/portmacro.h ****     {
 1967              		.loc 2 212 38 view .LVU574
 1968              	.LBB31:
 214:Inc/portmacro.h **** 
 1969              		.loc 2 214 9 view .LVU575
 216:Inc/portmacro.h ****         (
 1970              		.loc 2 216 9 view .LVU576
 1971              		.syntax unified
 1972              	@ 216 "Inc/portmacro.h" 1
 1973 0004 EFF31186 			mrs r6, basepri											
 1974 0008 4FF0BF03 		mov r3, #191												
 1975 000c 83F31188 		msr basepri, r3											
 1976 0010 BFF36F8F 		isb														
 1977 0014 BFF34F8F 		dsb														
 1978              	
 1979              	@ 0 "" 2
 1980              	.LVL225:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 71


 228:Inc/portmacro.h ****     }
 1981              		.loc 2 228 9 view .LVU577
 228:Inc/portmacro.h ****     }
 1982              		.loc 2 228 9 is_stmt 0 view .LVU578
 1983              		.thumb
 1984              		.syntax unified
 1985              	.LBE31:
 1986              	.LBE30:
1090:Src/stream_buffer.c ****         {
 1987              		.loc 1 1090 9 is_stmt 1 view .LVU579
1090:Src/stream_buffer.c ****         {
 1988              		.loc 1 1090 31 is_stmt 0 view .LVU580
 1989 0018 0369     		ldr	r3, [r0, #16]
1090:Src/stream_buffer.c ****         {
 1990              		.loc 1 1090 11 view .LVU581
 1991 001a 7BB1     		cbz	r3, .L123
 1992 001c 0446     		mov	r4, r0
1092:Src/stream_buffer.c ****                                          ( uint32_t ) 0,
 1993              		.loc 1 1092 13 is_stmt 1 view .LVU582
1092:Src/stream_buffer.c ****                                          ( uint32_t ) 0,
 1994              		.loc 1 1092 22 is_stmt 0 view .LVU583
 1995 001e 0069     		ldr	r0, [r0, #16]
 1996              	.LVL226:
1092:Src/stream_buffer.c ****                                          ( uint32_t ) 0,
 1997              		.loc 1 1092 22 view .LVU584
 1998 0020 0191     		str	r1, [sp, #4]
 1999 0022 0025     		movs	r5, #0
 2000 0024 0095     		str	r5, [sp]
 2001 0026 2B46     		mov	r3, r5
 2002 0028 2A46     		mov	r2, r5
 2003 002a 2946     		mov	r1, r5
 2004              	.LVL227:
1092:Src/stream_buffer.c ****                                          ( uint32_t ) 0,
 2005              		.loc 1 1092 22 view .LVU585
 2006 002c FFF7FEFF 		bl	xTaskGenericNotifyFromISR
 2007              	.LVL228:
1096:Src/stream_buffer.c ****             xReturn = pdTRUE;
 2008              		.loc 1 1096 13 is_stmt 1 view .LVU586
1096:Src/stream_buffer.c ****             xReturn = pdTRUE;
 2009              		.loc 1 1096 55 is_stmt 0 view .LVU587
 2010 0030 2561     		str	r5, [r4, #16]
1097:Src/stream_buffer.c ****         }
 2011              		.loc 1 1097 13 is_stmt 1 view .LVU588
 2012              	.LVL229:
1097:Src/stream_buffer.c ****         }
 2013              		.loc 1 1097 21 is_stmt 0 view .LVU589
 2014 0032 0120     		movs	r0, #1
 2015              	.LVL230:
 2016              	.L122:
1104:Src/stream_buffer.c **** 
 2017              		.loc 1 1104 5 is_stmt 1 view .LVU590
 2018              	.LBB32:
 2019              	.LBI32:
 232:Inc/portmacro.h ****     {
 2020              		.loc 2 232 34 view .LVU591
 2021              	.LBB33:
 234:Inc/portmacro.h ****         (
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 72


 2022              		.loc 2 234 9 view .LVU592
 2023              		.syntax unified
 2024              	@ 234 "Inc/portmacro.h" 1
 2025 0034 86F31188 			msr basepri, r6	
 2026              	@ 0 "" 2
 2027              	.LVL231:
 234:Inc/portmacro.h ****         (
 2028              		.loc 2 234 9 is_stmt 0 view .LVU593
 2029              		.thumb
 2030              		.syntax unified
 2031              	.LBE33:
 2032              	.LBE32:
1106:Src/stream_buffer.c **** }
 2033              		.loc 1 1106 5 is_stmt 1 view .LVU594
1107:Src/stream_buffer.c **** /*-----------------------------------------------------------*/
 2034              		.loc 1 1107 1 is_stmt 0 view .LVU595
 2035 0038 02B0     		add	sp, sp, #8
 2036              	.LCFI45:
 2037              		.cfi_remember_state
 2038              		.cfi_def_cfa_offset 16
 2039              		@ sp needed
 2040 003a 70BD     		pop	{r4, r5, r6, pc}
 2041              	.LVL232:
 2042              	.L123:
 2043              	.LCFI46:
 2044              		.cfi_restore_state
1101:Src/stream_buffer.c ****         }
 2045              		.loc 1 1101 21 view .LVU596
 2046 003c 0020     		movs	r0, #0
 2047              	.LVL233:
1101:Src/stream_buffer.c ****         }
 2048              		.loc 1 1101 21 view .LVU597
 2049 003e F9E7     		b	.L122
 2050              		.cfi_endproc
 2051              	.LFE19:
 2053              		.section	.text.xStreamBufferReceiveCompletedFromISR,"ax",%progbits
 2054              		.align	1
 2055              		.global	xStreamBufferReceiveCompletedFromISR
 2056              		.syntax unified
 2057              		.thumb
 2058              		.thumb_func
 2059              		.fpu softvfp
 2061              	xStreamBufferReceiveCompletedFromISR:
 2062              	.LVL234:
 2063              	.LFB20:
1112:Src/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 2064              		.loc 1 1112 1 is_stmt 1 view -0
 2065              		.cfi_startproc
 2066              		@ args = 0, pretend = 0, frame = 0
 2067              		@ frame_needed = 0, uses_anonymous_args = 0
1112:Src/stream_buffer.c ****     StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 2068              		.loc 1 1112 1 is_stmt 0 view .LVU599
 2069 0000 70B5     		push	{r4, r5, r6, lr}
 2070              	.LCFI47:
 2071              		.cfi_def_cfa_offset 16
 2072              		.cfi_offset 4, -16
 2073              		.cfi_offset 5, -12
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 73


 2074              		.cfi_offset 6, -8
 2075              		.cfi_offset 14, -4
 2076 0002 82B0     		sub	sp, sp, #8
 2077              	.LCFI48:
 2078              		.cfi_def_cfa_offset 24
1113:Src/stream_buffer.c ****     BaseType_t xReturn;
 2079              		.loc 1 1113 5 is_stmt 1 view .LVU600
 2080              	.LVL235:
1114:Src/stream_buffer.c ****     UBaseType_t uxSavedInterruptStatus;
 2081              		.loc 1 1114 5 view .LVU601
1115:Src/stream_buffer.c **** 
 2082              		.loc 1 1115 5 view .LVU602
1117:Src/stream_buffer.c **** 
 2083              		.loc 1 1117 35 view .LVU603
1119:Src/stream_buffer.c ****     {
 2084              		.loc 1 1119 5 view .LVU604
 2085              	.LBB34:
 2086              	.LBI34:
 212:Inc/portmacro.h ****     {
 2087              		.loc 2 212 38 view .LVU605
 2088              	.LBB35:
 214:Inc/portmacro.h **** 
 2089              		.loc 2 214 9 view .LVU606
 216:Inc/portmacro.h ****         (
 2090              		.loc 2 216 9 view .LVU607
 2091              		.syntax unified
 2092              	@ 216 "Inc/portmacro.h" 1
 2093 0004 EFF31186 			mrs r6, basepri											
 2094 0008 4FF0BF03 		mov r3, #191												
 2095 000c 83F31188 		msr basepri, r3											
 2096 0010 BFF36F8F 		isb														
 2097 0014 BFF34F8F 		dsb														
 2098              	
 2099              	@ 0 "" 2
 2100              	.LVL236:
 228:Inc/portmacro.h ****     }
 2101              		.loc 2 228 9 view .LVU608
 228:Inc/portmacro.h ****     }
 2102              		.loc 2 228 9 is_stmt 0 view .LVU609
 2103              		.thumb
 2104              		.syntax unified
 2105              	.LBE35:
 2106              	.LBE34:
1121:Src/stream_buffer.c ****         {
 2107              		.loc 1 1121 9 is_stmt 1 view .LVU610
1121:Src/stream_buffer.c ****         {
 2108              		.loc 1 1121 31 is_stmt 0 view .LVU611
 2109 0018 4369     		ldr	r3, [r0, #20]
1121:Src/stream_buffer.c ****         {
 2110              		.loc 1 1121 11 view .LVU612
 2111 001a 7BB1     		cbz	r3, .L127
 2112 001c 0446     		mov	r4, r0
1123:Src/stream_buffer.c ****                                          ( uint32_t ) 0,
 2113              		.loc 1 1123 13 is_stmt 1 view .LVU613
1123:Src/stream_buffer.c ****                                          ( uint32_t ) 0,
 2114              		.loc 1 1123 22 is_stmt 0 view .LVU614
 2115 001e 4069     		ldr	r0, [r0, #20]
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 74


 2116              	.LVL237:
1123:Src/stream_buffer.c ****                                          ( uint32_t ) 0,
 2117              		.loc 1 1123 22 view .LVU615
 2118 0020 0191     		str	r1, [sp, #4]
 2119 0022 0025     		movs	r5, #0
 2120 0024 0095     		str	r5, [sp]
 2121 0026 2B46     		mov	r3, r5
 2122 0028 2A46     		mov	r2, r5
 2123 002a 2946     		mov	r1, r5
 2124              	.LVL238:
1123:Src/stream_buffer.c ****                                          ( uint32_t ) 0,
 2125              		.loc 1 1123 22 view .LVU616
 2126 002c FFF7FEFF 		bl	xTaskGenericNotifyFromISR
 2127              	.LVL239:
1127:Src/stream_buffer.c ****             xReturn = pdTRUE;
 2128              		.loc 1 1127 13 is_stmt 1 view .LVU617
1127:Src/stream_buffer.c ****             xReturn = pdTRUE;
 2129              		.loc 1 1127 52 is_stmt 0 view .LVU618
 2130 0030 6561     		str	r5, [r4, #20]
1128:Src/stream_buffer.c ****         }
 2131              		.loc 1 1128 13 is_stmt 1 view .LVU619
 2132              	.LVL240:
1128:Src/stream_buffer.c ****         }
 2133              		.loc 1 1128 21 is_stmt 0 view .LVU620
 2134 0032 0120     		movs	r0, #1
 2135              	.LVL241:
 2136              	.L126:
1135:Src/stream_buffer.c **** 
 2137              		.loc 1 1135 5 is_stmt 1 view .LVU621
 2138              	.LBB36:
 2139              	.LBI36:
 232:Inc/portmacro.h ****     {
 2140              		.loc 2 232 34 view .LVU622
 2141              	.LBB37:
 234:Inc/portmacro.h ****         (
 2142              		.loc 2 234 9 view .LVU623
 2143              		.syntax unified
 2144              	@ 234 "Inc/portmacro.h" 1
 2145 0034 86F31188 			msr basepri, r6	
 2146              	@ 0 "" 2
 2147              	.LVL242:
 234:Inc/portmacro.h ****         (
 2148              		.loc 2 234 9 is_stmt 0 view .LVU624
 2149              		.thumb
 2150              		.syntax unified
 2151              	.LBE37:
 2152              	.LBE36:
1137:Src/stream_buffer.c **** }
 2153              		.loc 1 1137 5 is_stmt 1 view .LVU625
1138:Src/stream_buffer.c **** /*-----------------------------------------------------------*/
 2154              		.loc 1 1138 1 is_stmt 0 view .LVU626
 2155 0038 02B0     		add	sp, sp, #8
 2156              	.LCFI49:
 2157              		.cfi_remember_state
 2158              		.cfi_def_cfa_offset 16
 2159              		@ sp needed
 2160 003a 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 75


 2161              	.LVL243:
 2162              	.L127:
 2163              	.LCFI50:
 2164              		.cfi_restore_state
1132:Src/stream_buffer.c ****         }
 2165              		.loc 1 1132 21 view .LVU627
 2166 003c 0020     		movs	r0, #0
 2167              	.LVL244:
1132:Src/stream_buffer.c ****         }
 2168              		.loc 1 1132 21 view .LVU628
 2169 003e F9E7     		b	.L126
 2170              		.cfi_endproc
 2171              	.LFE20:
 2173              		.text
 2174              	.Letext0:
 2175              		.file 3 "c:\\software\\embeddedgcc\\arm_gcc\\arm-none-eabi\\include\\machine\\_default_types.h"
 2176              		.file 4 "c:\\software\\embeddedgcc\\arm_gcc\\arm-none-eabi\\include\\sys\\_stdint.h"
 2177              		.file 5 "c:\\software\\embeddedgcc\\arm_gcc\\lib\\gcc\\arm-none-eabi\\9.2.1\\include\\stddef.h"
 2178              		.file 6 "c:\\software\\embeddedgcc\\arm_gcc\\arm-none-eabi\\include\\sys\\lock.h"
 2179              		.file 7 "c:\\software\\embeddedgcc\\arm_gcc\\arm-none-eabi\\include\\sys\\_types.h"
 2180              		.file 8 "c:\\software\\embeddedgcc\\arm_gcc\\arm-none-eabi\\include\\sys\\reent.h"
 2181              		.file 9 "Inc/task.h"
 2182              		.file 10 "Inc/stream_buffer.h"
 2183              		.file 11 "<built-in>"
 2184              		.file 12 "Inc/portable.h"
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 76


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stream_buffer.c
C:\Users\User\AppData\Local\Temp\ccP2tCzV.s:16     .text.prvBytesInBuffer:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccP2tCzV.s:23     .text.prvBytesInBuffer:0000000000000000 prvBytesInBuffer
C:\Users\User\AppData\Local\Temp\ccP2tCzV.s:65     .text.prvInitialiseNewStreamBuffer:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccP2tCzV.s:71     .text.prvInitialiseNewStreamBuffer:0000000000000000 prvInitialiseNewStreamBuffer
C:\Users\User\AppData\Local\Temp\ccP2tCzV.s:122    .text.prvWriteBytesToBuffer:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccP2tCzV.s:128    .text.prvWriteBytesToBuffer:0000000000000000 prvWriteBytesToBuffer
C:\Users\User\AppData\Local\Temp\ccP2tCzV.s:212    .text.prvWriteMessageToBuffer:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccP2tCzV.s:218    .text.prvWriteMessageToBuffer:0000000000000000 prvWriteMessageToBuffer
C:\Users\User\AppData\Local\Temp\ccP2tCzV.s:330    .text.prvReadBytesFromBuffer:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccP2tCzV.s:336    .text.prvReadBytesFromBuffer:0000000000000000 prvReadBytesFromBuffer
C:\Users\User\AppData\Local\Temp\ccP2tCzV.s:422    .text.prvReadMessageFromBuffer:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccP2tCzV.s:428    .text.prvReadMessageFromBuffer:0000000000000000 prvReadMessageFromBuffer
C:\Users\User\AppData\Local\Temp\ccP2tCzV.s:542    .text.xStreamBufferGenericCreate:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccP2tCzV.s:549    .text.xStreamBufferGenericCreate:0000000000000000 xStreamBufferGenericCreate
C:\Users\User\AppData\Local\Temp\ccP2tCzV.s:639    .text.vStreamBufferDelete:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccP2tCzV.s:646    .text.vStreamBufferDelete:0000000000000000 vStreamBufferDelete
C:\Users\User\AppData\Local\Temp\ccP2tCzV.s:689    .text.xStreamBufferReset:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccP2tCzV.s:696    .text.xStreamBufferReset:0000000000000000 xStreamBufferReset
C:\Users\User\AppData\Local\Temp\ccP2tCzV.s:777    .text.xStreamBufferSetTriggerLevel:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccP2tCzV.s:784    .text.xStreamBufferSetTriggerLevel:0000000000000000 xStreamBufferSetTriggerLevel
C:\Users\User\AppData\Local\Temp\ccP2tCzV.s:831    .text.xStreamBufferSpacesAvailable:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccP2tCzV.s:838    .text.xStreamBufferSpacesAvailable:0000000000000000 xStreamBufferSpacesAvailable
C:\Users\User\AppData\Local\Temp\ccP2tCzV.s:905    .text.xStreamBufferBytesAvailable:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccP2tCzV.s:912    .text.xStreamBufferBytesAvailable:0000000000000000 xStreamBufferBytesAvailable
C:\Users\User\AppData\Local\Temp\ccP2tCzV.s:940    .text.xStreamBufferSend:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccP2tCzV.s:947    .text.xStreamBufferSend:0000000000000000 xStreamBufferSend
C:\Users\User\AppData\Local\Temp\ccP2tCzV.s:1191   .text.xStreamBufferSendFromISR:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccP2tCzV.s:1198   .text.xStreamBufferSendFromISR:0000000000000000 xStreamBufferSendFromISR
C:\Users\User\AppData\Local\Temp\ccP2tCzV.s:1370   .text.xStreamBufferReceive:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccP2tCzV.s:1377   .text.xStreamBufferReceive:0000000000000000 xStreamBufferReceive
C:\Users\User\AppData\Local\Temp\ccP2tCzV.s:1573   .text.xStreamBufferNextMessageLengthBytes:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccP2tCzV.s:1580   .text.xStreamBufferNextMessageLengthBytes:0000000000000000 xStreamBufferNextMessageLengthBytes
C:\Users\User\AppData\Local\Temp\ccP2tCzV.s:1658   .text.xStreamBufferReceiveFromISR:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccP2tCzV.s:1665   .text.xStreamBufferReceiveFromISR:0000000000000000 xStreamBufferReceiveFromISR
C:\Users\User\AppData\Local\Temp\ccP2tCzV.s:1824   .text.xStreamBufferIsEmpty:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccP2tCzV.s:1831   .text.xStreamBufferIsEmpty:0000000000000000 xStreamBufferIsEmpty
C:\Users\User\AppData\Local\Temp\ccP2tCzV.s:1870   .text.xStreamBufferIsFull:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccP2tCzV.s:1877   .text.xStreamBufferIsFull:0000000000000000 xStreamBufferIsFull
C:\Users\User\AppData\Local\Temp\ccP2tCzV.s:1934   .text.xStreamBufferSendCompletedFromISR:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccP2tCzV.s:1941   .text.xStreamBufferSendCompletedFromISR:0000000000000000 xStreamBufferSendCompletedFromISR
C:\Users\User\AppData\Local\Temp\ccP2tCzV.s:2054   .text.xStreamBufferReceiveCompletedFromISR:0000000000000000 $t
C:\Users\User\AppData\Local\Temp\ccP2tCzV.s:2061   .text.xStreamBufferReceiveCompletedFromISR:0000000000000000 xStreamBufferReceiveCompletedFromISR

UNDEFINED SYMBOLS
memset
memcpy
pvPortMalloc
vPortFree
vPortEnterCritical
vPortExitCritical
vTaskSetTimeOutState
xTaskGenericNotifyStateClear
xTaskGetCurrentTaskHandle
xTaskGenericNotifyWait
xTaskCheckForTimeOut
ARM GAS  C:\Users\User\AppData\Local\Temp\ccP2tCzV.s 			page 77


vTaskSuspendAll
xTaskGenericNotify
xTaskResumeAll
xTaskGenericNotifyFromISR
